{"version":3,"sources":["flash/filters/GlowFilter.ts"],"names":["GlowFilter","GlowFilter.constructor","GlowFilter.alpha","GlowFilter.blurX","GlowFilter.blurY","GlowFilter.color","GlowFilter.quality","GlowFilter.clone","GlowFilter.___updateColorMatrix"],"mappings":"AAAA;;GAEG;;;;;;AAGH,2BAA4C,gCAAgC,CAAC,CAAA;AAE7E,oCAAkC,uBAAuB,CAAC,CAAA;AAC1D,sBAAoB,mBAAmB,CAAC,CAAA;AAExC;IAAgCA,8BAAeA;IAE3CA,oBAAYA,aAA2BA,EAAEA,KAAuBA,EAAEA,KAAkBA,EAAEA,KAAkBA,EAAEA,KAAkBA,EAChHA,QAAmBA,EAAEA,OAAwCA,EAAEA,KAAqBA,EAAEA,QAAwBA;QADjFC,qBAAuBA,GAAvBA,gBAAuBA;QAAEA,qBAAkBA,GAAlBA,WAAkBA;QAAEA,qBAAkBA,GAAlBA,WAAkBA;QAAEA,qBAAkBA,GAAlBA,WAAkBA;QAChHA,wBAAmBA,GAAnBA,YAAmBA;QAAEA,uBAAwCA,GAAxCA,UAAiBA,yCAAmBA,CAACA,GAAGA;QAAEA,qBAAqBA,GAArBA,aAAqBA;QAAEA,wBAAwBA,GAAxBA,gBAAwBA;QACtHA,kBAAMA,aAAaA,CAACA,CAACA;QAoDzBA,UAAKA,GAAWA,KAAKA,CAACA;QACtBA,aAAQA,GAAWA,KAAKA,CAACA;QAUzBA,aAAQA,GAAUA,CAACA,CAACA;QAqBZA,WAAMA,GAAUA,QAAQA,CAACA;QACzBA,WAAMA,GAAUA,CAACA,CAACA;QApFtBA,IAAIA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;QACnBA,IAAIA,CAACA,KAAKA,GAAGA,aAAKA,CAACA,SAASA,CAACA,KAAKA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;QAC1CA,IAAIA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;QACnBA,IAAIA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;QACnBA,IAAIA,CAACA,QAAQA,GAAGA,QAAQA,CAACA;QACzBA,IAAIA,CAACA,OAAOA,GAAGA,OAAOA,CAACA;QACvBA,IAAIA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;QACnBA,IAAIA,CAACA,QAAQA,GAAGA,QAAQA,CAACA;IAC7BA,CAACA;IAEDD,sBAAIA,6BAAKA;aAATA;YACIE,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA;QACvBA,CAACA;aAEDF,UAAUA,CAAQA;YACdE,IAAIA,CAACA,GAAGA,CAACA,KAAKA,IAAIA,CAACA,KAAKA,CAACA;YACzBA,IAAIA,CAACA,MAAMA,GAAGA,CAACA,CAACA;YAChBA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACJA,IAAIA,CAACA,mBAAmBA,EAAEA,CAACA;YAC/BA,CAACA;QACLA,CAACA;;;OARAF;IAUDA,sBAAIA,6BAAKA;aAATA;YACIG,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA;QAC1BA,CAACA;aAEDH,UAAUA,CAAQA;YACdG,IAAIA,CAACA,SAASA,GAAGA,CAACA,CAACA;QACvBA,CAACA;;;OAJAH;IAMDA,sBAAIA,6BAAKA;aAATA;YACII,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA;QAC1BA,CAACA;aAEDJ,UAAUA,CAAQA;YACdI,IAAIA,CAACA,SAASA,GAAGA,CAACA,CAACA;QACvBA,CAACA;;;OAJAJ;IAMDA,sBAAIA,6BAAKA;aAATA;YACIK,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA;QACvBA,CAACA;aAEDL,UAAUA,CAAQA;YACdK,CAACA,IAAIA,CAACA,CAACA;YACPA,IAAIA,CAACA,GAAGA,CAACA,KAAKA,IAAIA,CAACA,MAAMA,CAACA;YAC1BA,IAAIA,CAACA,MAAMA,GAAGA,CAACA,CAACA;YAChBA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACJA,IAAIA,CAACA,mBAAmBA,EAAEA,CAACA;YAC/BA,CAACA;QACLA,CAACA;;;OATAL;IAcDA,sBAAIA,+BAAOA;aAAXA;YACIM,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA;QACrBA,CAACA;aAEDN,UAAYA,CAAQA;YAChBM,IAAIA,CAACA,IAAIA,GAAGA,CAACA,CAACA;QAClBA,CAACA;;;OAJAN;IAQDA,0BAAKA,GAALA;QACIO,MAAMA,CAACA,IAAIA,UAAUA,CAACA,IAAIA,CAACA,cAAcA,EAAEA,IAAIA,CAACA,KAAKA,EAAEA,IAAIA,CAACA,KAAKA,EAAEA,IAAIA,CAACA,KAAKA,EAAEA,IAAIA,CAACA,KAAKA,EACrFA,IAAIA,CAACA,QAAQA,EAAEA,IAAIA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,KAAKA,EAAEA,IAAIA,CAACA,QAAQA,CAACA,CAACA;IAChEA,CAACA;IAEOP,wCAAmBA,GAA3BA;QACIQ,IAAIA,CAACA,GAAGA,CAACA,CAACA,IAAIA,CAACA,MAAMA,KAAKA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,IAAIA,CAACA;QAC7CA,IAAIA,CAACA,GAAGA,CAACA,CAACA,IAAIA,CAACA,MAAMA,KAAKA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,IAAIA,CAACA;QAC5CA,IAAIA,CAACA,GAAGA,CAACA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,CAACA,GAAGA,IAAIA,CAACA;QACpCA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,MAAMA,CAACA;QACpBA,IAAIA,EAAEA,GAAGA;YACLA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;YACbA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;YACbA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;YACbA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;SAChBA,CAACA;QACFA,IAAIA,CAACA,cAAcA,CAACA,EAAEA,CAACA,CAACA;IAC5BA,CAACA;IAKLR,iBAACA;AAADA,CA3FA,AA2FCA,EA3F+B,uBAAe,EA2F9C;AA3FY,kBAAU,aA2FtB,CAAA","file":"flash/filters/GlowFilter.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/30.\r\n */\r\n\r\nimport {BitmapFilter} from \"./BitmapFilter\";\r\nimport {GlowFilter as WebGLGlowFilter} from \"../../webgl/filters/GlowFilter\";\r\nimport {FilterManager} from \"../../webgl/FilterManager\";\r\nimport {BitmapFilterQuality} from \"./BitmapFilterQuality\";\r\nimport {_util} from \"../../_util/_util\";\r\n\r\nexport class GlowFilter extends WebGLGlowFilter implements BitmapFilter {\r\n\r\n    constructor(filterManager:FilterManager, color:number = 0xff0000, alpha:number = 1.0, blurX:number = 6.0, blurY:number = 6.0,\r\n                strength:number = 2, quality:number = BitmapFilterQuality.LOW, inner:boolean = false, knockout:boolean = false) {\r\n        super(filterManager);\r\n        this.color = color;\r\n        this.alpha = _util.limitInto(alpha, 0, 1);\r\n        this.blurX = blurX;\r\n        this.blurY = blurY;\r\n        this.strength = strength;\r\n        this.quality = quality;\r\n        this.inner = inner;\r\n        this.knockout = knockout;\r\n    }\r\n\r\n    get alpha():number {\r\n        return this._alpha;\r\n    }\r\n\r\n    set alpha(v:number) {\r\n        var b = v !== this.alpha;\r\n        this._alpha = v;\r\n        if (b) {\r\n            this.__updateColorMatrix();\r\n        }\r\n    }\r\n\r\n    get blurX():number {\r\n        return this.strengthX;\r\n    }\r\n\r\n    set blurX(v:number) {\r\n        this.strengthX = v;\r\n    }\r\n\r\n    get blurY():number {\r\n        return this.strengthY;\r\n    }\r\n\r\n    set blurY(v:number) {\r\n        this.strengthY = v;\r\n    }\r\n\r\n    get color():number {\r\n        return this._color;\r\n    }\r\n\r\n    set color(v:number) {\r\n        v |= 0;\r\n        var b = v !== this._color;\r\n        this._color = v;\r\n        if (b) {\r\n            this.__updateColorMatrix();\r\n        }\r\n    }\r\n\r\n    inner:boolean = false;\r\n    knockout:boolean = false;\r\n\r\n    get quality():number {\r\n        return this.pass;\r\n    }\r\n\r\n    set quality(v:number) {\r\n        this.pass = v;\r\n    }\r\n\r\n    strength:number = 2;\r\n\r\n    clone():GlowFilter {\r\n        return new GlowFilter(this._filterManager, this.color, this.alpha, this.blurX, this.blurY,\r\n            this.strength, this.quality, this.inner, this.knockout);\r\n    }\r\n\r\n    private __updateColorMatrix():void {\r\n        var r = ((this._color >>> 16) & 0xff) / 0xff;\r\n        var g = ((this._color >>> 8) & 0xff) / 0xff;\r\n        var b = (this._color & 0xff) / 0xff;\r\n        var a = this._alpha;\r\n        var cm = [\r\n            0, 0, 0, r, 0,\r\n            0, 0, 0, g, 0,\r\n            0, 0, 0, b, 0,\r\n            0, 0, 0, a, 0\r\n        ];\r\n        this.setColorMatrix(cm);\r\n    }\r\n\r\n    private _color:number = 0x000000;\r\n    private _alpha:number = 1;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}