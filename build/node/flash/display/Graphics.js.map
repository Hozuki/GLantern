{"version":3,"sources":["flash/display/Graphics.ts"],"names":[],"mappings":"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","file":"flash/display/Graphics.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/20.\r\n */\r\n\r\nimport {WebGLRenderer} from \"../../webgl/WebGLRenderer\";\r\nimport {ICopyable} from \"../../ICopyable\";\r\nimport {DisplayObject} from \"./DisplayObject\";\r\nimport {Matrix} from \"../geom/Matrix\";\r\nimport {SpreadMethod} from \"./SpreadMethod\";\r\nimport {InterpolationMethod} from \"./InterpolationMethod\";\r\nimport {GraphicsPathWinding} from \"./GraphicsPathWinding\";\r\nimport {GraphicsPathCommand} from \"./GraphicsPathCommand\";\r\nimport {TriangleCulling} from \"./TriangleCulling\";\r\nimport {LineScaleMode} from \"./LineScaleMode\";\r\nimport {BrushType} from \"../../webgl/graphics/BrushType\";\r\nimport {IFillDataRenderer} from \"../../webgl/graphics/IFillDataRenderer\";\r\nimport {IStrokeDataRenderer} from \"../../webgl/graphics/IStrokeDataRenderer\";\r\nimport {StrokeRendererBase} from \"../../webgl/graphics/StrokeRendererBase\";\r\nimport {SolidStrokeRenderer} from \"../../webgl/graphics/SolidStrokeRenderer\";\r\nimport {IGraphicsData} from \"./IGraphicsData\";\r\nimport {BitmapData} from \"./BitmapData\";\r\nimport {SolidFillRenderer} from \"../../webgl/graphics/SolidFillRenderer\";\r\nimport {Shader} from \"./Shader\";\r\nimport {RenderTarget2D} from \"../../webgl/RenderTarget2D\";\r\nimport {IDisposable} from \"../../IDisposable\";\r\nimport {NotImplementedError} from \"../../flash/errors/NotImplementedError\";\r\nimport {GLUtil} from \"../../GLUtil\";\r\n\r\nexport class Graphics implements ICopyable<Graphics>, IDisposable {\r\n\r\n    constructor(attachTo:DisplayObject, renderer:WebGLRenderer) {\r\n        this._displayObject = attachTo;\r\n        this._renderer = renderer;\r\n        this._isDirty = true;\r\n        this._strokeRenderers = [];\r\n        this._fillRenderers = [];\r\n        this._bufferTarget = renderer.createRenderTarget();\r\n        this.__updateCurrentPoint(0, 0);\r\n        this.__resetStyles();\r\n        this.clear();\r\n    }\r\n\r\n    beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = false, smooth:boolean = false):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    beginFill(color:number, alpha:number = 1.0):void {\r\n        if (this._isFilling) {\r\n            this.endFill();\r\n        }\r\n        if (!this._isFilling) {\r\n            this._isFilling = true;\r\n            this._currentStrokeRenderer = this.__createStrokeRendererWithCurrentSettings();\r\n            this._strokeRenderers.push(this._currentStrokeRenderer);\r\n            this._currentFillRenderer = new SolidFillRenderer(this, this._currentX, this._currentY, color, alpha);\r\n            this._currentFillRenderer.beginIndex = this._strokeRenderers.length - 1;\r\n        }\r\n    }\r\n\r\n    beginGradientFill(type:string, colors:number[], alphas:number[], ratios:number[],\r\n                      matrix:Matrix = null, spreadMethod:string = SpreadMethod.PAD,\r\n                      interpolationMethod:string = InterpolationMethod.RGB, focalPointRatio:number = 0):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    beginShaderFill(shader:Shader, matrix:Matrix = null):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    clear():void {\r\n        var i:number;\r\n        if (this._strokeRenderers !== null) {\r\n            for (i = 0; i < this._strokeRenderers.length; ++i) {\r\n                this._strokeRenderers[i].dispose();\r\n                this._isDirty = true;\r\n            }\r\n        }\r\n        if (this._fillRenderers !== null) {\r\n            for (i = 0; i < this._fillRenderers.length; ++i) {\r\n                this._fillRenderers[i].dispose();\r\n                this._isDirty = true;\r\n            }\r\n        }\r\n        if (this._currentFillRenderer !== null) {\r\n            this._currentFillRenderer.dispose();\r\n            this._isDirty = true;\r\n        }\r\n        while (this._strokeRenderers.length > 0) {\r\n            this._strokeRenderers.pop();\r\n            this._isDirty = true;\r\n        }\r\n        while (this._fillRenderers.length > 0) {\r\n            this._fillRenderers.pop();\r\n            this._isDirty = true;\r\n        }\r\n        // create stroke and fill renderers according to current state\r\n        // and push them into the stack\r\n        this._currentFillRenderer = null;\r\n        this._currentStrokeRenderer = this.__createStrokeRendererWithCurrentSettings();\r\n        this._strokeRenderers.push(this._currentStrokeRenderer);\r\n        this._isFilling = false;\r\n    }\r\n\r\n    copyFrom(sourceGraphics:Graphics):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.curveTo(controlX, controlY, anchorX, anchorY);\r\n        }\r\n        this._currentStrokeRenderer.curveTo(controlX, controlY, anchorX, anchorY);\r\n        this.__updateCurrentPoint(anchorX, anchorY);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    drawCircle(x:number, y:number, radius:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.drawCircle(x, y, radius);\r\n        }\r\n        this._currentStrokeRenderer.drawCircle(x, y, radius);\r\n        this.__updateCurrentPoint(x, y);\r\n        this.__updateLastPathStartPoint(x + radius, y);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    drawEllipse(x:number, y:number, width:number, height:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.drawEllipse(x, y, width, height);\r\n        }\r\n        this._currentStrokeRenderer.drawEllipse(x, y, width, height);\r\n        this.__updateCurrentPoint(x + width, y + height / 2);\r\n        this.__updateLastPathStartPoint(x + width, y + height / 2);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    drawGraphicsData(graphicsData:IGraphicsData[]):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param commands\r\n     * @param data\r\n     * @param winding\r\n     * @param checkCommands Bulletproof\r\n     */\r\n    drawPath(commands:number[], data:number[], winding:string = GraphicsPathWinding.EVEN_ODD, checkCommands:boolean = true):void {\r\n        if (checkCommands && !__checkPathCommands(commands, data)) {\r\n            return;\r\n        }\r\n        var commandLength = commands.length;\r\n        var j = 0;\r\n        var isInFill = this._isFilling;\r\n        var sr = this._currentStrokeRenderer;\r\n        var fr = this._currentFillRenderer;\r\n        var newX:number, newY:number;\r\n        for (var i = 0; i < commandLength; ++i) {\r\n            switch (commands[i]) {\r\n                case GraphicsPathCommand.CUBIC_CURVE_TO:\r\n                    if (isInFill) {\r\n                        fr.bezierCurveTo(data[j], data[j + 1], data[j + 2], data[j + 3], data[j + 4], data[j + 5]);\r\n                    }\r\n                    sr.bezierCurveTo(data[j], data[j + 1], data[j + 2], data[j + 3], data[j + 4], data[j + 5]);\r\n                    newX = data[j + 4];\r\n                    newY = data[j + 5];\r\n                    j += 6;\r\n                    break;\r\n                case GraphicsPathCommand.CURVE_TO:\r\n                    if (isInFill) {\r\n                        fr.curveTo(data[j], data[j + 1], data[j + 2], data[j + 3]);\r\n                    }\r\n                    sr.curveTo(data[j], data[j + 1], data[j + 2], data[j + 3]);\r\n                    newX = data[j + 2];\r\n                    newY = data[j + 3];\r\n                    j += 4;\r\n                    break;\r\n                case GraphicsPathCommand.LINE_TO:\r\n                    if (isInFill) {\r\n                        fr.lineTo(data[j], data[j + 1]);\r\n                    }\r\n                    sr.lineTo(data[j], data[j + 1]);\r\n                    newX = data[j];\r\n                    newY = data[j + 1];\r\n                    j += 2;\r\n                    break;\r\n                case GraphicsPathCommand.MOVE_TO:\r\n                    if (isInFill) {\r\n                        fr.moveTo(data[j], data[j + 1]);\r\n                    }\r\n                    sr.moveTo(data[j], data[j + 1]);\r\n                    newX = data[j];\r\n                    newY = data[j + 1];\r\n                    j += 2;\r\n                    break;\r\n                case GraphicsPathCommand.NO_OP:\r\n                    break;\r\n                case GraphicsPathCommand.WIDE_LINE_TO:\r\n                    if (isInFill) {\r\n                        fr.lineTo(data[j + 2], data[j + 3]);\r\n                    }\r\n                    sr.lineTo(data[j + 2], data[j + 3]);\r\n                    newX = data[j + 2];\r\n                    newY = data[j + 3];\r\n                    j += 4;\r\n                    break;\r\n                case GraphicsPathCommand.WIDE_MOVE_TO:\r\n                    if (isInFill) {\r\n                        fr.moveTo(data[j + 2], data[j + 3]);\r\n                    }\r\n                    sr.moveTo(data[j + 2], data[j + 3]);\r\n                    newX = data[j + 2];\r\n                    newY = data[j + 3];\r\n                    j += 4;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (commandLength > 0) {\r\n            this.__updateCurrentPoint(newX, newY);\r\n        }\r\n        this._isDirty = true;\r\n    }\r\n\r\n    drawRect(x:number, y:number, width:number, height:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.drawRect(x, y, width, height);\r\n        }\r\n        this._currentStrokeRenderer.drawRect(x, y, width, height);\r\n        this.__updateCurrentPoint(x, y);\r\n        this.__updateLastPathStartPoint(x, y);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN):void {\r\n        if (isNaN(ellipseHeight)) {\r\n            ellipseHeight = ellipseWidth;\r\n        }\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    drawTriangles(vectors:number[], indices:number[] = null, uvtData:number[] = null, culling:string = TriangleCulling.NONE):void {\r\n        // jabbany, mostly\r\n        if (indices === null) {\r\n            indices = [];\r\n            for (var i = 0; i < vectors.length; i += 2) {\r\n                indices.push(i / 2);\r\n            }\r\n        } else {\r\n            indices = indices.slice(0);\r\n        }\r\n        if (indices.length % 3 !== 0) {\r\n            GLUtil.trace(\"Graphics.drawTriangles malformed indices count. Must be multiple of 3.\", \"err\");\r\n            return;\r\n        }\r\n        /** Do culling of triangles here to lessen work later **/\r\n        if (culling !== TriangleCulling.NONE) {\r\n            for (var i = 0; i < indices.length / 3; i++) {\r\n                var ux = vectors[2 * indices[i * 3 + 1]] - vectors[2 * indices[i * 3]],\r\n                    uy = vectors[2 * indices[i * 3 + 1] + 1] - vectors[2 * indices[i * 3] + 1],\r\n                    vx = vectors[2 * indices[i * 3 + 2]] - vectors[2 * indices[i * 3 + 1]],\r\n                    vy = vectors[2 * indices[i * 3 + 2] + 1] - vectors[2 * indices[i * 3 + 1] + 1];\r\n                var zcomp = ux * vy - vx * uy;\r\n                if (zcomp < 0 && culling === TriangleCulling.POSITIVE ||\r\n                    zcomp > 0 && culling === TriangleCulling.NEGATIVE) {\r\n                    /** Remove the indices. Leave the vertices. **/\r\n                    indices.splice(i * 3, 3);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n        var commands:number[] = [], data:number[] = [];\r\n        for (var i = 0; i < indices.length / 3; i++) {\r\n            var a = indices[3 * i],\r\n                b = indices[3 * i + 1],\r\n                c = indices[3 * i + 2];\r\n            var ax = vectors[2 * a], ay = vectors[2 * a + 1];\r\n            var bx = vectors[2 * b], by = vectors[2 * b + 1];\r\n            var cx = vectors[2 * c], cy = vectors[2 * c + 1];\r\n            commands.push(1, 2, 2, 2);\r\n            data.push(ax, ay, bx, by, cx, cy, ax, ay);\r\n        }\r\n        // TODO: Can be optimized by using native WebGL\r\n        this.drawPath(commands, data, void(0), false);\r\n    }\r\n\r\n    endFill():void {\r\n        if (this._isFilling) {\r\n            this._isFilling = false;\r\n            this._currentFillRenderer.endIndex = this._strokeRenderers.length - 1;\r\n            this._currentFillRenderer.closePath();\r\n            this._currentStrokeRenderer.closePath();\r\n            this._fillRenderers.push(this._currentFillRenderer);\r\n            if (this._currentFillRenderer.hasDrawnAnything) {\r\n                this._isDirty = true;\r\n            }\r\n            this._currentFillRenderer = null;\r\n        }\r\n    }\r\n\r\n    lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    lineGradientStyle(type:string, colors:number[], alphas:number[], ratios:number[],\r\n                      matrix:Matrix = null, spreadMethod:string = SpreadMethod.PAD,\r\n                      interpolationMethod:string = InterpolationMethod.RGB, focalPointRatio:number = 0):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    lineShaderStyle(shader:Shader, matrix:Matrix = null):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    lineStyle(thickness:number = NaN, color:number = 0, alpha:number = 1.0, pixelHinting:boolean = false,\r\n              scaleMode:string = LineScaleMode.NORMAL, caps:string = null, joints:string = null, miterLimit:number = 3):void {\r\n        if (this._lineType !== BrushType.SOLID || this._lineWidth !== thickness || this._lineColor !== color || this._lineAlpha !== alpha) {\r\n            this._lineType = BrushType.SOLID;\r\n            if (!isNaN(thickness)) {\r\n                this._lineWidth = thickness;\r\n            }\r\n            this._lineColor = color;\r\n            this._lineAlpha = alpha;\r\n            this._currentStrokeRenderer = new SolidStrokeRenderer(this, this._lastPathStartX, this._lastPathStartY, this._currentX, this._currentY, thickness, color, alpha);\r\n            this._strokeRenderers.push(this._currentStrokeRenderer);\r\n        }\r\n    }\r\n\r\n    lineTo(x:number, y:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.lineTo(x, y);\r\n        }\r\n        this._currentStrokeRenderer.lineTo(x, y);\r\n        this.__updateCurrentPoint(x, y);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    moveTo(x:number, y:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.moveTo(x, y);\r\n        }\r\n        this._currentStrokeRenderer.moveTo(x, y);\r\n        this.__updateCurrentPoint(x, y);\r\n        this.__updateLastPathStartPoint(x, y);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    update():void {\r\n        if (this._isDirty) {\r\n            var j = 0, fillLen = this._fillRenderers.length;\r\n            for (var i = 0; i < this._strokeRenderers.length; ++i) {\r\n                if (j < fillLen && i === this._fillRenderers[j].beginIndex) {\r\n                    this._fillRenderers[j].update();\r\n                    j++;\r\n                }\r\n                this._strokeRenderers[i].update();\r\n            }\r\n            this._shouldUpdateRenderTarget = true;\r\n        }\r\n        this._isDirty = false;\r\n    }\r\n\r\n    render(renderer:WebGLRenderer, target:RenderTarget2D, clearOutput:boolean):void {\r\n        var j = 0, fillLen = this._fillRenderers.length;\r\n        // TODO: Extend texture copy shader.\r\n        // When _shouldUpdateRenderTarget and _bufferTarget are enabled, content of Graphics\r\n        // is cached so that rendering performance is improved but transforms and alpha changes\r\n        // are not reflected. To fix this behavior, consider extending the replicate shader to\r\n        // support state changes.\r\n        if (true || this._shouldUpdateRenderTarget) {\r\n            this._bufferTarget.clear();\r\n            for (var i = 0; i < this._strokeRenderers.length; ++i) {\r\n                if (j < fillLen && i === this._fillRenderers[j].beginIndex) {\r\n                    this._fillRenderers[j].render(renderer);\r\n                    j++;\r\n                }\r\n                this._strokeRenderers[i].render(renderer);\r\n            }\r\n            this._shouldUpdateRenderTarget = false;\r\n        }\r\n    }\r\n\r\n    dispose():void {\r\n        this.clear();\r\n        this._strokeRenderers.pop();\r\n        this._currentStrokeRenderer.dispose();\r\n        this._currentStrokeRenderer = null;\r\n        this._bufferTarget.dispose();\r\n        this._bufferTarget = null;\r\n    }\r\n\r\n    get renderer():WebGLRenderer {\r\n        return this._renderer;\r\n    }\r\n\r\n    get isFilling():boolean {\r\n        return this._isFilling;\r\n    }\r\n\r\n    private __createStrokeRendererWithCurrentSettings():StrokeRendererBase {\r\n        switch (this._lineType) {\r\n            case BrushType.SOLID:\r\n                return new SolidStrokeRenderer(this, this._lastPathStartX, this._lastPathStartY, this._currentX, this._currentY, this._lineWidth, this._lineColor, this._lineAlpha);\r\n            default:\r\n                throw new NotImplementedError();\r\n        }\r\n    }\r\n\r\n    private __updateCurrentPoint(x:number, y:number):void {\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n    }\r\n\r\n    private __updateLastPathStartPoint(x:number, y:number):void {\r\n        this._lastPathStartX = x;\r\n        this._lastPathStartY = y;\r\n    }\r\n\r\n    private __resetStyles():void {\r\n        this._lineType = BrushType.SOLID;\r\n        this._lineWidth = 1;\r\n        this._lineColor = 0x000000;\r\n        this._lineAlpha = 1;\r\n    }\r\n\r\n    private _displayObject:DisplayObject = null;\r\n    private _isFilling:boolean = false;\r\n    private _renderer:WebGLRenderer = null;\r\n    private _bufferTarget:RenderTarget2D = null;\r\n    private _isDirty:boolean = true;\r\n    private _shouldUpdateRenderTarget:boolean = false;\r\n\r\n    private _lineType:BrushType = BrushType.SOLID;\r\n    private _lineWidth:number = 1;\r\n    private _lineAlpha:number = 1;\r\n    private _lineColor:number = 0;\r\n    private _currentX:number = 0;\r\n    private _currentY:number = 0;\r\n    private _lastPathStartX:number = 0;\r\n    private _lastPathStartY:number = 0;\r\n\r\n    private _currentStrokeRenderer:IStrokeDataRenderer = null;\r\n    private _currentFillRenderer:IFillDataRenderer = null;\r\n    private _strokeRenderers:IStrokeDataRenderer[] = null;\r\n    private _fillRenderers:IFillDataRenderer[] = null;\r\n\r\n}\r\n\r\nfunction __checkPathCommands(commands:number[], data:number[]):boolean {\r\n    if (commands === null || data === null || data.length % 2 !== 0) {\r\n        return false;\r\n    }\r\n    var commandLength = commands.length;\r\n    var dataLength = data.length;\r\n    for (var i = 0; i < commandLength; i++) {\r\n        switch (commands[i]) {\r\n            case GraphicsPathCommand.CUBIC_CURVE_TO:\r\n                dataLength -= 2 * 3;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case GraphicsPathCommand.CURVE_TO:\r\n                dataLength -= 2 * 2;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case GraphicsPathCommand.LINE_TO:\r\n                dataLength -= 2 * 1;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case GraphicsPathCommand.MOVE_TO:\r\n                dataLength -= 2 * 1;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case GraphicsPathCommand.NO_OP:\r\n                break;\r\n            case GraphicsPathCommand.WIDE_LINE_TO:\r\n                dataLength -= 2 * 2;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case GraphicsPathCommand.WIDE_MOVE_TO:\r\n                dataLength -= 2 * 2;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n"],"sourceRoot":"/source/"}