{"version":3,"sources":["flash/display/Graphics.ts"],"names":["Graphics","Graphics.constructor","Graphics.beginBitmapFill","Graphics.beginFill","Graphics.beginGradientFill","Graphics.beginShaderFill","Graphics.clear","Graphics.copyFrom","Graphics.curveTo","Graphics.drawCircle","Graphics.drawEllipse","Graphics.drawGraphicsData","Graphics.drawPath","Graphics.drawRect","Graphics.drawRoundRect","Graphics.drawTriangles","Graphics.endFill","Graphics.lineBitmapStyle","Graphics.lineGradientStyle","Graphics.lineShaderStyle","Graphics.lineStyle","Graphics.lineTo","Graphics.moveTo","Graphics.update","Graphics.render","Graphics.dispose","Graphics.renderer","Graphics.isFilling","Graphics.___createStrokeRendererWithCurrentSettings","Graphics.___updateCurrentPoint","Graphics.___updateLastPathStartPoint","Graphics.___resetStyles","___checkPathCommands"],"mappings":"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CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBAC3FA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACnBA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACnBA,CAACA,IAAIA,CAACA,CAACA;oBACPA,KAAKA,CAACA;gBACVA,KAAKA,yCAAmBA,CAACA,QAAQA;oBAC7BA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wBACXA,EAAEA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBAC/DA,CAACA;oBACDA,EAAEA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBAC3DA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACnBA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACnBA,CAACA,IAAIA,CAACA,CAACA;oBACPA,KAAKA,CAACA;gBACVA,KAAKA,yCAAmBA,CAACA,OAAOA;oBAC5BA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wBACXA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACpCA,CAACA;oBACDA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBAChCA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACfA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACnBA,CAACA,IAAIA,CAACA,CAACA;oBACPA,KAAKA,CAACA;gBACVA,KAAKA,yCAAmBA,CAACA,OAAOA;oBAC5BA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wBACXA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACpCA,CAACA;oBACDA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBAChCA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACfA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACnBA,CAACA,IAAIA,CAACA,CAACA;oBACPA,KAAKA,CAACA;gBACVA,KAAKA,yCAAmBA,CAACA,KAAKA;oBAC1BA,KAAKA,CAACA;gBACVA,KAAKA,yCAAmBA,CAACA,YAAYA;oBACjCA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wBACXA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACxCA,CAACA;oBACDA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACpCA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACnBA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACnBA,CAACA,IAAIA,CAACA,CAACA;oBACPA,KAAKA,CAACA;gBACVA,KAAKA,yCAAmBA,CAACA,YAAYA;oBACjCA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wBACXA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACxCA,CAACA;oBACDA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACpCA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACnBA,IAAIA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACnBA,CAACA,IAAIA,CAACA,CAACA;oBACPA,KAAKA,CAACA;gBACVA;oBACIA,KAAKA,CAACA;YACdA,CAACA;QACLA,CAACA;QACDA,EAAEA,CAACA,CAACA,aAAaA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACpBA,IAAIA,CAACA,oBAAoBA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;QAC1CA,CAACA;QACDA,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;IACzBA,CAACA;IAEDZ,2BAAQA,GAARA,UAASA,CAAQA,EAAEA,CAAQA,EAAEA,KAAYA,EAAEA,MAAaA;QACpDa,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;YAClBA,IAAIA,CAACA,oBAAoBA,CAACA,QAAQA,CAACA,CAACA,EAAEA,CAACA,EAAEA,KAAKA,EAAEA,MAAMA,CAACA,CAACA;QAC5DA,CAACA;QACDA,IAAIA,CAACA,sBAAsBA,CAACA,QAAQA,CAACA,CAACA,EAAEA,CAACA,EAA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ACA,eAAeA,EAAEA,IAAIA,CAACA,SAASA,EAAEA,IAAIA,CAACA,SAASA,EAAEA,SAASA,EAAEA,KAAKA,EAAEA,KAAKA,CAACA,CAACA;YACjKA,IAAIA,CAACA,gBAAgBA,CAACA,IAAIA,CAACA,IAAIA,CAACA,sBAAsBA,CAACA,CAACA;QAC5DA,CAACA;IACLA,CAACA;IAEDpB,yBAAMA,GAANA,UAAOA,CAAQA,EAAEA,CAAQA;QACrBqB,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;YAClBA,IAAIA,CAACA,oBAAoBA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;QAC3CA,CAACA;QACDA,IAAIA,CAACA,sBAAsBA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;QACzCA,IAAIA,CAACA,oBAAoBA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;QAChCA,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;IACzBA,CAACA;IAEDrB,yBAAMA,GAANA,UAAOA,CAAQA,EAAEA,CAAQA;QACrBsB,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;YAClBA,IAAIA,CAACA,oBAAoBA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;QAC3CA,CAACA;QACDA,IAAIA,CAACA,sBAAsBA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;QACzCA,IAAIA,CAACA,oBAAoBA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;QAChCA,IAAIA,CAACA,0BAA0BA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;QACtCA,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;IACzBA,CAACA;IAEDtB,yBAAMA,GAANA;QACIuB,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA;YAChBA,IAAIA,CAACA,GAAGA,CAACA,EAAEA,OAAOA,GAAGA,IAAIA,CAACA,cAAcA,CAACA,M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AACA,UAAUA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACjBA,MAAMA,CAACA,KAAKA,CAACA;gBACjBA,CAACA;gBACDA,KAAKA,CAACA;YACVA,KAAKA,yCAAmBA,CAACA,QAAQA;gBAC7BA,UAAUA,IAAIA,CAACA,GAAGA,CAACA,CAACA;gBACpBA,EAAEA,CAACA,CAACA,UAAUA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACjBA,MAAMA,CAACA,KAAKA,CAACA;gBACjBA,CAACA;gBACDA,KAAKA,CAACA;YACVA,KAAKA,yCAAmBA,CAACA,OAAOA;gBAC5BA,UAAUA,IAAIA,CAACA,GAAGA,CAACA,CAACA;gBACpBA,EAAEA,CAACA,CAACA,UAAUA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACjBA,MAAMA,CAACA,KAAKA,CAACA;gBACjBA,CAACA;gBACDA,KAAKA,CAACA;YACVA,KAAKA,yCAAmBA,CAACA,OAAOA;gBAC5BA,UAAUA,IAAIA,CAACA,GAAGA,CAACA,CAACA;gBACpBA,EAAEA,CAACA,CAACA,UAAUA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACjBA,MAAMA,CAACA,KAAKA,CAACA;gBACjBA,CAACA;gBACDA,KAAKA,CAACA;YACVA,KAAKA,yCAAmBA,CAACA,KAAKA;gBAC1BA,KAAKA,CAACA;YACVA,KAAKA,yCAAmBA,CAACA,YAAYA;gBACjCA,UAAUA,IAAIA,CAACA,GAAGA,CAACA,CAACA;gBACpBA,EAAEA,CAACA,CAACA,UAAUA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACjBA,MAAMA,CAACA,KAAKA,CAACA;gBACjBA,CAACA;gBACDA,KAAKA,CAACA;YACVA,KAAKA,yCAAmBA,CAACA,YAAYA;gBACjCA,UAAUA,IAAIA,CAACA,GAAGA,CAACA,CAACA;gBACpBA,EAAEA,CAACA,CAACA,UAAUA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACjBA,MAAMA,CAACA,KAAKA,CAACA;gBACjBA,CAACA;gBACDA,KAAKA,CAACA;YACVA;gBACIA,MAAMA,CAACA,KAAKA,CAACA;QACrBA,CAACA;IACLA,CAACA;IACDA,MAAMA,CAACA,IAAIA,CAACA;AAChBA,CAACA","file":"flash/display/Graphics.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/20.\r\n */\r\n\r\nimport {WebGLRenderer} from \"../../webgl/WebGLRenderer\";\r\nimport {ICopyable} from \"../../ICopyable\";\r\nimport {DisplayObject} from \"./DisplayObject\";\r\nimport {NotImplementedError} from \"../../_util/NotImplementedError\";\r\nimport {Matrix} from \"../geom/Matrix\";\r\nimport {SpreadMethod} from \"./SpreadMethod\";\r\nimport {InterpolationMethod} from \"./InterpolationMethod\";\r\nimport {GraphicsPathWinding} from \"./GraphicsPathWinding\";\r\nimport {GraphicsPathCommand} from \"./GraphicsPathCommand\";\r\nimport {_util} from \"../../_util/_util\";\r\nimport {TriangleCulling} from \"./TriangleCulling\";\r\nimport {LineScaleMode} from \"./LineScaleMode\";\r\nimport {BrushType} from \"../../webgl/graphics/BrushType\";\r\nimport {IGraphicsDataRenderer} from \"../../webgl/graphics/IGraphicsDataRenderer\";\r\nimport {IFillDataRenderer} from \"../../webgl/graphics/IFillDataRenderer\";\r\nimport {IStrokeDataRenderer} from \"../../webgl/graphics/IStrokeDataRenderer\";\r\nimport {StrokeRendererBase} from \"../../webgl/graphics/StrokeRendererBase\";\r\nimport {SolidStrokeRenderer} from \"../../webgl/graphics/SolidStrokeRenderer\";\r\nimport {IGraphicsData} from \"./IGraphicsData\";\r\nimport {BitmapData} from \"./BitmapData\";\r\nimport {SolidFillRenderer} from \"../../webgl/graphics/SolidFillRenderer\";\r\nimport {Shader} from \"./Shader\";\r\nimport {IWebGLElement} from \"../../webgl/IWebGLElement\";\r\nimport {RenderTarget2D} from \"../../webgl/RenderTarget2D\";\r\nimport {IDisposable} from \"../../IDisposable\";\r\n\r\nexport class Graphics implements ICopyable<Graphics>, IDisposable {\r\n\r\n    constructor(attachTo:DisplayObject, renderer:WebGLRenderer) {\r\n        this._displayObject = attachTo;\r\n        this._renderer = renderer;\r\n        this._isDirty = true;\r\n        this._strokeRenderers = [];\r\n        this._fillRenderers = [];\r\n        this._bufferTarget = renderer.createRenderTarget();\r\n        this.__updateCurrentPoint(0, 0);\r\n        this.__resetStyles();\r\n        this.clear();\r\n    }\r\n\r\n    beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = false, smooth:boolean = false):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    beginFill(color:number, alpha:number = 1.0):void {\r\n        if (this._isFilling) {\r\n            this.endFill();\r\n        }\r\n        if (!this._isFilling) {\r\n            this._isFilling = true;\r\n            this._currentStrokeRenderer = this.__createStrokeRendererWithCurrentSettings();\r\n            this._strokeRenderers.push(this._currentStrokeRenderer);\r\n            this._currentFillRenderer = new SolidFillRenderer(this, this._currentX, this._currentY, color, alpha);\r\n            this._currentFillRenderer.beginIndex = this._strokeRenderers.length - 1;\r\n        }\r\n    }\r\n\r\n    beginGradientFill(type:string, colors:number[], alphas:number[], ratios:number[],\r\n                      matrix:Matrix = null, spreadMethod:string = SpreadMethod.PAD,\r\n                      interpolationMethod:string = InterpolationMethod.RGB, focalPointRatio:number = 0):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    beginShaderFill(shader:Shader, matrix:Matrix = null):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    clear():void {\r\n        var i:number;\r\n        if (this._strokeRenderers !== null) {\r\n            for (i = 0; i < this._strokeRenderers.length; ++i) {\r\n                this._strokeRenderers[i].dispose();\r\n                this._isDirty = true;\r\n            }\r\n        }\r\n        if (this._fillRenderers !== null) {\r\n            for (i = 0; i < this._fillRenderers.length; ++i) {\r\n                this._fillRenderers[i].dispose();\r\n                this._isDirty = true;\r\n            }\r\n        }\r\n        if (this._currentFillRenderer !== null) {\r\n            this._currentFillRenderer.dispose();\r\n            this._isDirty = true;\r\n        }\r\n        while (this._strokeRenderers.length > 0) {\r\n            this._strokeRenderers.pop();\r\n            this._isDirty = true;\r\n        }\r\n        while (this._fillRenderers.length > 0) {\r\n            this._fillRenderers.pop();\r\n            this._isDirty = true;\r\n        }\r\n        // create stroke and fill renderers according to current state\r\n        // and push them into the stack\r\n        this._currentFillRenderer = null;\r\n        this._currentStrokeRenderer = this.__createStrokeRendererWithCurrentSettings();\r\n        this._strokeRenderers.push(this._currentStrokeRenderer);\r\n        this._isFilling = false;\r\n    }\r\n\r\n    copyFrom(sourceGraphics:Graphics):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.curveTo(controlX, controlY, anchorX, anchorY);\r\n        }\r\n        this._currentStrokeRenderer.curveTo(controlX, controlY, anchorX, anchorY);\r\n        this.__updateCurrentPoint(anchorX, anchorY);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    drawCircle(x:number, y:number, radius:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.drawCircle(x, y, radius);\r\n        }\r\n        this._currentStrokeRenderer.drawCircle(x, y, radius);\r\n        this.__updateCurrentPoint(x, y);\r\n        this.__updateLastPathStartPoint(x + radius, y);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    drawEllipse(x:number, y:number, width:number, height:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.drawEllipse(x, y, width, height);\r\n        }\r\n        this._currentStrokeRenderer.drawEllipse(x, y, width, height);\r\n        this.__updateCurrentPoint(x + width, y + height / 2);\r\n        this.__updateLastPathStartPoint(x + width, y + height / 2);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    drawGraphicsData(graphicsData:IGraphicsData[]):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param commands\r\n     * @param data\r\n     * @param winding\r\n     * @param checkCommands Bulletproof\r\n     */\r\n    drawPath(commands:number[], data:number[], winding:string = GraphicsPathWinding.EVEN_ODD, checkCommands:boolean = true):void {\r\n        if (checkCommands && !__checkPathCommands(commands, data)) {\r\n            return;\r\n        }\r\n        var commandLength = commands.length;\r\n        var j = 0;\r\n        var isInFill = this._isFilling;\r\n        var sr = this._currentStrokeRenderer;\r\n        var fr = this._currentFillRenderer;\r\n        var newX:number, newY:number;\r\n        for (var i = 0; i < commandLength; ++i) {\r\n            switch (commands[i]) {\r\n                case GraphicsPathCommand.CUBIC_CURVE_TO:\r\n                    if (isInFill) {\r\n                        fr.bezierCurveTo(data[j], data[j + 1], data[j + 2], data[j + 3], data[j + 4], data[j + 5]);\r\n                    }\r\n                    sr.bezierCurveTo(data[j], data[j + 1], data[j + 2], data[j + 3], data[j + 4], data[j + 5]);\r\n                    newX = data[j + 4];\r\n                    newY = data[j + 5];\r\n                    j += 6;\r\n                    break;\r\n                case GraphicsPathCommand.CURVE_TO:\r\n                    if (isInFill) {\r\n                        fr.curveTo(data[j], data[j + 1], data[j + 2], data[j + 3]);\r\n                    }\r\n                    sr.curveTo(data[j], data[j + 1], data[j + 2], data[j + 3]);\r\n                    newX = data[j + 2];\r\n                    newY = data[j + 3];\r\n                    j += 4;\r\n                    break;\r\n                case GraphicsPathCommand.LINE_TO:\r\n                    if (isInFill) {\r\n                        fr.lineTo(data[j], data[j + 1]);\r\n                    }\r\n                    sr.lineTo(data[j], data[j + 1]);\r\n                    newX = data[j];\r\n                    newY = data[j + 1];\r\n                    j += 2;\r\n                    break;\r\n                case GraphicsPathCommand.MOVE_TO:\r\n                    if (isInFill) {\r\n                        fr.moveTo(data[j], data[j + 1]);\r\n                    }\r\n                    sr.moveTo(data[j], data[j + 1]);\r\n                    newX = data[j];\r\n                    newY = data[j + 1];\r\n                    j += 2;\r\n                    break;\r\n                case GraphicsPathCommand.NO_OP:\r\n                    break;\r\n                case GraphicsPathCommand.WIDE_LINE_TO:\r\n                    if (isInFill) {\r\n                        fr.lineTo(data[j + 2], data[j + 3]);\r\n                    }\r\n                    sr.lineTo(data[j + 2], data[j + 3]);\r\n                    newX = data[j + 2];\r\n                    newY = data[j + 3];\r\n                    j += 4;\r\n                    break;\r\n                case GraphicsPathCommand.WIDE_MOVE_TO:\r\n                    if (isInFill) {\r\n                        fr.moveTo(data[j + 2], data[j + 3]);\r\n                    }\r\n                    sr.moveTo(data[j + 2], data[j + 3]);\r\n                    newX = data[j + 2];\r\n                    newY = data[j + 3];\r\n                    j += 4;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (commandLength > 0) {\r\n            this.__updateCurrentPoint(newX, newY);\r\n        }\r\n        this._isDirty = true;\r\n    }\r\n\r\n    drawRect(x:number, y:number, width:number, height:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.drawRect(x, y, width, height);\r\n        }\r\n        this._currentStrokeRenderer.drawRect(x, y, width, height);\r\n        this.__updateCurrentPoint(x, y);\r\n        this.__updateLastPathStartPoint(x, y);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN):void {\r\n        if (isNaN(ellipseHeight)) {\r\n            ellipseHeight = ellipseWidth;\r\n        }\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    drawTriangles(vectors:number[], indices:number[] = null, uvtData:number[] = null, culling:string = TriangleCulling.NONE):void {\r\n        // jabbany, mostly\r\n        if (indices === null) {\r\n            indices = [];\r\n            for (var i = 0; i < vectors.length; i += 2) {\r\n                indices.push(i / 2);\r\n            }\r\n        } else {\r\n            indices = indices.slice(0);\r\n        }\r\n        if (indices.length % 3 !== 0) {\r\n            _util.trace(\"Graphics.drawTriangles malformed indices count. Must be multiple of 3.\", \"err\");\r\n            return;\r\n        }\r\n        /** Do culling of triangles here to lessen work later **/\r\n        if (culling !== TriangleCulling.NONE) {\r\n            for (var i = 0; i < indices.length / 3; i++) {\r\n                var ux = vectors[2 * indices[i * 3 + 1]] - vectors[2 * indices[i * 3]],\r\n                    uy = vectors[2 * indices[i * 3 + 1] + 1] - vectors[2 * indices[i * 3] + 1],\r\n                    vx = vectors[2 * indices[i * 3 + 2]] - vectors[2 * indices[i * 3 + 1]],\r\n                    vy = vectors[2 * indices[i * 3 + 2] + 1] - vectors[2 * indices[i * 3 + 1] + 1];\r\n                var zcomp = ux * vy - vx * uy;\r\n                if (zcomp < 0 && culling === TriangleCulling.POSITIVE ||\r\n                    zcomp > 0 && culling === TriangleCulling.NEGATIVE) {\r\n                    /** Remove the indices. Leave the vertices. **/\r\n                    indices.splice(i * 3, 3);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n        var commands:number[] = [], data:number[] = [];\r\n        for (var i = 0; i < indices.length / 3; i++) {\r\n            var a = indices[3 * i],\r\n                b = indices[3 * i + 1],\r\n                c = indices[3 * i + 2];\r\n            var ax = vectors[2 * a], ay = vectors[2 * a + 1];\r\n            var bx = vectors[2 * b], by = vectors[2 * b + 1];\r\n            var cx = vectors[2 * c], cy = vectors[2 * c + 1];\r\n            commands.push(1, 2, 2, 2);\r\n            data.push(ax, ay, bx, by, cx, cy, ax, ay);\r\n        }\r\n        // TODO: Can be optimized by using native WebGL\r\n        this.drawPath(commands, data, void(0), false);\r\n    }\r\n\r\n    endFill():void {\r\n        if (this._isFilling) {\r\n            this._isFilling = false;\r\n            this._currentFillRenderer.endIndex = this._strokeRenderers.length - 1;\r\n            this._currentFillRenderer.closePath();\r\n            this._currentStrokeRenderer.closePath();\r\n            this._fillRenderers.push(this._currentFillRenderer);\r\n            if (this._currentFillRenderer.hasDrawnAnything) {\r\n                this._isDirty = true;\r\n            }\r\n            this._currentFillRenderer = null;\r\n        }\r\n    }\r\n\r\n    lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    lineGradientStyle(type:string, colors:number[], alphas:number[], ratios:number[],\r\n                      matrix:Matrix = null, spreadMethod:string = SpreadMethod.PAD,\r\n                      interpolationMethod:string = InterpolationMethod.RGB, focalPointRatio:number = 0):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    lineShaderStyle(shader:Shader, matrix:Matrix = null):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    lineStyle(thickness:number = NaN, color:number = 0, alpha:number = 1.0, pixelHinting:boolean = false,\r\n              scaleMode:string = LineScaleMode.NORMAL, caps:string = null, joints:string = null, miterLimit:number = 3):void {\r\n        if (this._lineType !== BrushType.SOLID || this._lineWidth !== thickness || this._lineColor !== color || this._lineAlpha !== alpha) {\r\n            this._lineType = BrushType.SOLID;\r\n            if (!isNaN(thickness)) {\r\n                this._lineWidth = thickness;\r\n            }\r\n            this._lineColor = color;\r\n            this._lineAlpha = alpha;\r\n            this._currentStrokeRenderer = new SolidStrokeRenderer(this, this._lastPathStartX, this._lastPathStartY, this._currentX, this._currentY, thickness, color, alpha);\r\n            this._strokeRenderers.push(this._currentStrokeRenderer);\r\n        }\r\n    }\r\n\r\n    lineTo(x:number, y:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.lineTo(x, y);\r\n        }\r\n        this._currentStrokeRenderer.lineTo(x, y);\r\n        this.__updateCurrentPoint(x, y);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    moveTo(x:number, y:number):void {\r\n        if (this._isFilling) {\r\n            this._currentFillRenderer.moveTo(x, y);\r\n        }\r\n        this._currentStrokeRenderer.moveTo(x, y);\r\n        this.__updateCurrentPoint(x, y);\r\n        this.__updateLastPathStartPoint(x, y);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    update():void {\r\n        if (this._isDirty) {\r\n            var j = 0, fillLen = this._fillRenderers.length;\r\n            for (var i = 0; i < this._strokeRenderers.length; ++i) {\r\n                if (j < fillLen && i === this._fillRenderers[j].beginIndex) {\r\n                    this._fillRenderers[j].update();\r\n                    j++;\r\n                }\r\n                this._strokeRenderers[i].update();\r\n            }\r\n            this._shouldUpdateRenderTarget = true;\r\n        }\r\n        this._isDirty = false;\r\n    }\r\n\r\n    render(renderer:WebGLRenderer, target:RenderTarget2D, clearOutput:boolean):void {\r\n        var j = 0, fillLen = this._fillRenderers.length;\r\n        // TODO: Extend texture copy shader.\r\n        // When _shouldUpdateRenderTarget and _bufferTarget are enabled, content of Graphics\r\n        // is cached so that rendering performance is improved but transforms and alpha changes\r\n        // are not reflected. To fix this behavior, consider extending the replicate shader to\r\n        // support state changes.\r\n        if (true || this._shouldUpdateRenderTarget) {\r\n            this._bufferTarget.clear();\r\n            for (var i = 0; i < this._strokeRenderers.length; ++i) {\r\n                if (j < fillLen && i === this._fillRenderers[j].beginIndex) {\r\n                    this._fillRenderers[j].render(renderer, this._bufferTarget);\r\n                    j++;\r\n                }\r\n                this._strokeRenderers[i].render(renderer, this._bufferTarget);\r\n            }\r\n            this._shouldUpdateRenderTarget = false;\r\n        }\r\n        //renderer.copyRenderTargetContent(this._bufferTarget, target, clearOutput);\r\n    }\r\n\r\n    dispose():void {\r\n        this.clear();\r\n        this._strokeRenderers.pop();\r\n        this._currentStrokeRenderer.dispose();\r\n        this._currentStrokeRenderer = null;\r\n        this._bufferTarget.dispose();\r\n        this._bufferTarget = null;\r\n    }\r\n\r\n    get renderer():WebGLRenderer {\r\n        return this._renderer;\r\n    }\r\n\r\n    get isFilling():boolean {\r\n        return this._isFilling;\r\n    }\r\n\r\n    private __createStrokeRendererWithCurrentSettings():StrokeRendererBase {\r\n        switch (this._lineType) {\r\n            case BrushType.SOLID:\r\n                return new SolidStrokeRenderer(this, this._lastPathStartX, this._lastPathStartY, this._currentX, this._currentY, this._lineWidth, this._lineColor, this._lineAlpha);\r\n                break;\r\n            default:\r\n                throw new NotImplementedError();\r\n        }\r\n    }\r\n\r\n    private __updateCurrentPoint(x:number, y:number):void {\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n    }\r\n\r\n    private __updateLastPathStartPoint(x:number, y:number):void {\r\n        this._lastPathStartX = x;\r\n        this._lastPathStartY = y;\r\n    }\r\n\r\n    private __resetStyles():void {\r\n        this._lineType = BrushType.SOLID;\r\n        this._lineWidth = 1;\r\n        this._lineColor = 0x000000;\r\n        this._lineAlpha = 1;\r\n    }\r\n\r\n    private _displayObject:DisplayObject = null;\r\n    private _isFilling:boolean = false;\r\n    private _renderer:WebGLRenderer = null;\r\n    private _bufferTarget:RenderTarget2D = null;\r\n    private _isDirty:boolean = true;\r\n    private _shouldUpdateRenderTarget:boolean = false;\r\n\r\n    private _lineType:BrushType = BrushType.SOLID;\r\n    private _lineWidth:number = 1;\r\n    private _lineAlpha:number = 1;\r\n    private _lineColor:number = 0;\r\n    private _currentX:number = 0;\r\n    private _currentY:number = 0;\r\n    private _lastPathStartX:number = 0;\r\n    private _lastPathStartY:number = 0;\r\n\r\n    private _currentStrokeRenderer:IStrokeDataRenderer = null;\r\n    private _currentFillRenderer:IFillDataRenderer = null;\r\n    private _strokeRenderers:IStrokeDataRenderer[] = null;\r\n    private _fillRenderers:IFillDataRenderer[] = null;\r\n\r\n}\r\n\r\nfunction __checkPathCommands(commands:number[], data:number[]):boolean {\r\n    if (commands === null || data === null || data.length % 2 !== 0) {\r\n        return false;\r\n    }\r\n    var commandLength = commands.length;\r\n    var dataLength = data.length;\r\n    for (var i = 0; i < commandLength; i++) {\r\n        switch (commands[i]) {\r\n            case GraphicsPathCommand.CUBIC_CURVE_TO:\r\n                dataLength -= 2 * 3;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case GraphicsPathCommand.CURVE_TO:\r\n                dataLength -= 2 * 2;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case GraphicsPathCommand.LINE_TO:\r\n                dataLength -= 2 * 1;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case GraphicsPathCommand.MOVE_TO:\r\n                dataLength -= 2 * 1;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case GraphicsPathCommand.NO_OP:\r\n                break;\r\n            case GraphicsPathCommand.WIDE_LINE_TO:\r\n                dataLength -= 2 * 2;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case GraphicsPathCommand.WIDE_MOVE_TO:\r\n                dataLength -= 2 * 2;\r\n                if (dataLength < 0) {\r\n                    return false;\r\n                }\r\n                break;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n"],"sourceRoot":"/source/"}