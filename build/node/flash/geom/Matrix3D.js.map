{"version":3,"sources":["flash/geom/matrix3d.ts"],"names":["Matrix3D","Matrix3D.constructor","Matrix3D.determinant","Matrix3D.rawData","Matrix3D.append","Matrix3D.appendRotation","Matrix3D.appendScale","Matrix3D.appendTranslation","Matrix3D.clone","Matrix3D.copyColumnFrom","Matrix3D.copyColumnTo","Matrix3D.copyFrom","Matrix3D.copyRawDataFrom","Matrix3D.copyRawDataTo","Matrix3D.copyRowFrom","Matrix3D.copyRowTo","Matrix3D.copyToMatrix3D","Matrix3D.decompose","Matrix3D.deltaTransformVector","Matrix3D.identity","Matrix3D.interpolate","Matrix3D.interpolateTo","Matrix3D.invert","Matrix3D.pointAt","Matrix3D.prepend","Matrix3D.prependRotation","Matrix3D.prependScale","Matrix3D.prependTranslation","Matrix3D.recompose","Matrix3D.transformVector","Matrix3D.transformVectors","Matrix3D.transpose","Matrix3D.toArray","Matrix3D.setOrthographicProjection","Matrix3D.setPerspectiveProjection","Matrix3D.___dotProduct","Matrix3D.___getRotationMatrix"],"mappings":"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,CAACA;QAC3BA,IAAIA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA;QAC3BA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA;QACnBA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;QACVA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;QACVA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;QACVA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;QACTA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;QACVA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;QACVA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;QACVA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;QACTA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA;QACXA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA;QACXA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA;QACZA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA;QACVA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA;QACVA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA;QACVA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA;QACVA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA;QACVA,oCAAoCA;QACpCA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;QACvCA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAAC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CA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;QAC9FA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;QAC9FA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;QAChGA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;QAClGA,MAAMA,CAACA,IAAIA,mBAAQA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;IACpCA,CAACA;IAED7B,mCAAgBA,GAAhBA,UAAiBA,GAAYA,EAAEA,IAAaA;QACxC8B,EAAEA,CAACA,CAACA,GAAGA,CAACA,MAAMA,GAAGA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;YACvBA,MAAMA,IAAIA,mCAAgBA,CAACA,0FAA0FA,CAACA,CAACA;QAC3HA,CAACA;QACDA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,GAAGA,CAACA,MAAMA,GAAGA,CAACA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;YACtCA,IAAIA,CAACA,GAAGA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,GAAGA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,GAAGA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;YAC3DA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACnEA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACnEA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA;YACpEA,IAAIA,CAACA,IAAIA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,CAACA,CAACA;QAC1BA,CAACA;IACLA,CAACA;IAED9B,4BAASA,GAATA;QACI+B,IAAIA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA;QACnBA,IAAIA,CAACA,KAAKA,GAAGA;YACTA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA;YACvBA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA;YACvBA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA;YACxBA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA;SAC3BA,CAACA;IACNA,CAACA;IAED/B,0BAAOA,GAAPA;QACIgC,IAAIA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA;QACnBA,+EAA+EA;QAC/EA,MAAMA,CAACA,IAAIA,YAAYA,CAACA;YACpBA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA;YACvBA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA;YACvBA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA;YACxBA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,EAAEA,CAACA;SAC3BA,CAACA,CAACA;IACPA,CAACA;IAEDhC,4CAAyBA,GAAzBA,UAA0BA,IAAWA,EAAEA,KAAYA,EAAEA,GAAUA,EAAEA,MAAaA,EAAEA,IAAWA,EAAEA,GAAUA;QACnGiC,EAAEA,CAACA,CAACA,IAAIA,KAAKA,KAAKA,IAAIA,GAAGA,KAAKA,MAAMA,IAAIA,IAAIA,KAAKA,GAAGA,CAACA,CAACA,CAACA;YACnDA,MAAMA,IAAIA,6BAAaA,CAACA,cAAcA,CAACA,CAACA;QAC5CA,CAACA;QACDA,IAAIA,EAAEA,GAAGA,CAACA,GAAGA,CAACA,KAAKA,GAAGA,IAAIA,CAACA,CAACA;QAC5BA,IAAIA,EAAEA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,GAAGA,MAAMA,CAACA,CAACA;QAC5BA,IAAIA,EAAEA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,GAAGA,IAAIA,CAACA,CAACA;QAC1BA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA;QACnBA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,CAACA;QACdA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;QACTA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;QACTA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,IAAIA,GAAGA,KAAKA,CAACA,GAAGA,EAAEA,CAACA;QAC5BA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;QACTA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,CAACA;QACdA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;QACTA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,MAAMA,CAACA,GAAGA,EAAEA,CAACA;QAC5BA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;QACTA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;QACTA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,EAAEA,CAACA;QAChBA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,IAAIA,G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","file":"flash/geom/Matrix3D.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {Vector3D} from \"./Vector3D\";\r\nimport {Orientation3D} from \"./Orientation3D\";\r\nimport {ICopyable} from \"../../ICopyable\";\r\nimport {ICloneable} from \"../../ICloneable\";\r\nimport {NotImplementedError} from \"../../../lib/glantern-utils/src/NotImplementedError\";\r\nimport {GLUtil} from \"../../../lib/glantern-utils/src/GLUtil\";\r\nimport {ApplicationError} from \"../../../lib/glantern-utils/src/ApplicationError\";\r\nimport {ArgumentError} from \"../../../lib/glantern-utils/src/ArgumentError\";\r\n\r\nexport class Matrix3D implements ICloneable<Matrix3D>, ICopyable<Matrix3D> {\r\n\r\n    constructor(v:number[] = null) {\r\n        if (v === null || v.length <= 0) {\r\n            v = [\r\n                1, 0, 0, 0,\r\n                0, 1, 0, 0,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1\r\n            ];\r\n        }\r\n        this.rawData = v;\r\n    }\r\n\r\n    get determinant():number {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    get rawData():number[] {\r\n        return this._data;\r\n    }\r\n\r\n    set rawData(v:number[]) {\r\n        if (v.length < 16) {\r\n            throw new Error(\"Data length of Matrix3D must be no less than 16.\");\r\n        }\r\n        this._data = v.slice();\r\n    }\r\n\r\n    append(lhs:Matrix3D):void {\r\n        this._data = Matrix3D.__dotProduct(lhs._data, this._data);\r\n    }\r\n\r\n    appendRotation(degrees:number, axis:Vector3D, pivotPoint:Vector3D = null):void {\r\n        if (pivotPoint !== null) {\r\n            this.appendTranslation(pivotPoint.x, pivotPoint.y, pivotPoint.z);\r\n        }\r\n        this._data = Matrix3D.__dotProduct(Matrix3D.__getRotationMatrix(degrees * Math.PI / 180, axis), this._data);\r\n        if (pivotPoint !== null) {\r\n            this.appendTranslation(-pivotPoint.x, -pivotPoint.y, -pivotPoint.z);\r\n        }\r\n    }\r\n\r\n    appendScale(xScale:number, yScale:number, zScale:number):void {\r\n        this._data = Matrix3D.__dotProduct([\r\n            xScale, 0, 0, 0,\r\n            0, yScale, 0, 0,\r\n            0, 0, zScale, 0,\r\n            0, 0, 0, 1\r\n        ], this._data);\r\n    }\r\n\r\n    appendTranslation(x:number, y:number, z:number):void {\r\n        this._data = Matrix3D.__dotProduct([\r\n            1, 0, 0, x,\r\n            0, 1, 0, y,\r\n            0, 0, 1, z,\r\n            0, 0, 0, 1\r\n        ], this._data);\r\n    }\r\n\r\n    clone():Matrix3D {\r\n        var m:Matrix3D = new Matrix3D(this.rawData);\r\n        m.position = this.position !== null ? this.position.clone() : null;\r\n        return m;\r\n    }\r\n\r\n    copyColumnFrom(column:number, vector3D:Vector3D):void {\r\n        if (column < 0 || column > 3) {\r\n            throw new RangeError(\"Column must be 0, 1, 2 or 3.\");\r\n        }\r\n        this._data[column * 4] = vector3D.x;\r\n        this._data[column * 4 + 1] = vector3D.y;\r\n        this._data[column * 4 + 2] = vector3D.z;\r\n        this._data[column * 4 + 3] = vector3D.w;\r\n    }\r\n\r\n    copyColumnTo(column:number, vector3D:Vector3D):void {\r\n        if (column < 0 || column > 3) {\r\n            throw new RangeError(\"Column must be 0, 1, 2 or 3.\");\r\n        }\r\n        vector3D.x = this._data[column * 4];\r\n        vector3D.y = this._data[column * 4 + 1];\r\n        vector3D.z = this._data[column * 4 + 2];\r\n        vector3D.w = this._data[column * 4 + 3];\r\n    }\r\n\r\n    copyFrom(sourceMatrix3D:Matrix3D):void {\r\n        this.position = sourceMatrix3D.position !== null ? sourceMatrix3D.position.clone() : null;\r\n        this.rawData = sourceMatrix3D.rawData;\r\n    }\r\n\r\n    copyRawDataFrom(vector:number[], index:number = 0, transpose:boolean = false):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    copyRawDataTo(vector:number[], index:number = 0, transpose:boolean = false):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    copyRowFrom(row:number, vector3D:Vector3D):void {\r\n        if (row < 0 || row > 3) {\r\n            throw new RangeError(\"Row must be 0, 1, 2 or 3.\");\r\n        }\r\n        this._data[row] = vector3D.x;\r\n        this._data[row + 4] = vector3D.y;\r\n        this._data[row + 8] = vector3D.z;\r\n        this._data[row + 12] = vector3D.w;\r\n    }\r\n\r\n    copyRowTo(row:number, vector3D:Vector3D):void {\r\n        if (row < 0 || row > 3) {\r\n            throw new RangeError(\"Row must be 0, 1, 2 or 3.\");\r\n        }\r\n        vector3D.x = this._data[row];\r\n        vector3D.y = this._data[row + 4];\r\n        vector3D.z = this._data[row + 8];\r\n        vector3D.w = this._data[row + 12];\r\n    }\r\n\r\n    copyToMatrix3D(dest:Matrix3D):void {\r\n        dest.position = this.position !== null ? this.position.clone() : null;\r\n        dest.rawData = this.rawData;\r\n    }\r\n\r\n    decompose(orientationStyle:string = Orientation3D.EULER_ANGLES):Vector3D[] {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    deltaTransformVector(v:Vector3D):Vector3D {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    identity():void {\r\n        this._data = [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    }\r\n\r\n    static interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D {\r\n        percent = GLUtil.limitInto(percent, 0, 1);\r\n        var data:number[] = [];\r\n        for (var i = 0; i < 16; i++) {\r\n            data.push(thisMat._data[i] * (1 - percent) + toMat._data[i] * percent);\r\n        }\r\n        return new Matrix3D(data);\r\n    }\r\n\r\n    interpolateTo(toMat:Matrix3D, percent:number):Matrix3D {\r\n        return Matrix3D.interpolate(this, toMat, percent);\r\n    }\r\n\r\n    invert():boolean {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    pointAt(pos:Vector3D, at:Vector3D = Vector3D.ORIGIN, up:Vector3D = Vector3D.Z_AXIS):void {\r\n        var fx = at.x - pos.x;\r\n        var fy = at.y - pos.y;\r\n        var fz = at.z - pos.z;\r\n        var rlf = 1 / Math.sqrt(fx * fx + fy * fy + fz * fz);\r\n        fx *= rlf;\r\n        fy *= rlf;\r\n        fz *= rlf;\r\n        var sx = fy * up.z - fz * up.y;\r\n        var sy = fz * up.x - fx * up.z;\r\n        var sz = fx * up.y - fy * up.x;\r\n        var rls = 1 / Math.sqrt(sx * sx + sy * sy + sz * sz);\r\n        sx *= rls;\r\n        sy *= rls;\r\n        sz *= rls;\r\n        var ux = sy * fz - sz * fy;\r\n        var uy = sz * fx - sx * fz;\r\n        var uz = sx * fy - sy * fx;\r\n        var d = this._data;\r\n        d[0] = sx;\r\n        d[1] = sy;\r\n        d[2] = sz;\r\n        d[3] = 0;\r\n        d[4] = ux;\r\n        d[5] = uy;\r\n        d[6] = uz;\r\n        d[7] = 0;\r\n        d[8] = -fx;\r\n        d[9] = -fy;\r\n        d[10] = -fz;\r\n        d[11] = 0;\r\n        d[12] = 0;\r\n        d[13] = 0;\r\n        d[14] = 0;\r\n        d[15] = 1;\r\n        // translate(-pos.x, -pos.y, -pos.z)\r\n        var x = -pos.x, y = -pos.y, z = -pos.z;\r\n        d[3] += d[0] * x + d[1] * y + d[2] * z;\r\n        d[7] += d[4] * x + d[5] * y + d[6] * z;\r\n        d[11] += d[8] * x + d[9] * y + d[10] * z;\r\n        d[15] += d[12] * x + d[13] * y + d[14] * z;\r\n    }\r\n\r\n    prepend(rhs:Matrix3D):void {\r\n        this._data = Matrix3D.__dotProduct(this._data, rhs._data);\r\n    }\r\n\r\n    prependRotation(degrees:number, axis:Vector3D, pivotPoint:Vector3D = null):void {\r\n        if (pivotPoint !== null) {\r\n            this.prependTranslation(pivotPoint.x, pivotPoint.y, pivotPoint.z);\r\n        }\r\n        this._data = Matrix3D.__dotProduct(this._data, Matrix3D.__getRotationMatrix(degrees * Math.PI / 180, axis));\r\n        if (pivotPoint !== null) {\r\n            this.prependTranslation(-pivotPoint.x, -pivotPoint.y, -pivotPoint.z);\r\n        }\r\n    }\r\n\r\n    prependScale(xScale:number, yScale:number, zScale:number):void {\r\n        this._data = Matrix3D.__dotProduct(this._data, [\r\n            xScale, 0, 0, 0,\r\n            0, yScale, 0, 0,\r\n            0, 0, zScale, 0,\r\n            0, 0, 0, 1\r\n        ]);\r\n    }\r\n\r\n    prependTranslation(x:number, y:number, z:number):void {\r\n        this._data = Matrix3D.__dotProduct(this._data, [\r\n            1, 0, 0, x,\r\n            0, 1, 0, y,\r\n            0, 0, 1, z,\r\n            0, 0, 0, 1\r\n        ]);\r\n    }\r\n\r\n    recompose(components:Vector3D[], orientationStyle:string = Orientation3D.EULER_ANGLES):boolean {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    transformVector(v:Vector3D):Vector3D {\r\n        var x = this._data[0] * v.x + this._data[1] * v.y + this._data[2] * v.z + this._data[3] * v.w;\r\n        var y = this._data[4] * v.x + this._data[5] * v.y + this._data[6] * v.z + this._data[7] * v.w;\r\n        var z = this._data[8] * v.x + this._data[9] * v.y + this._data[10] * v.z + this._data[11] * v.w;\r\n        var w = this._data[12] * v.x + this._data[13] * v.y + this._data[14] * v.z + this._data[15] * v.w;\r\n        return new Vector3D(x, y, z, w);\r\n    }\r\n\r\n    transformVectors(vin:number[], vout:number[]):void {\r\n        if (vin.length % 3 !== 0) {\r\n            throw new ApplicationError(\"Matrix3D.transformVectors needs 2 arrays, size of the input array must be multiple of 3.\");\r\n        }\r\n        for (var i = 0; i < vin.length / 3; i++) {\r\n            var x = vin[i * 3], y = vin[i * 3 + 1], z = vin[i * 3 + 2];\r\n            var rx = this._data[0] * x + this._data[1] * y + this._data[2] * z;\r\n            var ry = this._data[4] * x + this._data[5] * y + this._data[6] * z;\r\n            var rz = this._data[8] * x + this._data[9] * y + this._data[10] * z;\r\n            vout.push(rx, ry, rz);\r\n        }\r\n    }\r\n\r\n    transpose():void {\r\n        var d = this._data;\r\n        this._data = [\r\n            d[0], d[4], d[8], d[12],\r\n            d[1], d[5], d[9], d[13],\r\n            d[2], d[6], d[10], d[14],\r\n            d[3], d[7], d[11], d[15]\r\n        ];\r\n    }\r\n\r\n    toArray():Float32Array {\r\n        var d = this._data;\r\n        // Matrix3D is stored in row-major order, while WebGL is in column-major order.\r\n        return new Float32Array([\r\n            d[0], d[4], d[8], d[12],\r\n            d[1], d[5], d[9], d[13],\r\n            d[2], d[6], d[10], d[14],\r\n            d[3], d[7], d[11], d[15]\r\n        ]);\r\n    }\r\n\r\n    setOrthographicProjection(left:number, right:number, top:number, bottom:number, near:number, far:number):void {\r\n        if (left === right || top === bottom || near === far) {\r\n            throw new ArgumentError(\"Null frustum\");\r\n        }\r\n        var rw = 1 / (right - left);\r\n        var rh = 1 / (top - bottom);\r\n        var rd = 1 / (far - near);\r\n        var d = this._data;\r\n        d[0] = 2 * rw;\r\n        d[1] = 0;\r\n        d[2] = 0;\r\n        d[3] = -(left + right) * rw;\r\n        d[4] = 0;\r\n        d[5] = 2 * rh;\r\n        d[6] = 0;\r\n        d[7] = -(top + bottom) * rh;\r\n        d[8] = 0;\r\n        d[9] = 0;\r\n        d[10] = -2 * rd;\r\n        d[11] = -(near + far) * rd;\r\n        d[12] = 0;\r\n        d[13] = 0;\r\n        d[14] = 0;\r\n        d[15] = 1;\r\n    }\r\n\r\n    setPerspectiveProjection(fov:number, aspect:number, near:number, far:number):void {\r\n        if (near === far || aspect === 0) {\r\n            throw new ArgumentError(\"Null frustum\");\r\n        }\r\n        if (near <= 0) {\r\n            throw new ArgumentError(\"near <= 0\");\r\n        }\r\n        if (far <= 0) {\r\n            throw new ArgumentError(\"far <= 0\");\r\n        }\r\n        fov = Math.PI / 2 * fov / 180;\r\n        var s = Math.sin(fov);\r\n        if (s === 0) {\r\n            throw new ArgumentError(\"Null frustum\");\r\n        }\r\n        var rd = 1 / (far - near);\r\n        var ct = Math.cos(fov) / s;\r\n        var d = this._data;\r\n        d[0] = ct / aspect;\r\n        d[1] = 0;\r\n        d[2] = 0;\r\n        d[3] = 0;\r\n        d[4] = 0;\r\n        d[5] = ct;\r\n        d[6] = 0;\r\n        d[7] = 0;\r\n        d[8] = 0;\r\n        d[9] = 0;\r\n        d[10] = -(far + near) * rd;\r\n        d[11] = -2 * near * far * rd;\r\n        d[12] = 0;\r\n        d[13] = 0;\r\n        d[14] = -1;\r\n        d[15] = 0;\r\n    }\r\n\r\n    position:Vector3D = null;\r\n\r\n    private static __dotProduct(a:number[], b:number[]):number[] {\r\n        if (a.length !== 16 || b.length !== 16) {\r\n            throw new Error(\"Matrix3D dot product needs a array of 16 elements.\");\r\n        }\r\n        var res:number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (var i = 0; i < 4; i++) {\r\n            for (var j = 0; j < 4; j++) {\r\n                for (var k = 0; k < 4; k++) {\r\n                    res[i * 4 + j] += a[i * 4 + k] * b[k * 4 + j];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    private static __getRotationMatrix(angle:number, axis:Vector3D):number[] {\r\n        // jabbany\r\n        var sT:number = Math.sin(angle), cT:number = Math.cos(angle);\r\n        return [\r\n            cT + axis.x * axis.x * (1 - cT), axis.x * axis.y * (1 - cT) - axis.z * sT, axis.x * axis.z * (1 - cT) + axis.y * sT, 0,\r\n            axis.x * axis.y * (1 - cT) + axis.z * sT, cT + axis.y * axis.y * (1 - cT), axis.y * axis.z * (1 - cT) - axis.x * sT, 0,\r\n            axis.z * axis.x * (1 - cT) - axis.y * sT, axis.z * axis.y * (1 - cT) + axis.x * sT, cT + axis.z * axis.z * (1 - cT), 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    }\r\n\r\n    private _data:number[] = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}