{"version":3,"sources":["flash/geom/Matrix3D.ts"],"names":[],"mappings":"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","file":"flash/geom/Matrix3D.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {Vector3D} from \"./Vector3D\";\r\nimport {Orientation3D} from \"./Orientation3D\";\r\nimport {ICopyable} from \"../../ICopyable\";\r\nimport {ICloneable} from \"../../ICloneable\";\r\nimport {NotImplementedError} from \"../../flash/errors/NotImplementedError\";\r\nimport {GLUtil} from \"../../GLUtil\";\r\nimport {ArgumentError} from \"../../flash/errors/ArgumentError\";\r\nimport {ApplicationError} from \"../errors/ApplicationError\";\r\n\r\nexport class Matrix3D implements ICloneable<Matrix3D>, ICopyable<Matrix3D> {\r\n\r\n    constructor(v:number[] = null) {\r\n        if (v === null || v.length <= 0) {\r\n            v = [\r\n                1, 0, 0, 0,\r\n                0, 1, 0, 0,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1\r\n            ];\r\n        }\r\n        this.rawData = v;\r\n    }\r\n\r\n    get determinant():number {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    get rawData():number[] {\r\n        return this._data;\r\n    }\r\n\r\n    set rawData(v:number[]) {\r\n        if (v.length < 16) {\r\n            throw new Error(\"Data length of Matrix3D must be no less than 16.\");\r\n        }\r\n        this._data = v.slice();\r\n    }\r\n\r\n    append(lhs:Matrix3D):void {\r\n        this._data = Matrix3D.__dotProduct(lhs._data, this._data);\r\n    }\r\n\r\n    appendRotation(degrees:number, axis:Vector3D, pivotPoint:Vector3D = null):void {\r\n        if (pivotPoint !== null) {\r\n            this.appendTranslation(pivotPoint.x, pivotPoint.y, pivotPoint.z);\r\n        }\r\n        this._data = Matrix3D.__dotProduct(Matrix3D.__getRotationMatrix(degrees * Math.PI / 180, axis), this._data);\r\n        if (pivotPoint !== null) {\r\n            this.appendTranslation(-pivotPoint.x, -pivotPoint.y, -pivotPoint.z);\r\n        }\r\n    }\r\n\r\n    appendScale(xScale:number, yScale:number, zScale:number):void {\r\n        this._data = Matrix3D.__dotProduct([\r\n            xScale, 0, 0, 0,\r\n            0, yScale, 0, 0,\r\n            0, 0, zScale, 0,\r\n            0, 0, 0, 1\r\n        ], this._data);\r\n    }\r\n\r\n    appendTranslation(x:number, y:number, z:number):void {\r\n        this._data = Matrix3D.__dotProduct([\r\n            1, 0, 0, x,\r\n            0, 1, 0, y,\r\n            0, 0, 1, z,\r\n            0, 0, 0, 1\r\n        ], this._data);\r\n    }\r\n\r\n    clone():Matrix3D {\r\n        var m:Matrix3D = new Matrix3D(this.rawData);\r\n        m.position = this.position !== null ? this.position.clone() : null;\r\n        return m;\r\n    }\r\n\r\n    copyColumnFrom(column:number, vector3D:Vector3D):void {\r\n        if (column < 0 || column > 3) {\r\n            throw new RangeError(\"Column must be 0, 1, 2 or 3.\");\r\n        }\r\n        this._data[column * 4] = vector3D.x;\r\n        this._data[column * 4 + 1] = vector3D.y;\r\n        this._data[column * 4 + 2] = vector3D.z;\r\n        this._data[column * 4 + 3] = vector3D.w;\r\n    }\r\n\r\n    copyColumnTo(column:number, vector3D:Vector3D):void {\r\n        if (column < 0 || column > 3) {\r\n            throw new RangeError(\"Column must be 0, 1, 2 or 3.\");\r\n        }\r\n        vector3D.x = this._data[column * 4];\r\n        vector3D.y = this._data[column * 4 + 1];\r\n        vector3D.z = this._data[column * 4 + 2];\r\n        vector3D.w = this._data[column * 4 + 3];\r\n    }\r\n\r\n    copyFrom(sourceMatrix3D:Matrix3D):void {\r\n        this.position = sourceMatrix3D.position !== null ? sourceMatrix3D.position.clone() : null;\r\n        this.rawData = sourceMatrix3D.rawData;\r\n    }\r\n\r\n    copyRawDataFrom(vector:number[], index:number = 0, transpose:boolean = false):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    copyRawDataTo(vector:number[], index:number = 0, transpose:boolean = false):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    copyRowFrom(row:number, vector3D:Vector3D):void {\r\n        if (row < 0 || row > 3) {\r\n            throw new RangeError(\"Row must be 0, 1, 2 or 3.\");\r\n        }\r\n        this._data[row] = vector3D.x;\r\n        this._data[row + 4] = vector3D.y;\r\n        this._data[row + 8] = vector3D.z;\r\n        this._data[row + 12] = vector3D.w;\r\n    }\r\n\r\n    copyRowTo(row:number, vector3D:Vector3D):void {\r\n        if (row < 0 || row > 3) {\r\n            throw new RangeError(\"Row must be 0, 1, 2 or 3.\");\r\n        }\r\n        vector3D.x = this._data[row];\r\n        vector3D.y = this._data[row + 4];\r\n        vector3D.z = this._data[row + 8];\r\n        vector3D.w = this._data[row + 12];\r\n    }\r\n\r\n    copyToMatrix3D(dest:Matrix3D):void {\r\n        dest.position = this.position !== null ? this.position.clone() : null;\r\n        dest.rawData = this.rawData;\r\n    }\r\n\r\n    decompose(orientationStyle:string = Orientation3D.EULER_ANGLES):Vector3D[] {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    deltaTransformVector(v:Vector3D):Vector3D {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    identity():void {\r\n        this._data = [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    }\r\n\r\n    static interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:number):Matrix3D {\r\n        percent = GLUtil.limitInto(percent, 0, 1);\r\n        var data:number[] = [];\r\n        for (var i = 0; i < 16; i++) {\r\n            data.push(thisMat._data[i] * (1 - percent) + toMat._data[i] * percent);\r\n        }\r\n        return new Matrix3D(data);\r\n    }\r\n\r\n    interpolateTo(toMat:Matrix3D, percent:number):Matrix3D {\r\n        return Matrix3D.interpolate(this, toMat, percent);\r\n    }\r\n\r\n    invert():boolean {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    pointAt(pos:Vector3D, at:Vector3D = Vector3D.ORIGIN, up:Vector3D = Vector3D.Z_AXIS):void {\r\n        var fx = at.x - pos.x;\r\n        var fy = at.y - pos.y;\r\n        var fz = at.z - pos.z;\r\n        var rlf = 1 / Math.sqrt(fx * fx + fy * fy + fz * fz);\r\n        fx *= rlf;\r\n        fy *= rlf;\r\n        fz *= rlf;\r\n        var sx = fy * up.z - fz * up.y;\r\n        var sy = fz * up.x - fx * up.z;\r\n        var sz = fx * up.y - fy * up.x;\r\n        var rls = 1 / Math.sqrt(sx * sx + sy * sy + sz * sz);\r\n        sx *= rls;\r\n        sy *= rls;\r\n        sz *= rls;\r\n        var ux = sy * fz - sz * fy;\r\n        var uy = sz * fx - sx * fz;\r\n        var uz = sx * fy - sy * fx;\r\n        var d = this._data;\r\n        d[0] = sx;\r\n        d[1] = sy;\r\n        d[2] = sz;\r\n        d[3] = 0;\r\n        d[4] = ux;\r\n        d[5] = uy;\r\n        d[6] = uz;\r\n        d[7] = 0;\r\n        d[8] = -fx;\r\n        d[9] = -fy;\r\n        d[10] = -fz;\r\n        d[11] = 0;\r\n        d[12] = 0;\r\n        d[13] = 0;\r\n        d[14] = 0;\r\n        d[15] = 1;\r\n        // translate(-pos.x, -pos.y, -pos.z)\r\n        var x = -pos.x, y = -pos.y, z = -pos.z;\r\n        d[3] += d[0] * x + d[1] * y + d[2] * z;\r\n        d[7] += d[4] * x + d[5] * y + d[6] * z;\r\n        d[11] += d[8] * x + d[9] * y + d[10] * z;\r\n        d[15] += d[12] * x + d[13] * y + d[14] * z;\r\n    }\r\n\r\n    prepend(rhs:Matrix3D):void {\r\n        this._data = Matrix3D.__dotProduct(this._data, rhs._data);\r\n    }\r\n\r\n    prependRotation(degrees:number, axis:Vector3D, pivotPoint:Vector3D = null):void {\r\n        if (pivotPoint !== null) {\r\n            this.prependTranslation(pivotPoint.x, pivotPoint.y, pivotPoint.z);\r\n        }\r\n        this._data = Matrix3D.__dotProduct(this._data, Matrix3D.__getRotationMatrix(degrees * Math.PI / 180, axis));\r\n        if (pivotPoint !== null) {\r\n            this.prependTranslation(-pivotPoint.x, -pivotPoint.y, -pivotPoint.z);\r\n        }\r\n    }\r\n\r\n    prependScale(xScale:number, yScale:number, zScale:number):void {\r\n        this._data = Matrix3D.__dotProduct(this._data, [\r\n            xScale, 0, 0, 0,\r\n            0, yScale, 0, 0,\r\n            0, 0, zScale, 0,\r\n            0, 0, 0, 1\r\n        ]);\r\n    }\r\n\r\n    prependTranslation(x:number, y:number, z:number):void {\r\n        this._data = Matrix3D.__dotProduct(this._data, [\r\n            1, 0, 0, x,\r\n            0, 1, 0, y,\r\n            0, 0, 1, z,\r\n            0, 0, 0, 1\r\n        ]);\r\n    }\r\n\r\n    recompose(components:Vector3D[], orientationStyle:string = Orientation3D.EULER_ANGLES):boolean {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    transformVector(v:Vector3D):Vector3D {\r\n        var x = this._data[0] * v.x + this._data[1] * v.y + this._data[2] * v.z + this._data[3] * v.w;\r\n        var y = this._data[4] * v.x + this._data[5] * v.y + this._data[6] * v.z + this._data[7] * v.w;\r\n        var z = this._data[8] * v.x + this._data[9] * v.y + this._data[10] * v.z + this._data[11] * v.w;\r\n        var w = this._data[12] * v.x + this._data[13] * v.y + this._data[14] * v.z + this._data[15] * v.w;\r\n        return new Vector3D(x, y, z, w);\r\n    }\r\n\r\n    transformVectors(vin:number[], vout:number[]):void {\r\n        if (vin.length % 3 !== 0) {\r\n            throw new ApplicationError(\"Matrix3D.transformVectors needs 2 arrays, size of the input array must be multiple of 3.\");\r\n        }\r\n        for (var i = 0; i < vin.length / 3; i++) {\r\n            var x = vin[i * 3], y = vin[i * 3 + 1], z = vin[i * 3 + 2];\r\n            var rx = this._data[0] * x + this._data[1] * y + this._data[2] * z;\r\n            var ry = this._data[4] * x + this._data[5] * y + this._data[6] * z;\r\n            var rz = this._data[8] * x + this._data[9] * y + this._data[10] * z;\r\n            vout.push(rx, ry, rz);\r\n        }\r\n    }\r\n\r\n    transpose():void {\r\n        var d = this._data;\r\n        this._data = [\r\n            d[0], d[4], d[8], d[12],\r\n            d[1], d[5], d[9], d[13],\r\n            d[2], d[6], d[10], d[14],\r\n            d[3], d[7], d[11], d[15]\r\n        ];\r\n    }\r\n\r\n    toArray():Float32Array {\r\n        var d = this._data;\r\n        // Matrix3D is stored in row-major order, while WebGL is in column-major order.\r\n        return new Float32Array([\r\n            d[0], d[4], d[8], d[12],\r\n            d[1], d[5], d[9], d[13],\r\n            d[2], d[6], d[10], d[14],\r\n            d[3], d[7], d[11], d[15]\r\n        ]);\r\n    }\r\n\r\n    setOrthographicProjection(left:number, right:number, top:number, bottom:number, near:number, far:number):void {\r\n        if (left === right || top === bottom || near === far) {\r\n            throw new ArgumentError(\"Null frustum\");\r\n        }\r\n        var rw = 1 / (right - left);\r\n        var rh = 1 / (top - bottom);\r\n        var rd = 1 / (far - near);\r\n        var d = this._data;\r\n        d[0] = 2 * rw;\r\n        d[1] = 0;\r\n        d[2] = 0;\r\n        d[3] = -(left + right) * rw;\r\n        d[4] = 0;\r\n        d[5] = 2 * rh;\r\n        d[6] = 0;\r\n        d[7] = -(top + bottom) * rh;\r\n        d[8] = 0;\r\n        d[9] = 0;\r\n        d[10] = -2 * rd;\r\n        d[11] = -(near + far) * rd;\r\n        d[12] = 0;\r\n        d[13] = 0;\r\n        d[14] = 0;\r\n        d[15] = 1;\r\n    }\r\n\r\n    setPerspectiveProjection(fov:number, aspect:number, near:number, far:number):void {\r\n        if (near === far || aspect === 0) {\r\n            throw new ArgumentError(\"Null frustum\");\r\n        }\r\n        if (near <= 0) {\r\n            throw new ArgumentError(\"near <= 0\");\r\n        }\r\n        if (far <= 0) {\r\n            throw new ArgumentError(\"far <= 0\");\r\n        }\r\n        fov = Math.PI / 2 * fov / 180;\r\n        var s = Math.sin(fov);\r\n        if (s === 0) {\r\n            throw new ArgumentError(\"Null frustum\");\r\n        }\r\n        var rd = 1 / (far - near);\r\n        var ct = Math.cos(fov) / s;\r\n        var d = this._data;\r\n        d[0] = ct / aspect;\r\n        d[1] = 0;\r\n        d[2] = 0;\r\n        d[3] = 0;\r\n        d[4] = 0;\r\n        d[5] = ct;\r\n        d[6] = 0;\r\n        d[7] = 0;\r\n        d[8] = 0;\r\n        d[9] = 0;\r\n        d[10] = -(far + near) * rd;\r\n        d[11] = -2 * near * far * rd;\r\n        d[12] = 0;\r\n        d[13] = 0;\r\n        d[14] = -1;\r\n        d[15] = 0;\r\n    }\r\n\r\n    position:Vector3D = null;\r\n\r\n    private static __dotProduct(a:number[], b:number[]):number[] {\r\n        if (a.length !== 16 || b.length !== 16) {\r\n            throw new Error(\"Matrix3D dot product needs a array of 16 elements.\");\r\n        }\r\n        var res:number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (var i = 0; i < 4; i++) {\r\n            for (var j = 0; j < 4; j++) {\r\n                for (var k = 0; k < 4; k++) {\r\n                    res[i * 4 + j] += a[i * 4 + k] * b[k * 4 + j];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    private static __getRotationMatrix(angle:number, axis:Vector3D):number[] {\r\n        // jabbany\r\n        var sT:number = Math.sin(angle), cT:number = Math.cos(angle);\r\n        return [\r\n            cT + axis.x * axis.x * (1 - cT), axis.x * axis.y * (1 - cT) - axis.z * sT, axis.x * axis.z * (1 - cT) + axis.y * sT, 0,\r\n            axis.x * axis.y * (1 - cT) + axis.z * sT, cT + axis.y * axis.y * (1 - cT), axis.y * axis.z * (1 - cT) - axis.x * sT, 0,\r\n            axis.z * axis.x * (1 - cT) - axis.y * sT, axis.z * axis.y * (1 - cT) + axis.x * sT, cT + axis.z * axis.z * (1 - cT), 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    }\r\n\r\n    private _data:number[] = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}