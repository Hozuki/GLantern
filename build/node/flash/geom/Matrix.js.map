{"version":3,"sources":["flash/geom/Matrix.ts"],"names":[],"mappings":"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","file":"flash/geom/Matrix.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {Point} from \"./Point\";\r\nimport {Vector3D} from \"./Vector3D\";\r\nimport {ICloneable} from \"../../ICloneable\";\r\nimport {ICopyable} from \"../../ICopyable\";\r\nimport {NotImplementedError} from \"../../flash/errors/NotImplementedError\";\r\n\r\nexport class Matrix implements ICloneable<Matrix>, ICopyable<Matrix> {\r\n\r\n    constructor(a:number = 1, b:number = 0, c:number = 1, d:number = 1, tx:number = 0, ty:number = 0) {\r\n        this._data = [a, c, tx, b, d, ty, 0, 0, 1];\r\n    }\r\n\r\n    get a():number {\r\n        return this._data[0];\r\n    }\r\n\r\n    set a(v:number) {\r\n        this._data[0] = v;\r\n    }\r\n\r\n    get b():number {\r\n        return this._data[3];\r\n    }\r\n\r\n    set b(v:number) {\r\n        this._data[3] = v;\r\n    }\r\n\r\n    get c():number {\r\n        return this._data[1];\r\n    }\r\n\r\n    set c(v:number) {\r\n        this._data[1] = v;\r\n    }\r\n\r\n    get d():number {\r\n        return this._data[4];\r\n    }\r\n\r\n    set d(v:number) {\r\n        this._data[4] = v;\r\n    }\r\n\r\n    get tx():number {\r\n        return this._data[2];\r\n    }\r\n\r\n    set tx(v:number) {\r\n        this._data[2] = v;\r\n    }\r\n\r\n    get ty():number {\r\n        return this._data[5];\r\n    }\r\n\r\n    set ty(v:number) {\r\n        this._data[5] = v;\r\n    }\r\n\r\n    clone():Matrix {\r\n        return new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\r\n    }\r\n\r\n    concat(m:Matrix):void {\r\n        this._data = Matrix.dotProduct(this._data, m._data);\r\n    }\r\n\r\n    copyColumnFrom(column:number, vector3D:Vector3D):void {\r\n        if (column < 0 || column > 2) {\r\n            throw new RangeError('Column must be 0, 1, or 2.');\r\n        }\r\n        this._data[column * 3] = vector3D.x;\r\n        this._data[1 + column * 3] = vector3D.y;\r\n        this._data[2 + column * 3] = vector3D.z;\r\n    }\r\n\r\n    copyColumnTo(column:number, vector3D:Vector3D):void {\r\n        if (column < 0 || column > 2) {\r\n            throw new RangeError('Column must be 0, 1, or 2.');\r\n        }\r\n        vector3D.x = this._data[column * 3];\r\n        vector3D.y = this._data[1 + column * 3];\r\n        vector3D.z = this._data[2 + column * 3];\r\n    }\r\n\r\n    copyFrom(sourceMatrix:Matrix):void {\r\n        this._data = sourceMatrix._data.slice();\r\n    }\r\n\r\n    copyRowFrom(row:number, vector3D:Vector3D):void {\r\n        if (row < 0 || row > 2) {\r\n            throw new RangeError('Row must be 0, 1, or 2.');\r\n        }\r\n        this._data[row] = vector3D.x;\r\n        this._data[row + 3] = vector3D.y;\r\n        this._data[row + 6] = vector3D.z;\r\n    }\r\n\r\n    copyRowTo(row:number, vector3D:Vector3D):void {\r\n        if (row < 0 || row > 2) {\r\n            throw new RangeError('Column must be 0, 1, or 2.');\r\n        }\r\n        vector3D.x = this._data[row];\r\n        vector3D.y = this._data[3 + row];\r\n        vector3D.z = this._data[6 + row];\r\n    }\r\n\r\n    createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void {\r\n        this.identity();\r\n        this.rotate(rotation);\r\n        this.scale(scaleX, scaleY);\r\n        this.translate(tx, ty);\r\n    }\r\n\r\n    createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void {\r\n        this.createBox(width, height, rotation, tx, ty);\r\n    }\r\n\r\n    deltaTransformPoint(point:Point):Point {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    identity():void {\r\n        this._data = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n    }\r\n\r\n    invert():boolean {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    rotate(angle:number):void {\r\n        this._data = Matrix.dotProduct(this._data, [\r\n            Math.cos(angle), -Math.sin(angle), 0,\r\n            Math.sin(angle), Math.cos(angle), 0,\r\n            0, 0, 1\r\n        ]);\r\n    }\r\n\r\n    scale(sx:number, sy:number):void {\r\n        this._data = Matrix.dotProduct(this._data, [\r\n            sx, 0, 0,\r\n            0, sy, 0,\r\n            0, 0, 1\r\n        ]);\r\n    }\r\n\r\n    skew(skewX:number, skewY:number):void {\r\n        this._data = Matrix.dotProduct(this._data, [\r\n            0, Math.tan(skewX), 0,\r\n            Math.tan(skewY), 0, 0,\r\n            0, 0, 1\r\n        ]);\r\n    }\r\n\r\n    setTo(aa:number, ba:number, ca:number, da:number, txa:number, tya:number):void {\r\n        this._data = [aa, ca, txa, ba, da, tya, 0, 0, 1];\r\n    }\r\n\r\n    toString():string {\r\n        return `[${this.a} ${this.b} 0\\r\\n${this.c} ${this.d} 0\\r\\n${this.tx} ${this.ty} 1]`;\r\n    }\r\n\r\n    transformPoint(point:Point):Point {\r\n        // 由于 Flash 所用的矩阵是转置过的，所以这里变成了行×行\r\n        //var pointVector = [point.x, point.y, 1];\r\n        //var x = pointVector[0] * this._data[0] + pointVector[1] * this._data[1] + pointVector[2] * this._data[2];\r\n        //var y = pointVector[0] * this._data[3] + pointVector[1] * this._data[4] + pointVector[2] * this._data[5];\r\n        //return new Point(x, y);\r\n        return new Point(point.x * this._data[0] + point.y * this._data[1] + this._data[2],\r\n            point.x * this._data[3] + point.y * this._data[4] + this._data[5]);\r\n    }\r\n\r\n    translate(dx:number, dy:number):void {\r\n        this.tx += dx;\r\n        this.ty += dy;\r\n    }\r\n\r\n    private _data:number[];\r\n\r\n    private static dotProduct(a:number[], b:number[]):number[] {\r\n        if (b.length != 9) {\r\n            throw new Error('Matrix dot product requires a 3x3 matrix.');\r\n        }\r\n        var result = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (var i = 0; i < 3; i++) {\r\n            for (var j = 0; j < 3; j++) {\r\n                for (var k = 0; k < 3; k++) {\r\n                    result[i * 3 + j] += a[i * 3 + k] * b[k * 3 + j];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}