{"version":3,"sources":["flash/geom/matrix.ts"],"names":["Matrix","Matrix.constructor","Matrix.a","Matrix.b","Matrix.c","Matrix.d","Matrix.tx","Matrix.ty","Matrix.clone","Matrix.concat","Matrix.copyColumnFrom","Matrix.copyColumnTo","Matrix.copyFrom","Matrix.copyRowFrom","Matrix.copyRowTo","Matrix.createBox","Matrix.createGradientBox","Matrix.deltaTransformPoint","Matrix.identity","Matrix.invert","Matrix.rotate","Matrix.scale","Matrix.skew","Matrix.setTo","Matrix.toString","Matrix.transformPoint","Matrix.translate","Matrix.dotProduct"],"mappings":"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CAACA,CAACA;YAChBA,MAAMA,IAAIA,KAAKA,CAACA,2CAA2CA,CAACA,CAACA;QACjEA,CAACA;QACDA,IAAIA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;QACzCA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;YACzBA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACzBA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;oBACzBA,MAAMA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBACrDA,CAACA;YACLA,CAACA;QACLA,CAACA;QACDA,MAAMA,CAACA,MAAMA,CAACA;IAClBA,CAACA;IAEL3B,aAACA;AAADA,CA7LA,AA6LCA,IAAA;AA7LY,cAAM,SA6LlB,CAAA","file":"flash/geom/Matrix.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {Point} from \"./Point\";\r\nimport {Vector3D} from \"./Vector3D\";\r\nimport {ICloneable} from \"../../ICloneable\";\r\nimport {ICopyable} from \"../../ICopyable\";\r\nimport {NotImplementedError} from \"../../../lib/glantern-utils/src/NotImplementedError\";\r\n\r\nexport class Matrix implements ICloneable<Matrix>, ICopyable<Matrix> {\r\n\r\n    constructor(a:number = 1, b:number = 0, c:number = 1, d:number = 1, tx:number = 0, ty:number = 0) {\r\n        this._data = [a, c, tx, b, d, ty, 0, 0, 1];\r\n    }\r\n\r\n    get a():number {\r\n        return this._data[0];\r\n    }\r\n\r\n    set a(v:number) {\r\n        this._data[0] = v;\r\n    }\r\n\r\n    get b():number {\r\n        return this._data[3];\r\n    }\r\n\r\n    set b(v:number) {\r\n        this._data[3] = v;\r\n    }\r\n\r\n    get c():number {\r\n        return this._data[1];\r\n    }\r\n\r\n    set c(v:number) {\r\n        this._data[1] = v;\r\n    }\r\n\r\n    get d():number {\r\n        return this._data[4];\r\n    }\r\n\r\n    set d(v:number) {\r\n        this._data[4] = v;\r\n    }\r\n\r\n    get tx():number {\r\n        return this._data[2];\r\n    }\r\n\r\n    set tx(v:number) {\r\n        this._data[2] = v;\r\n    }\r\n\r\n    get ty():number {\r\n        return this._data[5];\r\n    }\r\n\r\n    set ty(v:number) {\r\n        this._data[5] = v;\r\n    }\r\n\r\n    clone():Matrix {\r\n        return new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\r\n    }\r\n\r\n    concat(m:Matrix):void {\r\n        this._data = Matrix.dotProduct(this._data, m._data);\r\n    }\r\n\r\n    copyColumnFrom(column:number, vector3D:Vector3D):void {\r\n        if (column < 0 || column > 2) {\r\n            throw new RangeError('Column must be 0, 1, or 2.');\r\n        }\r\n        this._data[column * 3] = vector3D.x;\r\n        this._data[1 + column * 3] = vector3D.y;\r\n        this._data[2 + column * 3] = vector3D.z;\r\n    }\r\n\r\n    copyColumnTo(column:number, vector3D:Vector3D):void {\r\n        if (column < 0 || column > 2) {\r\n            throw new RangeError('Column must be 0, 1, or 2.');\r\n        }\r\n        vector3D.x = this._data[column * 3];\r\n        vector3D.y = this._data[1 + column * 3];\r\n        vector3D.z = this._data[2 + column * 3];\r\n    }\r\n\r\n    copyFrom(sourceMatrix:Matrix):void {\r\n        this._data = sourceMatrix._data.slice();\r\n    }\r\n\r\n    copyRowFrom(row:number, vector3D:Vector3D):void {\r\n        if (row < 0 || row > 2) {\r\n            throw new RangeError('Row must be 0, 1, or 2.');\r\n        }\r\n        this._data[row] = vector3D.x;\r\n        this._data[row + 3] = vector3D.y;\r\n        this._data[row + 6] = vector3D.z;\r\n    }\r\n\r\n    copyRowTo(row:number, vector3D:Vector3D):void {\r\n        if (row < 0 || row > 2) {\r\n            throw new RangeError('Column must be 0, 1, or 2.');\r\n        }\r\n        vector3D.x = this._data[row];\r\n        vector3D.y = this._data[3 + row];\r\n        vector3D.z = this._data[6 + row];\r\n    }\r\n\r\n    createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void {\r\n        this.identity();\r\n        this.rotate(rotation);\r\n        this.scale(scaleX, scaleY);\r\n        this.translate(tx, ty);\r\n    }\r\n\r\n    createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void {\r\n        this.createBox(width, height, rotation, tx, ty);\r\n    }\r\n\r\n    deltaTransformPoint(point:Point):Point {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    identity():void {\r\n        this._data = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n    }\r\n\r\n    invert():boolean {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    rotate(angle:number):void {\r\n        this._data = Matrix.dotProduct(this._data, [\r\n            Math.cos(angle), -Math.sin(angle), 0,\r\n            Math.sin(angle), Math.cos(angle), 0,\r\n            0, 0, 1\r\n        ]);\r\n    }\r\n\r\n    scale(sx:number, sy:number):void {\r\n        this._data = Matrix.dotProduct(this._data, [\r\n            sx, 0, 0,\r\n            0, sy, 0,\r\n            0, 0, 1\r\n        ]);\r\n    }\r\n\r\n    skew(skewX:number, skewY:number):void {\r\n        this._data = Matrix.dotProduct(this._data, [\r\n            0, Math.tan(skewX), 0,\r\n            Math.tan(skewY), 0, 0,\r\n            0, 0, 1\r\n        ]);\r\n    }\r\n\r\n    setTo(aa:number, ba:number, ca:number, da:number, txa:number, tya:number):void {\r\n        this._data = [aa, ca, txa, ba, da, tya, 0, 0, 1];\r\n    }\r\n\r\n    toString():string {\r\n        return `[${this.a} ${this.b} 0\\r\\n${this.c} ${this.d} 0\\r\\n${this.tx} ${this.ty} 1]`;\r\n    }\r\n\r\n    transformPoint(point:Point):Point {\r\n        // 由于 Flash 所用的矩阵是转置过的，所以这里变成了行×行\r\n        //var pointVector = [point.x, point.y, 1];\r\n        //var x = pointVector[0] * this._data[0] + pointVector[1] * this._data[1] + pointVector[2] * this._data[2];\r\n        //var y = pointVector[0] * this._data[3] + pointVector[1] * this._data[4] + pointVector[2] * this._data[5];\r\n        //return new Point(x, y);\r\n        return new Point(point.x * this._data[0] + point.y * this._data[1] + this._data[2],\r\n            point.x * this._data[3] + point.y * this._data[4] + this._data[5]);\r\n    }\r\n\r\n    translate(dx:number, dy:number):void {\r\n        this.tx += dx;\r\n        this.ty += dy;\r\n    }\r\n\r\n    private _data:number[];\r\n\r\n    private static dotProduct(a:number[], b:number[]):number[] {\r\n        if (b.length != 9) {\r\n            throw new Error('Matrix dot product requires a 3x3 matrix.');\r\n        }\r\n        var result = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (var i = 0; i < 3; i++) {\r\n            for (var j = 0; j < 3; j++) {\r\n                for (var k = 0; k < 3; k++) {\r\n                    result[i * 3 + j] += a[i * 3 + k] * b[k * 3 + j];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}