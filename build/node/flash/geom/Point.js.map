{"version":3,"sources":["flash/geom/Point.ts"],"names":[],"mappings":"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","file":"flash/geom/Point.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {ICopyable} from \"../../ICopyable\";\r\nimport {ICloneable} from \"../../ICloneable\";\r\nimport {GLUtil} from \"../../GLUtil\";\r\n\r\nexport class Point implements ICloneable<Point>, ICopyable<Point> {\r\n\r\n    constructor(x:number = 0, y:number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    add(v:Point):Point {\r\n        return new Point(this.x + v.x, this.y + v.y);\r\n    }\r\n\r\n    clone():Point {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    copyFrom(sourcePoint:Point):void {\r\n        this.x = sourcePoint.x;\r\n        this.y = sourcePoint.y;\r\n    }\r\n\r\n    static distance(pt1:Point, pt2:Point):number {\r\n        return Math.sqrt((pt1.x - pt2.x) * (pt1.x - pt2.x) + (pt1.y - pt2.y) * (pt1.y - pt2.y));\r\n    }\r\n\r\n    equals(toCompare:Point):boolean {\r\n        return this.x === toCompare.x && this.y === toCompare.y;\r\n    }\r\n\r\n    static interpolate(pt1:Point, pt2:Point, f:number):Point {\r\n        f = GLUtil.limitInto(f, 0, 1);\r\n        return new Point(pt1.x * f + pt2.x * (1 - f), pt1.y * f + pt2.y * (1 - f));\r\n    }\r\n\r\n    get length():number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    normalize(thickness:number):void {\r\n        var len = this.length;\r\n        if (len > 0) {\r\n            this.x *= thickness / len;\r\n            this.y *= thickness / len;\r\n        }\r\n    }\r\n\r\n    offset(dx:number, dy:number):void {\r\n        this.x += dx;\r\n        this.y += dy;\r\n    }\r\n\r\n    static polar(len:number, angle:number):Point {\r\n        return new Point(len * Math.cos(angle), len * Math.sin(angle));\r\n    }\r\n\r\n    setTo(xa:number, ya:number):void {\r\n        this.x = xa;\r\n        this.y = ya;\r\n    }\r\n\r\n    subtract(v:Point):Point {\r\n        return new Point(this.x - v.x, this.y - v.y);\r\n    }\r\n\r\n    toString():string {\r\n        return `(X=${this.x}, y=${this.y})`;\r\n    }\r\n\r\n    x:number = 0;\r\n    y:number = 0;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}