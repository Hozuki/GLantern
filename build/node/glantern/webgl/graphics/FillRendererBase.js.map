{"version":3,"sources":["glantern/webgl/graphics/fillrendererbase.ts"],"names":["FillRendererBase","FillRendererBase.constructor","FillRendererBase.moveTo","FillRendererBase.getContourForClosedShapes","FillRendererBase.getContourForLines"],"mappings":"AAAA;;GAEG;;;;;;AAEH,yCAAuC,4BAA4B,CAAC,CAAA;AAIpE;IAA+CA,oCAAwBA;IAEnEA,0BAAYA,QAAiBA,EAAEA,QAAeA,EAAEA,QAAeA;QAC3DC,kBAAMA,QAAQA,EAAEA,QAAQA,EAAEA,QAAQA,EAAEA,QAAQA,EAAEA,QAAQA,CAACA,CAACA;QA6B5DA,+EAA+EA;QAC/EA,eAAUA,GAAUA,CAACA,CAACA,CAACA;QACvBA,aAAQA,GAAUA,CAACA,CAACA,CAACA;QA8BrBA,4CAA4CA;QAClCA,cAASA,GAAcA,IAAIA,CAACA;QAC5BA,wBAAmBA,GAAWA,IAAIA,CAACA;QA9DzCA,IAAIA,CAACA,SAASA,GAAGA,CAACA,EAAEA,CAACA,CAACA;QACtBA,IAAIA,CAACA,UAAUA,GAAGA,CAACA,CAACA,CAACA;QACrBA,IAAIA,CAACA,QAAQA,GAAGA,CAACA,CAACA,CAACA;QACnBA,IAAIA,CAACA,iBAAiBA,GAAGA,KAAKA,CAACA;QAC/BA,IAAIA,CAACA,mBAAmBA,GAAGA,IAAIA,CAACA;IACpCA,CAACA;IAEDD,iCAAMA,GAANA,UAAOA,CAAQA,EAAEA,CAAQA;QACrBE,4BAA4BA;QAC5BA,4BAA4BA;QAC5BA,4BAA4BA;QAC5BA,sBAAsBA;QAEtBA,kDAAkDA;QAClDA,IAAIA,CAACA,SAASA,EAAEA,CAACA;QACjBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,CAACA,CAACA;YACzBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,SAASA,KAAKA,CAACA,IAAIA,IAAIA,CAACA,SAASA,KAAKA,CAACA,CAACA,CAACA,CAACA;gBAC/CA,IAAIA,CAACA,mBAAmBA,GAAGA,IAAIA,CAACA;YACpCA,CAACA;QACLA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACJA,IAAIA,CAACA,mBAAmBA,GAAGA,IAAIA,CAACA;QACpCA,CAACA;QACDA,IAAIA,CAACA,SAASA,GAAGA,CAACA,CAACA;QACnBA,IAAIA,CAACA,SAASA,GAAGA,CAACA,CAACA;QACnBA,IAAIA,CAACA,eAAeA,GAAGA,CAACA,CAACA;QACzBA,IAAIA,CAACA,eAAeA,GAAGA,CAACA,CAACA;IAC7BA,CAACA;IAMSF,oDAAyBA,GAAnCA;QACIG,IAAIA,cAAuBA,CAACA;QAC5BA,EAAEA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,CAACA,CAACA;YACzBA,cAAcA,GAAGA,EAAEA,CAACA;YACpBA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA,cAAcA,CAACA,CAACA;YACpCA,IAAIA,CAACA,mBAAmBA,GAAGA,KAAKA,CAACA;QACrCA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACJA,cAAcA,GAAGA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;QACvCA,CAACA;QACDA,MAAMA,CAACA,cAAcA,CAACA;IAC1BA,CAACA;IAESH,6CAAkBA,GAA5BA;QACII,IAAIA,cAAuBA,CAACA;QAC5BA,EAAEA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,CAACA,CAACA;YACzBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,mBAAmBA,CAACA,CAACA,CAACA;gBAC3BA,cAAcA,GAAGA,EAAEA,CAACA;gBACpBA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA,cAAcA,CAACA,CAACA;gBACpCA,IAAIA,CAACA,mBAAmBA,GAAGA,KAAKA,CAACA;YACrCA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBACJA,cAAcA,GAAGA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA,SAASA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA;YAC/DA,CAACA;QACLA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACJA,cAAcA,GAAGA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;QACvCA,CAACA;QACDA,MAAMA,CAACA,cAAcA,CAACA;IAC1BA,CAACA;IAMLJ,uBAACA;AAADA,CApEA,AAoECA,EApE8C,mDAAwB,EAoEtE;AApEqB,wBAAgB,mBAoErC,CAAA","file":"glantern/webgl/graphics/FillRendererBase.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/20.\r\n */\r\n\r\nimport {GraphicsDataRendererBase} from \"./GraphicsDataRendererBase\";\r\nimport {IFillDataRenderer} from \"./IFillDataRenderer\";\r\nimport {Graphics} from \"../../flash/display/Graphics\";\r\n\r\nexport abstract class FillRendererBase extends GraphicsDataRendererBase implements IFillDataRenderer {\r\n\r\n    constructor(graphics:Graphics, currentX:number, currentY:number) {\r\n        super(graphics, currentX, currentY, currentX, currentY);\r\n        this._contours = [[]];\r\n        this.beginIndex = -1;\r\n        this.endIndex = -1;\r\n        this._hasDrawnAnything = false;\r\n        this._startingNewContour = true;\r\n    }\r\n\r\n    moveTo(x:number, y:number):void {\r\n        // Consider the code sample:\r\n        // g.beginFill(0xff0000, 1);\r\n        // g.lineStyle(1, 0xffffff);\r\n        // g.moveTo(100, 100);\r\n\r\n        // Flash closes the path before each moveTo() call\r\n        this.closePath();\r\n        if (this._hasDrawnAnything) {\r\n            if (this._currentX !== x || this._currentY !== y) {\r\n                this._startingNewContour = true;\r\n            }\r\n        } else {\r\n            this._startingNewContour = true;\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n        this._lastPathStartX = x;\r\n        this._lastPathStartY = y;\r\n    }\r\n\r\n    // Use to track the relative rendering order, based on stroke renderers' orders\r\n    beginIndex:number = -1;\r\n    endIndex:number = -1;\r\n\r\n    protected getContourForClosedShapes():number[] {\r\n        var currentContour:number[];\r\n        if (this._hasDrawnAnything) {\r\n            currentContour = [];\r\n            this._contours.push(currentContour);\r\n            this._startingNewContour = false;\r\n        } else {\r\n            currentContour = this._contours[0];\r\n        }\r\n        return currentContour;\r\n    }\r\n\r\n    protected getContourForLines():number[] {\r\n        var currentContour:number[];\r\n        if (this._hasDrawnAnything) {\r\n            if (this._startingNewContour) {\r\n                currentContour = [];\r\n                this._contours.push(currentContour);\r\n                this._startingNewContour = false;\r\n            } else {\r\n                currentContour = this._contours[this._contours.length - 1];\r\n            }\r\n        } else {\r\n            currentContour = this._contours[0];\r\n        }\r\n        return currentContour;\r\n    }\r\n\r\n    // See libtess.js Degenerate Hourglass test.\r\n    protected _contours:number[][] = null;\r\n    protected _startingNewContour:boolean = true;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}