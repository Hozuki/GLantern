{"version":3,"sources":["glantern/webgl/graphics/graphicsdatarendererbase.ts"],"names":["GraphicsDataRendererBase","GraphicsDataRendererBase.constructor","GraphicsDataRendererBase.bezierCurveTo","GraphicsDataRendererBase.closePath","GraphicsDataRendererBase.curveTo","GraphicsDataRendererBase.drawCircle","GraphicsDataRendererBase.drawEllipse","GraphicsDataRendererBase.drawRect","GraphicsDataRendererBase.drawRoundRect","GraphicsDataRendererBase.lineTo","GraphicsDataRendererBase.moveTo","GraphicsDataRendererBase.update","GraphicsDataRendererBase.render","GraphicsDataRendererBase.dispose","GraphicsDataRendererBase.becomeDirty","GraphicsDataRendererBase.hasDrawnAnything","GraphicsDataRendererBase.___initializeBuffers","GraphicsDataRendererBase.___syncBuffers"],"mappings":"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","file":"glantern/webgl/graphics/GraphicsDataRendererBase.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/20.\r\n */\r\n\r\nimport {Graphics} from \"../../flash/display/Graphics\";\r\nimport {IGraphicsDataRenderer} from \"./IGraphicsDataRenderer\";\r\nimport {WebGLRenderer} from \"../WebGLRenderer\";\r\nimport {PackedArrayBuffer} from \"../PackedArrayBuffer\";\r\nimport {RenderTarget2D} from \"../RenderTarget2D\";\r\nimport {NotImplementedError} from \"../../../../lib/glantern-utils/src/NotImplementedError\";\r\n\r\nvar gl = (<any>this).WebGLRenderingContext || (<any>window).WebGLRenderingContext;\r\n\r\nexport class GraphicsDataRendererBase implements IGraphicsDataRenderer {\r\n\r\n    constructor(graphics:Graphics, lastPathStartX:number, lastPathStartY:number, currentX:number, currentY:number) {\r\n        this._graphics = graphics;\r\n        this._glc = graphics.renderer.context;\r\n        this.__initializeBuffers();\r\n        this._hasDrawnAnything = false;\r\n        this._lastPathStartX = lastPathStartX;\r\n        this._lastPathStartY = lastPathStartY;\r\n        this.moveTo(currentX, currentY);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    bezierCurveTo(cx1:number, cy1:number, cx2:number, cy2:number, x:number, y:number):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    closePath():void {\r\n        // TODO: Consider the sample\r\n        // g.beginFill(0xff0000); g.drawRect(100, 100, 100, 100); g.lineStyle(0xff0000, 1);\r\n        // g.lineTo(400, 100); g.lineTo(200, 300); g.endFill();\r\n        if (this._hasDrawnAnything && (this._currentX != this._lastPathStartX || this._currentY != this._lastPathStartY)) {\r\n            this.lineTo(this._lastPathStartX, this._lastPathStartY);\r\n        }\r\n    }\r\n\r\n    curveTo(cx:number, cy:number, x:number, y:number):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    drawCircle(x:number, y:number, radius:number):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    drawEllipse(x:number, y:number, width:number, height:number):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    drawRect(x:number, y:number, width:number, height:number):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    lineTo(x:number, y:number):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    moveTo(x:number, y:number):void {\r\n        // Multiple movements are combined into one, which will be flushed at each\r\n        // IGraphicsDataRenderer call that draws concrete elements\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    update():void {\r\n        // check whether to update the typed buffer\r\n        this.__syncBuffers();\r\n    }\r\n\r\n    render(renderer:WebGLRenderer):void {\r\n        console.warn(\"Do not call GraphicsDataRendererBase.render().\");\r\n    }\r\n\r\n    dispose():void {\r\n        this._vertexBuffer.dispose();\r\n        this._colorBuffer.dispose();\r\n        this._indexBuffer.dispose();\r\n        this._vertexBuffer = this._colorBuffer = this._indexBuffer = null;\r\n        this._vertices = this._colors = this._indices = null;\r\n        this._glc = null;\r\n    }\r\n\r\n    becomeDirty():void {\r\n        this._isDirty = true;\r\n    }\r\n\r\n    get hasDrawnAnything():boolean {\r\n        return this._hasDrawnAnything;\r\n    }\r\n\r\n    private __initializeBuffers():void {\r\n        this._vertices = [];\r\n        this._colors = [];\r\n        this._indices = [];\r\n        this._vertexBuffer = PackedArrayBuffer.create(this._glc, this._vertices, gl.FLOAT, gl.ARRAY_BUFFER);\r\n        this._colorBuffer = PackedArrayBuffer.create(this._glc, this._colors, gl.FLOAT, gl.ARRAY_BUFFER);\r\n        this._indexBuffer = PackedArrayBuffer.create(this._glc, this._indices, gl.UNSIGNED_SHORT, gl.ELEMENT_ARRAY_BUFFER);\r\n    }\r\n\r\n    protected __syncBuffers():void {\r\n        if (this._isDirty) {\r\n            // When the array buffers become dirty, their values will be updated automatically\r\n            // at next draw call.\r\n            this._vertexBuffer.setNewData(this._vertices);\r\n            this._vertexBuffer.becomeDirty();\r\n            this._colorBuffer.setNewData(this._colors);\r\n            this._colorBuffer.becomeDirty();\r\n            this._indexBuffer.setNewData(this._indices);\r\n            this._indexBuffer.becomeDirty();\r\n            this._isDirty = false;\r\n        }\r\n    }\r\n\r\n    protected _graphics:Graphics = null;\r\n    protected _glc:WebGLRenderingContext = null;\r\n    protected _isDirty:boolean = true;\r\n    // Local points buffer, format: X, Y, Z(=STD_Z)\r\n    protected _vertices:number[] = null;\r\n    // Colors of points, format: R, G, B, A\r\n    protected _colors:number[] = null;\r\n    // Local indices (for points) buffer\r\n    protected _indices:number[] = null;\r\n    protected _vertexBuffer:PackedArrayBuffer = null;\r\n    protected _colorBuffer:PackedArrayBuffer = null;\r\n    protected _indexBuffer:PackedArrayBuffer = null;\r\n    protected _currentX:number = 0;\r\n    protected _currentY:number = 0;\r\n    protected _hasDrawnAnything:boolean = false;\r\n    protected _lastPathStartX:number = 0;\r\n    protected _lastPathStartY:number = 0;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}