{"version":3,"sources":["glantern/webgl/shaders/bluryshader.ts"],"names":["BlurYShader","BlurYShader.constructor","BlurYShader.setStrength","BlurYShader.getStrength","BlurYShader.___localInit"],"mappings":"AAAA;;GAEG;;;;;;AAEH,6BAA2B,iBAAiB,CAAC,CAAA;AAG7C,8BAA4B,kBAAkB,CAAC,CAAA;AAC/C,gCAA8B,oBAAoB,CAAC,CAAA;AACnD,+BAA6B,kBAAkB,CAAC,CAAA;AAChD,8BAA4B,kBAAkB,CAAC,CAAA;AAE/C;IAAiCA,+BAAcA;IAE3CA,qBAAYA,OAAqBA;QAC7BC,kBAAMA,OAAOA,EAAEA,WAAWA,CAACA,aAAaA,EAAEA,WAAWA,CAACA,eAAeA,CAACA,CAACA;IAC3EA,CAACA;IAEDD,iCAAWA,GAAXA,UAAYA,QAAeA;QACvBE,EAAEA,CAACA,CAACA,QAAQA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACfA,QAAQA,GAAGA,CAACA,CAACA;QACjBA,CAACA;QACDA,IAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,WAAWA,CAACA,CAACA,KAAKA,GAAGA,QAAQA,CAACA;IACrDA,CAACA;IAEDF,iCAAWA,GAAXA;QACIG,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,WAAWA,CAACA,CAACA,KAAKA,CAACA;IACjDA,CAACA;IAMSH,iCAAWA,GAArBA,UAAsBA,OAAqBA,EAAEA,QAAkCA,EAAEA,UAAsCA;QACnHI,gBAAKA,CAACA,WAAWA,YAACA,OAAOA,EAAEA,QAAQA,EAAEA,UAAUA,CAACA,CAACA;QAEjDA,IAAIA,CAAcA,CAACA;QAEnBA,CAACA,GAAGA,IAAIA,2BAAYA,EAAEA,CAACA;QACvBA,CAACA,CAACA,IAAIA,GAAGA,WAAWA,CAACA;QACrBA,CAACA,CAACA,IAAIA,GAAGA,6BAAaA,CAACA,GAAGA,CAACA;QAC3BA,CAACA,CAACA,KAAKA,GAAGA,CAACA,CAACA;QACZA,QAAQA,CAACA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;IAC5BA,CAACA;IAdMJ,6BAAiBA,GAAUA,aAAaA,CAACA;IACzCA,2BAAeA,GAAUA,iCAAeA,CAACA,IAAIA,CAACA;IAC9CA,yBAAaA,GAAUA,6BAAaA,CAACA,KAAKA,CAACA;IActDA,kBAACA;AAADA,CAjCA,AAiCCA,EAjCgC,+BAAc,EAiC9C;AAjCY,mBAAW,cAiCvB,CAAA","file":"glantern/webgl/shaders/BlurYShader.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {UniformCache} from \"../UniformCache\";\r\nimport {AttributeCache} from \"../AttributeCache\";\r\nimport {ShaderManager} from \"../ShaderManager\";\r\nimport {VertexShaders} from \"../VertexShaders\";\r\nimport {FragmentShaders} from \"../FragmentShaders\";\r\nimport {BufferedShader} from \"./BufferedShader\";\r\nimport {WebGLDataType} from \"../WebGLDataType\";\r\n\r\nexport class BlurYShader extends BufferedShader {\r\n\r\n    constructor(manager:ShaderManager) {\r\n        super(manager, BlurYShader.VERTEX_SOURCE, BlurYShader.FRAGMENT_SOURCE);\r\n    }\r\n\r\n    setStrength(strength:number):void {\r\n        if (strength < 0) {\r\n            strength = 1;\r\n        }\r\n        this._uniforms.get(\"uStrength\").value = strength;\r\n    }\r\n\r\n    getStrength():number {\r\n        return this._uniforms.get(\"uStrength\").value;\r\n    }\r\n\r\n    static SHADER_CLASS_NAME:string = \"BlurYShader\";\r\n    static FRAGMENT_SOURCE:string = FragmentShaders.blur;\r\n    static VERTEX_SOURCE:string = VertexShaders.blurY;\r\n\r\n    protected __localInit(manager:ShaderManager, uniforms:Map<string, UniformCache>, attributes:Map<string, AttributeCache>):void {\r\n        super.__localInit(manager, uniforms, attributes);\r\n\r\n        var u:UniformCache;\r\n\r\n        u = new UniformCache();\r\n        u.name = \"uStrength\";\r\n        u.type = WebGLDataType.U1F;\r\n        u.value = 5;\r\n        uniforms.set(u.name, u);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}