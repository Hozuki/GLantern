{"version":3,"sources":["glantern/webgl/shaders/bufferedshader.ts"],"names":["BufferedShader","BufferedShader.constructor","BufferedShader.setTexture","BufferedShader.___localInit"],"mappings":"AAAA;;GAEG;;;;;;AAEH,yBAAuB,2BAA2B,CAAC,CAAA;AACnD,6BAA2B,iBAAiB,CAAC,CAAA;AAG7C,8BAA4B,kBAAkB,CAAC,CAAA;AAC/C,gCAA8B,oBAAoB,CAAC,CAAA;AACnD,2BAAyB,eAAe,CAAC,CAAA;AACzC,8BAA4B,kBAAkB,CAAC,CAAA;AAE/C;IAAoCA,kCAAUA;IAE1CA,wBAAYA,OAAqBA,EAAEA,YAAmBA,EAAEA,cAAqBA;QACzEC,kBAAMA,OAAOA,EAAEA,YAAYA,EAAEA,cAAcA,EAAEA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;IAC7DA,CAACA;IAEDD,mCAAUA,GAAVA,UAAWA,OAAoBA;QAC3BE,sCAAsCA;QACtCA,IAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,UAAUA,CAACA,CAACA,OAAOA,GAAGA,OAAOA,CAACA;IACrDA,CAACA;IAMSF,oCAAWA,GAArBA,UAAsBA,OAAqBA,EAAEA,QAAkCA,EAAEA,UAAsCA;QACnHG,gBAAKA,CAACA,WAAWA,YAACA,OAAOA,EAAEA,QAAQA,EAAEA,UAAUA,CAACA,CAACA;QAEjDA,IAAIA,CAAcA,CAACA;QACnBA,IAAIA,gBAAgBA,GAAGA,IAAIA,mBAAQA,EAAEA,CAACA;QACtCA,IAAIA,CAACA,GAAGA,OAAOA,CAACA,QAAQA,CAACA,IAAIA,CAACA,KAAKA,CAACA;QACpCA,IAAIA,CAACA,GAAGA,OAAOA,CAACA,QAAQA,CAACA,IAAIA,CAACA,MAAMA,CAACA;QACrCA,gBAAgBA,CAACA,yBAAyBA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;QAEpEA,CAACA,GAAGA,IAAIA,2BAAYA,EAAEA,CAACA;QACvBA,CAACA,CAACA,IAAIA,GAAGA,UAAUA,CAACA;QACpBA,CAACA,CAACA,IAAIA,GAAGA,6BAAaA,CAACA,UAAUA,CAACA;QAClCA,CAACA,CAACA,KAAKA,GAAGA,CAACA,CAACA;QACZA,CAACA,CAACA,OAAOA,GAAGA,IAAIA,CAACA;QACjBA,QAAQA,CAACA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;QAExBA,CAACA,GAAGA,IAAIA,2BAAYA,EAAEA,CAACA;QACvBA,CAACA,CAACA,IAAIA,GAAGA,mBAAmBA,CAACA;QAC7BA,CAACA,CAACA,IAAIA,GAAGA,6BAAaA,CAACA,KAAKA,CAACA;QAC7BA,CAACA,CAACA,KAAKA,GAAGA,gBAAgBA,CAACA,OAAOA,EAAEA,CAACA;QACrCA,CAACA,CAACA,SAASA,GAAGA,KAAKA,CAACA;QACpBA,QAAQA,CAACA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;IAC5BA,CAACA;IA1BMH,gCAAiBA,GAAUA,gBAAgBA,CAACA;IAC5CA,8BAAeA,GAAUA,iCAAeA,CAACA,QAAQA,CAACA;IAClDA,4BAAaA,GAAUA,6BAAaA,CAACA,QAAQA,CAACA;IA0BzDA,qBAACA;AAADA,CAvCA,AAuCCA,EAvCmC,uBAAU,EAuC7C;AAvCY,sBAAc,iBAuC1B,CAAA","file":"glantern/webgl/shaders/BufferedShader.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {Matrix3D} from \"../../flash/geom/Matrix3D\";\r\nimport {UniformCache} from \"../UniformCache\";\r\nimport {AttributeCache} from \"../AttributeCache\";\r\nimport {ShaderManager} from \"../ShaderManager\";\r\nimport {VertexShaders} from \"../VertexShaders\";\r\nimport {FragmentShaders} from \"../FragmentShaders\";\r\nimport {ShaderBase} from \"../ShaderBase\";\r\nimport {WebGLDataType} from \"../WebGLDataType\";\r\n\r\nexport class BufferedShader extends ShaderBase {\r\n\r\n    constructor(manager:ShaderManager, vertexSource:string, fragmentSource:string) {\r\n        super(manager, vertexSource, fragmentSource, null, null);\r\n    }\r\n\r\n    setTexture(texture:WebGLTexture):void {\r\n        // Must contains a \"uSampler\" uniform.\r\n        this._uniforms.get(\"uSampler\").texture = texture;\r\n    }\r\n\r\n    static SHADER_CLASS_NAME:string = \"BufferedShader\";\r\n    static FRAGMENT_SOURCE:string = FragmentShaders.buffered;\r\n    static VERTEX_SOURCE:string = VertexShaders.buffered;\r\n\r\n    protected __localInit(manager:ShaderManager, uniforms:Map<string, UniformCache>, attributes:Map<string, AttributeCache>):void {\r\n        super.__localInit(manager, uniforms, attributes);\r\n\r\n        var u:UniformCache;\r\n        var projectionMatrix = new Matrix3D();\r\n        var w = manager.renderer.view.width;\r\n        var h = manager.renderer.view.height;\r\n        projectionMatrix.setOrthographicProjection(0, w, h, 0, -1000, 1000);\r\n\r\n        u = new UniformCache();\r\n        u.name = \"uSampler\";\r\n        u.type = WebGLDataType.USampler2D;\r\n        u.value = 0;\r\n        u.texture = null;\r\n        uniforms.set(u.name, u);\r\n\r\n        u = new UniformCache();\r\n        u.name = \"uProjectionMatrix\";\r\n        u.type = WebGLDataType.UMat4;\r\n        u.value = projectionMatrix.toArray();\r\n        u.transpose = false;\r\n        uniforms.set(u.name, u);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}