{"version":3,"sources":["glantern/webgl/shaders/colortransformshader.ts"],"names":["ColorTransformShader","ColorTransformShader.constructor","ColorTransformShader.setColorMatrix","ColorTransformShader.___localInit"],"mappings":"AAAA;;GAEG;;;;;;AAEH,6BAA2B,iBAAiB,CAAC,CAAA;AAG7C,8BAA4B,kBAAkB,CAAC,CAAA;AAC/C,gCAA8B,oBAAoB,CAAC,CAAA;AACnD,+BAA6B,kBAAkB,CAAC,CAAA;AAChD,8BAA4B,kBAAkB,CAAC,CAAA;AAE/C;IAA0CA,wCAAcA;IAEpDA,8BAAYA,OAAqBA;QAC7BC,kBAAMA,OAAOA,EAAEA,oBAAoBA,CAACA,aAAaA,EAAEA,oBAAoBA,CAACA,eAAeA,CAACA,CAACA;IAC7FA,CAACA;IAEDD,6CAAcA,GAAdA,UAAeA,IAAaA;QACxBE,EAAEA,CAACA,CAACA,IAAIA,CAACA,MAAMA,GAAGA,EAAEA,CAACA,CAACA,CAACA;YACnBA,OAAOA,CAACA,IAAIA,CAACA,yDAAyDA,CAACA,CAACA;YACxEA,MAAMA,CAACA;QACXA,CAACA;QACDA,IAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,cAAcA,CAACA,CAACA,KAAKA,GAAGA,IAAIA,CAACA,KAAKA,EAAEA,CAACA;IAC5DA,CAACA;IAMSF,0CAAWA,GAArBA,UAAsBA,OAAqBA,EAAEA,QAAkCA,EAAEA,UAAsCA;QACnHG,gBAAKA,CAACA,WAAWA,YAACA,OAAOA,EAAEA,QAAQA,EAAEA,UAAUA,CAACA,CAACA;QAEjDA,IAAIA,CAAcA,CAACA;QACnBA,IAAIA,kBAAkBA,GAAGA;YACrBA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;YACbA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;YACbA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;YACbA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;SAChBA,CAACA;QAEFA,CAACA,GAAGA,IAAIA,2BAAYA,EAAEA,CAACA;QACvBA,CAACA,CAACA,IAAIA,GAAGA,cAAcA,CAACA;QACxBA,CAACA,CAACA,IAAIA,GAAGA,6BAAaA,CAACA,IAAIA,CAACA;QAC5BA,CAACA,CAACA,KAAKA,GAAGA,kBAAkBA,CAACA;QAC7BA,QAAQA,CAACA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;IAC5BA,CAACA;IApBMH,sCAAiBA,GAAUA,sBAAsBA,CAACA;IAClDA,oCAAeA,GAAUA,iCAAeA,CAACA,cAAcA,CAACA;IACxDA,kCAAaA,GAAUA,6BAAaA,CAACA,QAAQA,CAACA;IAoBzDA,2BAACA;AAADA,CApCA,AAoCCA,EApCyC,+BAAc,EAoCvD;AApCY,4BAAoB,uBAoChC,CAAA","file":"glantern/webgl/shaders/ColorTransformShader.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {UniformCache} from \"../UniformCache\";\r\nimport {AttributeCache} from \"../AttributeCache\";\r\nimport {ShaderManager} from \"../ShaderManager\";\r\nimport {VertexShaders} from \"../VertexShaders\";\r\nimport {FragmentShaders} from \"../FragmentShaders\";\r\nimport {BufferedShader} from \"./BufferedShader\";\r\nimport {WebGLDataType} from \"../WebGLDataType\";\r\n\r\nexport class ColorTransformShader extends BufferedShader {\r\n\r\n    constructor(manager:ShaderManager) {\r\n        super(manager, ColorTransformShader.VERTEX_SOURCE, ColorTransformShader.FRAGMENT_SOURCE);\r\n    }\r\n\r\n    setColorMatrix(r4c5:number[]):void {\r\n        if (r4c5.length < 20) {\r\n            console.warn(\"ColorTransformShader.setColorMatrix needs a 4x5 matrix.\");\r\n            return;\r\n        }\r\n        this._uniforms.get(\"uColorMatrix\").value = r4c5.slice();\r\n    }\r\n\r\n    static SHADER_CLASS_NAME:string = \"ColorTransformShader\";\r\n    static FRAGMENT_SOURCE:string = FragmentShaders.colorTransform;\r\n    static VERTEX_SOURCE:string = VertexShaders.buffered;\r\n\r\n    protected __localInit(manager:ShaderManager, uniforms:Map<string, UniformCache>, attributes:Map<string, AttributeCache>):void {\r\n        super.__localInit(manager, uniforms, attributes);\r\n\r\n        var u:UniformCache;\r\n        var defaultColorMatrix = [\r\n            1, 0, 0, 0, 0,\r\n            0, 1, 0, 0, 0,\r\n            0, 0, 1, 0, 0,\r\n            0, 0, 0, 1, 0\r\n        ];\r\n\r\n        u = new UniformCache();\r\n        u.name = \"uColorMatrix\";\r\n        u.type = WebGLDataType.U1FV;\r\n        u.value = defaultColorMatrix;\r\n        uniforms.set(u.name, u);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}