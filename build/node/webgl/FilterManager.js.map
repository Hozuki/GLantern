{"version":3,"sources":["webgl/FilterManager.ts"],"names":["FilterManager","FilterManager.constructor","FilterManager.dispose","FilterManager.clearFilterGroups","FilterManager.pushFilterGroup","FilterManager.popFilterGroup","FilterManager.hasFilterGroups","FilterManager.renderer","FilterManager.processFilters"],"mappings":"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","file":"webgl/FilterManager.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/17.\r\n */\r\n\r\nimport {WebGLRenderer} from \"./WebGLRenderer\";\r\nimport {RenderTarget2D} from \"./RenderTarget2D\";\r\nimport {IDisposable} from \"../IDisposable\";\r\nimport {IBitmapFilter} from \"./IBitmapFilter\";\r\nimport {RenderHelper} from \"./RenderHelper\";\r\n\r\nexport class FilterManager implements IDisposable {\r\n\r\n    constructor(renderer:WebGLRenderer) {\r\n        this._renderer = renderer;\r\n        this._filterGroups = [];\r\n        this._tempTarget = renderer.createRenderTarget();\r\n    }\r\n\r\n    dispose():void {\r\n        this._renderer.releaseRenderTarget(this._tempTarget);\r\n        this.clearFilterGroups();\r\n        this._tempTarget = null;\r\n        this._filterGroups = null;\r\n        this._renderer = null;\r\n    }\r\n\r\n    clearFilterGroups():void {\r\n        var filterGroup:IBitmapFilter[];\r\n        var filterGroups = this._filterGroups;\r\n        if (filterGroups.length > 0) {\r\n            for (var i = 0; i < filterGroups.length; ++i) {\r\n                filterGroup = filterGroups[i];\r\n                while (filterGroup.length > 0) {\r\n                    filterGroup.pop();\r\n                }\r\n            }\r\n        }\r\n        while (filterGroups.length > 0) {\r\n            filterGroups.pop();\r\n        }\r\n    }\r\n\r\n    pushFilterGroup(group:IBitmapFilter[]):void {\r\n        this._filterGroups.push(group.slice());\r\n    }\r\n\r\n    popFilterGroup():IBitmapFilter[] {\r\n        return this.hasFilterGroups ? this._filterGroups.pop() : null;\r\n    }\r\n\r\n    get hasFilterGroups():boolean {\r\n        return this._filterGroups.length > 0;\r\n    }\r\n\r\n    get renderer():WebGLRenderer {\r\n        return this._renderer;\r\n    }\r\n\r\n    processFilters(renderer:WebGLRenderer, input:RenderTarget2D, output:RenderTarget2D, clearOutput:boolean):void {\r\n        if (input === output) {\r\n            console.warn(\"Filter alert: input and output are the same, processing aborted.\");\r\n            return;\r\n        }\r\n\r\n        // 处理时仅最后一层有效，因为都是渲染到缓冲区上的，这一层渲染完后会作为源传给下一层\r\n        if (this.hasFilterGroups) {\r\n            var filterGroup:IBitmapFilter[] = this._filterGroups[this._filterGroups.length - 1];\r\n            var filter:IBitmapFilter;\r\n            var t1 = input, t2 = this._tempTarget;\r\n            t2.clear();\r\n            var t:RenderTarget2D;\r\n            for (var i = 0; i < filterGroup.length; i++) {\r\n                filter = filterGroup[i];\r\n                if (filter !== null) {\r\n                    filter.process(renderer, t1, t2, true);\r\n                    t = t1;\r\n                    t1 = t2;\r\n                    t2 = t;\r\n                }\r\n            }\r\n            RenderHelper.copyTargetContent(renderer, t1, output, false, false, false);\r\n        }\r\n    }\r\n\r\n    private _tempTarget:RenderTarget2D = null;\r\n    private _renderer:WebGLRenderer = null;\r\n    private _filterGroups:IBitmapFilter[][] = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}