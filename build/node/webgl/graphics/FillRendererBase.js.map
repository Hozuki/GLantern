{"version":3,"sources":["webgl/graphics/FillRendererBase.ts"],"names":[],"mappings":"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","file":"webgl/graphics/FillRendererBase.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/20.\r\n */\r\n\r\nimport {GraphicsDataRendererBase} from \"./GraphicsDataRendererBase\";\r\nimport {IFillDataRenderer} from \"./IFillDataRenderer\";\r\nimport {Graphics} from \"../../flash/display/Graphics\";\r\n\r\nexport abstract class FillRendererBase extends GraphicsDataRendererBase implements IFillDataRenderer {\r\n\r\n    constructor(graphics:Graphics, currentX:number, currentY:number) {\r\n        super(graphics, currentX, currentY, currentX, currentY);\r\n        this._contours = [[]];\r\n        this.beginIndex = -1;\r\n        this.endIndex = -1;\r\n        this._hasDrawnAnything = false;\r\n        this._startingNewContour = true;\r\n    }\r\n\r\n    moveTo(x:number, y:number):void {\r\n        // Consider the code sample:\r\n        // g.beginFill(0xff0000, 1);\r\n        // g.lineStyle(1, 0xffffff);\r\n        // g.moveTo(100, 100);\r\n\r\n        // Flash closes the path before each moveTo() call\r\n        this.closePath();\r\n        if (this._hasDrawnAnything) {\r\n            if (this._currentX !== x || this._currentY !== y) {\r\n                this._startingNewContour = true;\r\n            }\r\n        } else {\r\n            this._startingNewContour = true;\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n        this._lastPathStartX = x;\r\n        this._lastPathStartY = y;\r\n    }\r\n\r\n    // Use to track the relative rendering order, based on stroke renderers' orders\r\n    beginIndex:number = -1;\r\n    endIndex:number = -1;\r\n\r\n    protected getContourForClosedShapes():number[] {\r\n        var currentContour:number[];\r\n        if (this._hasDrawnAnything) {\r\n            currentContour = [];\r\n            this._contours.push(currentContour);\r\n            this._startingNewContour = false;\r\n        } else {\r\n            currentContour = this._contours[0];\r\n        }\r\n        return currentContour;\r\n    }\r\n\r\n    protected getContourForLines():number[] {\r\n        var currentContour:number[];\r\n        if (this._hasDrawnAnything) {\r\n            if (this._startingNewContour) {\r\n                currentContour = [];\r\n                this._contours.push(currentContour);\r\n                this._startingNewContour = false;\r\n            } else {\r\n                currentContour = this._contours[this._contours.length - 1];\r\n            }\r\n        } else {\r\n            currentContour = this._contours[0];\r\n        }\r\n        return currentContour;\r\n    }\r\n\r\n    // See libtess.js Degenerate Hourglass test.\r\n    protected _contours:number[][] = null;\r\n    protected _startingNewContour:boolean = true;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}