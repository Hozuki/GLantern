{"version":3,"sources":["webgl/graphics/SolidStrokeRenderer.ts"],"names":[],"mappings":"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","file":"webgl/graphics/SolidStrokeRenderer.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/20.\r\n */\r\n\r\nimport {WebGLRenderer} from \"../WebGLRenderer\";\r\nimport {Graphics} from \"../../flash/display/Graphics\";\r\nimport {StrokeRendererBase} from \"./StrokeRendererBase\";\r\nimport {CURVE_ACCURACY, STD_Z} from \"./GRAPHICS_CONST\";\r\nimport {RenderHelper} from \"../RenderHelper\";\r\nimport {RenderTarget2D} from \"../RenderTarget2D\";\r\nimport {GLUtil} from \"../../GLUtil\";\r\nimport {NotImplementedError} from \"../../flash/errors/NotImplementedError\";\r\n\r\nexport class SolidStrokeRenderer extends StrokeRendererBase {\r\n\r\n    constructor(graphics:Graphics, lastPathStartX:number, lastPathStartY:number, currentX:number, currentY:number, lineWidth:number, color:number, alpha:number) {\r\n        super(graphics, lastPathStartX, lastPathStartY, currentX, currentY);\r\n        this._a = GLUtil.limitInto(alpha, 0, 1);\r\n        this._r = ((color >>> 16) & 0xff) / 0xff;\r\n        this._g = ((color >>> 8 ) & 0xff) / 0xff;\r\n        this._b = (color & 0xff) / 0xff;\r\n        this._w = lineWidth;\r\n    }\r\n\r\n    bezierCurveTo(cx1:number, cy1:number, cx2:number, cy2:number, x:number, y:number):void {\r\n        if (this._w > 0) {\r\n            this._isDirty = true;\r\n            var dt1:number, dt2:number, dt3:number;\r\n            var t2:number, t3:number;\r\n            var fromX = this._currentX, fromY = this._currentY;\r\n            var xa:number, ya:number;\r\n            var j:number;\r\n            for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n                j = i / CURVE_ACCURACY;\r\n                dt1 = 1 - j;\r\n                dt2 = dt1 * dt1;\r\n                dt3 = dt2 * dt1;\r\n                t2 = j * j;\r\n                t3 = t2 * j;\r\n                xa = dt3 * fromX + 3 * dt2 * j * cx1 + 3 * dt1 * t2 * cx2 + t3 * x;\r\n                ya = dt3 * fromY + 3 * dt2 * j * cy1 + 3 * dt1 * t2 * cy2 + t3 * y;\r\n                this.lineTo(xa, ya);\r\n            }\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n    }\r\n\r\n    curveTo(cx:number, cy:number, x:number, y:number):void {\r\n        if (this._w > 0) {\r\n            this._isDirty = true;\r\n            var j:number;\r\n            var fromX = this._currentX, fromY = this._currentY;\r\n            var xa:number, ya:number;\r\n            for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n                j = i / CURVE_ACCURACY;\r\n                xa = fromX + (cx - fromX) * j;\r\n                ya = fromY + (cy - fromY) * j;\r\n                xa = xa + (cx + (x - cx) * j - xa) * j;\r\n                ya = ya + (cy + (y - cy) * j - ya) * j;\r\n                this.lineTo(xa, ya);\r\n            }\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n    }\r\n\r\n    drawCircle(x:number, y:number, radius:number):void {\r\n        this.moveTo(x - radius, y);\r\n        if (this._w > 0) {\r\n            this._isDirty = true;\r\n            var thetaNext:number;\r\n            var thetaBegin:number;\r\n            var x2:number, y2:number;\r\n            var halfPi = Math.PI / 2;\r\n            thetaBegin = Math.PI;\r\n            // Draw 4 segments of arcs, [-PI, -PI/2] [-PI/2, 0] [0, PI/2] [PI/2 PI]\r\n            for (var k = 0; k < 4; k++) {\r\n                for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n                    thetaNext = thetaBegin - i / CURVE_ACCURACY * halfPi;\r\n                    x2 = x + radius * Math.cos(thetaNext);\r\n                    y2 = y + radius * Math.sin(thetaNext);\r\n                    this.lineTo(x2, y2);\r\n                }\r\n                thetaBegin -= halfPi;\r\n            }\r\n        }\r\n        this._currentX = x + radius;\r\n        this._currentY = y;\r\n        this._lastPathStartX = x + radius;\r\n        this._lastPathStartY = y;\r\n    }\r\n\r\n    drawEllipse(x:number, y:number, width:number, height:number):void {\r\n        this.moveTo(x, y + height / 2);\r\n        if (this._w > 0) {\r\n            this._isDirty = true;\r\n            var thetaNext:number;\r\n            var thetaBegin:number;\r\n            var centerX = x + width / 2, centerY = y + height / 2;\r\n            var x2:number, y2:number;\r\n            var halfPi = Math.PI / 2;\r\n            thetaBegin = Math.PI;\r\n            // Draw 4 segments of arcs, [-PI, -PI/2] [-PI/2, 0] [0, PI/2] [PI/2 PI]\r\n            // Brute, huh? Luckily there are 20 segments per PI/2...\r\n            for (var k = 0; k < 4; k++) {\r\n                for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n                    thetaNext = thetaBegin - i / CURVE_ACCURACY * halfPi;\r\n                    x2 = centerX + width / 2 * Math.cos(thetaNext);\r\n                    y2 = centerY + height / 2 * Math.sin(thetaNext);\r\n                    this.lineTo(x2, y2);\r\n                }\r\n                thetaBegin -= halfPi;\r\n            }\r\n        }\r\n        this._currentX = x + width;\r\n        this._currentY = y + height / 2;\r\n        this._lastPathStartX = x + width;\r\n        this._lastPathStartY = y + height / 2;\r\n    }\r\n\r\n    drawRect(x:number, y:number, width:number, height:number):void {\r\n        this._isDirty = true;\r\n        this.moveTo(x, y);\r\n        this.lineTo(x, y + height);\r\n        this.lineTo(x + width, y + height);\r\n        this.lineTo(x + width, y);\r\n        this.lineTo(x, y);\r\n    }\r\n\r\n    drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    lineTo(x:number, y:number):void {\r\n        if (this._w > 0) {\r\n            this._isDirty = true;\r\n            var vertices = this.__getSimLineVertices(this._currentX, this._currentY, x, y, STD_Z, this._w);\r\n            if (vertices.length > 0) {\r\n                // Generated 4 vertices, matching with 6 indices (2 triangles)\r\n                var cur = this._vertices.length / 3;\r\n                for (var i = 0; i < 12; i++) {\r\n                    this._vertices.push(vertices[i]);\r\n                }\r\n                for (var i = 0; i < 4; i++) {\r\n                    this._colors.push(this._r * this._a, this._g * this._a, this._b * this._a, this._a);\r\n                }\r\n                this._indices.push(cur, cur + 1, cur + 2, cur + 1, cur + 2, cur + 3);\r\n                this._hasDrawnAnything = true;\r\n            }\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n    }\r\n\r\n    render(renderer:WebGLRenderer):void {\r\n        if (this._vertices.length > 0) {\r\n            var target = renderer.currentRenderTarget;\r\n            RenderHelper.renderPrimitives2(renderer, target, this._vertexBuffer, this._colorBuffer, this._indexBuffer, false, target.isRoot, false);\r\n        }\r\n    }\r\n\r\n    private _r:number = 0;\r\n    private _g:number = 0;\r\n    private _b:number = 0;\r\n    private _a:number = 1;\r\n    private _w:number = 1;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}