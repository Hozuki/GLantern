{"version":3,"sources":["webgl/graphics/solidstrokerenderer.ts"],"names":["SolidStrokeRenderer","SolidStrokeRenderer.constructor","SolidStrokeRenderer.bezierCurveTo","SolidStrokeRenderer.curveTo","SolidStrokeRenderer.drawCircle","SolidStrokeRenderer.drawEllipse","SolidStrokeRenderer.drawRect","SolidStrokeRenderer.drawRoundRect","SolidStrokeRenderer.lineTo","SolidStrokeRenderer.render"],"mappings":"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","file":"webgl/graphics/SolidStrokeRenderer.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/20.\r\n */\r\n\r\nimport {WebGLRenderer} from \"../WebGLRenderer\";\r\nimport {Graphics} from \"../../flash/display/Graphics\";\r\nimport {StrokeRendererBase} from \"./StrokeRendererBase\";\r\nimport {CURVE_ACCURACY, STD_Z} from \"./GRAPHICS_CONST\";\r\nimport {RenderHelper} from \"../RenderHelper\";\r\nimport {RenderTarget2D} from \"../RenderTarget2D\";\r\nimport {GLUtil} from \"../../../lib/glantern-utils/src/GLUtil\";\r\nimport {NotImplementedError} from \"../../../lib/glantern-utils/src/NotImplementedError\";\r\n\r\nexport class SolidStrokeRenderer extends StrokeRendererBase {\r\n\r\n    constructor(graphics:Graphics, lastPathStartX:number, lastPathStartY:number, currentX:number, currentY:number, lineWidth:number, color:number, alpha:number) {\r\n        super(graphics, lastPathStartX, lastPathStartY, currentX, currentY);\r\n        this._a = GLUtil.limitInto(alpha, 0, 1);\r\n        this._r = ((color >>> 16) & 0xff) / 0xff;\r\n        this._g = ((color >>> 8 ) & 0xff) / 0xff;\r\n        this._b = (color & 0xff) / 0xff;\r\n        this._w = lineWidth;\r\n    }\r\n\r\n    bezierCurveTo(cx1:number, cy1:number, cx2:number, cy2:number, x:number, y:number):void {\r\n        if (this._w > 0) {\r\n            this._isDirty = true;\r\n            var dt1:number, dt2:number, dt3:number;\r\n            var t2:number, t3:number;\r\n            var fromX = this._currentX, fromY = this._currentY;\r\n            var xa:number, ya:number;\r\n            var j:number;\r\n            for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n                j = i / CURVE_ACCURACY;\r\n                dt1 = 1 - j;\r\n                dt2 = dt1 * dt1;\r\n                dt3 = dt2 * dt1;\r\n                t2 = j * j;\r\n                t3 = t2 * j;\r\n                xa = dt3 * fromX + 3 * dt2 * j * cx1 + 3 * dt1 * t2 * cx2 + t3 * x;\r\n                ya = dt3 * fromY + 3 * dt2 * j * cy1 + 3 * dt1 * t2 * cy2 + t3 * y;\r\n                this.lineTo(xa, ya);\r\n            }\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n    }\r\n\r\n    curveTo(cx:number, cy:number, x:number, y:number):void {\r\n        if (this._w > 0) {\r\n            this._isDirty = true;\r\n            var j:number;\r\n            var fromX = this._currentX, fromY = this._currentY;\r\n            var xa:number, ya:number;\r\n            for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n                j = i / CURVE_ACCURACY;\r\n                xa = fromX + (cx - fromX) * j;\r\n                ya = fromY + (cy - fromY) * j;\r\n                xa = xa + (cx + (x - cx) * j - xa) * j;\r\n                ya = ya + (cy + (y - cy) * j - ya) * j;\r\n                this.lineTo(xa, ya);\r\n            }\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n    }\r\n\r\n    drawCircle(x:number, y:number, radius:number):void {\r\n        this.moveTo(x - radius, y);\r\n        if (this._w > 0) {\r\n            this._isDirty = true;\r\n            var thetaNext:number;\r\n            var thetaBegin:number;\r\n            var x2:number, y2:number;\r\n            var halfPi = Math.PI / 2;\r\n            thetaBegin = Math.PI;\r\n            // Draw 4 segments of arcs, [-PI, -PI/2] [-PI/2, 0] [0, PI/2] [PI/2 PI]\r\n            for (var k = 0; k < 4; k++) {\r\n                for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n                    thetaNext = thetaBegin - i / CURVE_ACCURACY * halfPi;\r\n                    x2 = x + radius * Math.cos(thetaNext);\r\n                    y2 = y + radius * Math.sin(thetaNext);\r\n                    this.lineTo(x2, y2);\r\n                }\r\n                thetaBegin -= halfPi;\r\n            }\r\n        }\r\n        this._currentX = x + radius;\r\n        this._currentY = y;\r\n        this._lastPathStartX = x + radius;\r\n        this._lastPathStartY = y;\r\n    }\r\n\r\n    drawEllipse(x:number, y:number, width:number, height:number):void {\r\n        this.moveTo(x, y + height / 2);\r\n        if (this._w > 0) {\r\n            this._isDirty = true;\r\n            var thetaNext:number;\r\n            var thetaBegin:number;\r\n            var centerX = x + width / 2, centerY = y + height / 2;\r\n            var x2:number, y2:number;\r\n            var halfPi = Math.PI / 2;\r\n            thetaBegin = Math.PI;\r\n            // Draw 4 segments of arcs, [-PI, -PI/2] [-PI/2, 0] [0, PI/2] [PI/2 PI]\r\n            // Brute, huh? Luckily there are 20 segments per PI/2...\r\n            for (var k = 0; k < 4; k++) {\r\n                for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n                    thetaNext = thetaBegin - i / CURVE_ACCURACY * halfPi;\r\n                    x2 = centerX + width / 2 * Math.cos(thetaNext);\r\n                    y2 = centerY + height / 2 * Math.sin(thetaNext);\r\n                    this.lineTo(x2, y2);\r\n                }\r\n                thetaBegin -= halfPi;\r\n            }\r\n        }\r\n        this._currentX = x + width;\r\n        this._currentY = y + height / 2;\r\n        this._lastPathStartX = x + width;\r\n        this._lastPathStartY = y + height / 2;\r\n    }\r\n\r\n    drawRect(x:number, y:number, width:number, height:number):void {\r\n        this._isDirty = true;\r\n        this.moveTo(x, y);\r\n        this.lineTo(x, y + height);\r\n        this.lineTo(x + width, y + height);\r\n        this.lineTo(x + width, y);\r\n        this.lineTo(x, y);\r\n    }\r\n\r\n    drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    lineTo(x:number, y:number):void {\r\n        if (this._w > 0) {\r\n            this._isDirty = true;\r\n            var vertices = this.__getSimLineVertices(this._currentX, this._currentY, x, y, STD_Z, this._w);\r\n            if (vertices.length > 0) {\r\n                // Generated 4 vertices, matching with 6 indices (2 triangles)\r\n                var cur = this._vertices.length / 3;\r\n                for (var i = 0; i < 12; i++) {\r\n                    this._vertices.push(vertices[i]);\r\n                }\r\n                for (var i = 0; i < 4; i++) {\r\n                    this._colors.push(this._r * this._a, this._g * this._a, this._b * this._a, this._a);\r\n                }\r\n                this._indices.push(cur, cur + 1, cur + 2, cur + 1, cur + 2, cur + 3);\r\n                this._hasDrawnAnything = true;\r\n            }\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n    }\r\n\r\n    render(renderer:WebGLRenderer):void {\r\n        if (this._vertices.length > 0) {\r\n            var target = renderer.currentRenderTarget;\r\n            RenderHelper.renderPrimitives2(renderer, target, this._vertexBuffer, this._colorBuffer, this._indexBuffer, false, target.isRoot, false);\r\n        }\r\n    }\r\n\r\n    private _r:number = 0;\r\n    private _g:number = 0;\r\n    private _b:number = 0;\r\n    private _a:number = 1;\r\n    private _w:number = 1;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}