{"version":3,"sources":["webgl/graphics/strokerendererbase.ts"],"names":["StrokeRendererBase","StrokeRendererBase.constructor","StrokeRendererBase.moveTo","StrokeRendererBase.___getSimLineVertices"],"mappings":"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AAGA,EAAEA,CAACA;YACvBA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBACJA,KAAKA,CAACA,CAACA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA;gBACnBA,KAAKA,CAACA,CAACA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA;gBACnBA,KAAKA,CAACA,CAACA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA;gBACnBA,KAAKA,CAACA,CAACA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA;YACvBA,CAACA;QACLA,CAACA;QACDA,MAAMA,CAACA;YACHA,KAAKA,CAACA,CAACA,CAACA,EAAEA,KAAKA,CAACA,CAACA,CAACA,EAAEA,CAACA,EAAEA,KAAKA,CAACA,CAACA,CAACA,EAAEA,KAAKA,CAACA,CAACA,CAACA,EAAEA,CAACA;YAC5CA,KAAKA,CAACA,CAACA,CAACA,EAAEA,KAAKA,CAACA,CAACA,CAACA,EAAEA,CAACA,EAAEA,KAAKA,CAACA,CAACA,CAACA,EAAEA,KAAKA,CAACA,CAACA,CAACA,EAAEA,CAACA;SAC/CA,CAACA;IACNA,CAACA;IAILH,yBAACA;AAADA,CAtFA,AAsFCA,EAtFgD,mDAAwB,EAsFxE;AAtFqB,0BAAkB,qBAsFvC,CAAA","file":"webgl/graphics/StrokeRendererBase.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/20.\r\n */\r\n\r\nimport {GraphicsDataRendererBase} from \"./GraphicsDataRendererBase\";\r\nimport {Graphics} from \"../../flash/display/Graphics\";\r\nimport {IStrokeDataRenderer} from \"./IStrokeDataRenderer\";\r\n\r\nexport abstract class StrokeRendererBase extends GraphicsDataRendererBase implements IStrokeDataRenderer {\r\n\r\n    constructor(graphics:Graphics, lastPathStartX:number, lastPathStartY:number, currentX:number, currentY:number) {\r\n        super(graphics, lastPathStartX, lastPathStartY, currentX, currentY);\r\n        this._lineVerticesStorage = [[0, 0], [0, 0], [0, 0], [0, 0]];\r\n    }\r\n\r\n    moveTo(x:number, y:number):void {\r\n        // This action seems weird...\r\n        if (this._graphics.isFilling) {\r\n            this.closePath();\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n        this._lastPathStartX = x;\r\n        this._lastPathStartY = y;\r\n    }\r\n\r\n    protected __getSimLineVertices(x1:number, y1:number, x2:number, y2:number, z:number, width:number):number[] {\r\n        if (width < 0) {\r\n            return [];\r\n        }\r\n        var halfWidth = width / 2;\r\n        var vert1 = this._lineVerticesStorage[0],\r\n            vert2 = this._lineVerticesStorage[1],\r\n            vert3 = this._lineVerticesStorage[2],\r\n            vert4 = this._lineVerticesStorage[3];\r\n        if (x1 === x2) {\r\n            vert1[0] = x1 - halfWidth;\r\n            vert1[1] = y1 > y2 ? y1 + halfWidth : y1 - halfWidth;\r\n            vert2[0] = x1 + halfWidth;\r\n            vert2[1] = y1 > y2 ? y1 + halfWidth : y1 - halfWidth;\r\n            vert3[0] = x2 - halfWidth;\r\n            vert3[1] = y1 > y2 ? y2 - halfWidth : y2 + halfWidth;\r\n            vert4[0] = x2 + halfWidth;\r\n            vert4[1] = y1 > y2 ? y2 - halfWidth : y2 + halfWidth;\r\n        } else {\r\n            var slope = (y2 - y1) / (x2 - x1);\r\n            var ct = 1 / Math.sqrt(1 + slope * slope);\r\n            var st = Math.sqrt(1 - ct * ct);\r\n            // dx/dy: additional length considering the line width perpendicular to the line itself\r\n            var dx = halfWidth * st;\r\n            var dy = halfWidth * ct;\r\n            // dtx/dty: additional length considering the line width at end points\r\n            var dtx = dy;\r\n            var dty = dx;\r\n            // move the line to their new end points\r\n            if (x1 > x2) {\r\n                x1 += dtx;\r\n                x2 -= dtx;\r\n            } else {\r\n                x1 -= dtx;\r\n                x2 += dtx;\r\n            }\r\n            if (y1 > y2) {\r\n                y1 += dty;\r\n                y2 -= dty;\r\n            } else {\r\n                y1 -= dty;\r\n                y2 += dty;\r\n            }\r\n            // and calculate simulating rectangle\r\n            vert1[0] = x1 - dx;\r\n            vert2[0] = x1 + dx;\r\n            vert3[0] = x2 - dx;\r\n            vert4[0] = x2 + dx;\r\n            if (slope >= 0) {\r\n                vert1[1] = y1 + dy;\r\n                vert2[1] = y1 - dy;\r\n                vert3[1] = y2 + dy;\r\n                vert4[1] = y2 - dy;\r\n            } else {\r\n                vert1[1] = y1 - dy;\r\n                vert2[1] = y1 + dy;\r\n                vert3[1] = y2 - dy;\r\n                vert4[1] = y2 + dy;\r\n            }\r\n        }\r\n        return [\r\n            vert1[0], vert1[1], z, vert2[0], vert2[1], z,\r\n            vert3[0], vert3[1], z, vert4[0], vert4[1], z\r\n        ];\r\n    }\r\n\r\n    private _lineVerticesStorage:number[][] = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}