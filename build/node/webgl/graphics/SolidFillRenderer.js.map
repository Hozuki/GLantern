{"version":3,"sources":["webgl/graphics/SolidFillRenderer.ts"],"names":["SolidFillRenderer","SolidFillRenderer.constructor","SolidFillRenderer.bezierCurveTo","SolidFillRenderer.curveTo","SolidFillRenderer.drawCircle","SolidFillRenderer.drawEllipse","SolidFillRenderer.drawRect","SolidFillRenderer.drawRoundRect","SolidFillRenderer.lineTo","SolidFillRenderer.update","SolidFillRenderer.render"],"mappings":"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","file":"webgl/graphics/SolidFillRenderer.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/20.\r\n */\r\n\r\nimport libtess = require(\"libtess\");\r\n\r\nimport {FillRendererBase} from \"./FillRendererBase\";\r\nimport {Graphics} from \"../../flash/display/Graphics\";\r\nimport {_util} from \"../../_util/_util\";\r\nimport {CURVE_ACCURACY, STD_Z} from \"./GRAPHICS_CONST\";\r\nimport {NotImplementedError} from \"../../_util/NotImplementedError\";\r\nimport {WebGLRenderer} from \"../WebGLRenderer\";\r\nimport {RenderHelper} from \"../RenderHelper\";\r\nimport {RenderTarget2D} from \"../RenderTarget2D\";\r\n\r\nexport class SolidFillRenderer extends FillRendererBase {\r\n\r\n    constructor(graphics:Graphics, startX:number, startY:number, color:number, alpha:number) {\r\n        super(graphics, startX, startY);\r\n        this._a = _util.limitInto(alpha, 0, 1);\r\n        this._r = ((color >>> 16) & 0xff) / 0xff;\r\n        this._g = ((color >>> 8 ) & 0xff) / 0xff;\r\n        this._b = (color & 0xff) / 0xff;\r\n    }\r\n\r\n    bezierCurveTo(cx1:number, cy1:number, cx2:number, cy2:number, x:number, y:number):void {\r\n        this._isDirty = true;\r\n        var currentContour = this.getContourForLines();\r\n        if (!this._hasDrawnAnything || this._startingNewContour) {\r\n            currentContour.push(this._currentX, this._currentY, STD_Z);\r\n        }\r\n        var dt1:number, dt2:number, dt3:number;\r\n        var t2:number, t3:number;\r\n        var fromX = this._currentX, fromY = this._currentY;\r\n        var xa:number, ya:number;\r\n        var j:number;\r\n        for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n            j = i / CURVE_ACCURACY;\r\n            dt1 = 1 - j;\r\n            dt2 = dt1 * dt1;\r\n            dt3 = dt2 * dt1;\r\n            t2 = j * j;\r\n            t3 = t2 * j;\r\n            xa = dt3 * fromX + 3 * dt2 * j * cx1 + 3 * dt1 * t2 * cx2 + t3 * x;\r\n            ya = dt3 * fromY + 3 * dt2 * j * cy1 + 3 * dt1 * t2 * cy2 + t3 * y;\r\n            currentContour.push(xa, ya, STD_Z);\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n        this._hasDrawnAnything = true;\r\n        this._startingNewContour = false;\r\n    }\r\n\r\n    curveTo(cx:number, cy:number, x:number, y:number):void {\r\n        this._isDirty = true;\r\n        var currentContour = this.getContourForLines();\r\n        if (!this._hasDrawnAnything || this._startingNewContour) {\r\n            currentContour.push(this._currentX, this._currentY, STD_Z);\r\n        }\r\n        var j:number;\r\n        var fromX = this._currentX, fromY = this._currentY;\r\n        var xa:number, ya:number;\r\n        for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n            j = i / CURVE_ACCURACY;\r\n            xa = fromX + (cx - fromX) * j;\r\n            ya = fromY + (cy - fromY) * j;\r\n            xa = xa + (cx + (x - cx) * j - xa) * j;\r\n            ya = ya + (cy + (y - cy) * j - ya) * j;\r\n            currentContour.push(xa, ya, STD_Z);\r\n        }\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n        this._hasDrawnAnything = true;\r\n        this._startingNewContour = false;\r\n    }\r\n\r\n    drawCircle(x:number, y:number, radius:number):void {\r\n        this._isDirty = true;\r\n        this.moveTo(x, y);\r\n        var currentContour = this.getContourForClosedShapes();\r\n        var thetaNext:number;\r\n        var thetaBegin:number;\r\n        var x2:number, y2:number;\r\n        var halfPi = Math.PI / 2;\r\n        currentContour.push(this._currentX + radius, this._currentY, STD_Z);\r\n        thetaBegin = 0;\r\n        // Draw 4 segments of arcs, [-PI, -PI/2] [-PI/2, 0] [0, PI/2] [PI/2 PI]\r\n        for (var k = 0; k < 4; k++) {\r\n            for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n                thetaNext = thetaBegin - i / CURVE_ACCURACY * halfPi;\r\n                x2 = x + radius * Math.cos(thetaNext);\r\n                y2 = y + radius * Math.sin(thetaNext);\r\n                currentContour.push(x2, y2, STD_Z);\r\n            }\r\n            thetaBegin -= halfPi;\r\n        }\r\n        this._currentX = x + radius;\r\n        this._currentY = y;\r\n        this._lastPathStartX = x + radius;\r\n        this._lastPathStartY = y;\r\n        this._hasDrawnAnything = true;\r\n        this._startingNewContour = false;\r\n    }\r\n\r\n    drawEllipse(x:number, y:number, width:number, height:number):void {\r\n        this._isDirty = true;\r\n        this.moveTo(x, y + height / 2);\r\n        var currentContour = this.getContourForClosedShapes();\r\n        var thetaNext:number;\r\n        var thetaBegin:number;\r\n        var centerX = x + width / 2, centerY = y + height / 2;\r\n        var x2:number, y2:number;\r\n        var halfPi = Math.PI / 2;\r\n        currentContour.push(this._currentX, this._currentY, STD_Z);\r\n        thetaBegin = Math.PI;\r\n        // Draw 4 segments of arcs, [-PI, -PI/2] [-PI/2, 0] [0, PI/2] [PI/2 PI]\r\n        // Brute, huh? Luckily there are 20 segments per PI/2...\r\n        for (var k = 0; k < 4; k++) {\r\n            for (var i = 1; i <= CURVE_ACCURACY; i++) {\r\n                thetaNext = thetaBegin - i / CURVE_ACCURACY * halfPi;\r\n                x2 = centerX + width / 2 * Math.cos(thetaNext);\r\n                y2 = centerY + height / 2 * Math.sin(thetaNext);\r\n                currentContour.push(x2, y2, STD_Z);\r\n            }\r\n            thetaBegin -= halfPi;\r\n        }\r\n        this._currentX = x + width;\r\n        this._currentY = y + height / 2;\r\n        this._lastPathStartX = x + width;\r\n        this._lastPathStartY = y + height / 2;\r\n        this._hasDrawnAnything = true;\r\n        this._startingNewContour = false;\r\n    }\r\n\r\n    drawRect(x:number, y:number, width:number, height:number):void {\r\n        this._isDirty = true;\r\n        this.moveTo(x, y);\r\n        // Create a new contour and draw a independent rectangle, should not use lineTo().\r\n        var currentContour = this.getContourForClosedShapes();\r\n        currentContour.push(x, y, STD_Z);\r\n        currentContour.push(x + width, y, STD_Z);\r\n        currentContour.push(x + width, y + height, STD_Z);\r\n        currentContour.push(x, y + height, STD_Z);\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n        this._hasDrawnAnything = true;\r\n        this._startingNewContour = false;\r\n    }\r\n\r\n    drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN):void {\r\n        throw new NotImplementedError();\r\n    }\r\n\r\n    lineTo(x:number, y:number):void {\r\n        this._isDirty = true;\r\n        var currentContour = this.getContourForLines();\r\n        if (!this._hasDrawnAnything || this._startingNewContour) {\r\n            currentContour.push(this._currentX, this._currentY, STD_Z);\r\n        }\r\n        currentContour.push(x, y, STD_Z);\r\n        this._currentX = x;\r\n        this._currentY = y;\r\n        this._hasDrawnAnything = true;\r\n        this._startingNewContour = false;\r\n    }\r\n\r\n    update():void {\r\n        if (this._isDirty) {\r\n            // Triangulate first\r\n            var tess = this._graphics.renderer.tessellator;\r\n            tess.gluTessProperty(libtess.gluEnum.GLU_TESS_WINDING_RULE, libtess.windingRule.GLU_TESS_WINDING_ODD);\r\n            tess.gluTessNormal(0, 0, 1);\r\n            var resultArray:number[][] = [];\r\n            tess.gluTessBeginPolygon(resultArray);\r\n            var contour:number[];\r\n            for (var i = 0; i < this._contours.length; i++) {\r\n                contour = this._contours[i];\r\n                if (contour.length > 0) {\r\n                    tess.gluTessBeginContour();\r\n                    for (var j = 0; j < contour.length; j += 3) {\r\n                        var coords = [contour[j], contour[j + 1], contour[j + 2]];\r\n                        tess.gluTessVertex(coords, coords);\r\n                    }\r\n                    tess.gluTessEndContour();\r\n                }\r\n            }\r\n            tess.gluTessEndPolygon();\r\n\r\n            this._vertices = [];\r\n            this._colors = [];\r\n            this._indices = [];\r\n            var colors = this._colors;\r\n            var indices = this._indices;\r\n            var vertices = this._vertices;\r\n            j = 0;\r\n            var tempArray:number[];\r\n            for (var i = 0; i < resultArray.length; i++) {\r\n                tempArray = resultArray[i];\r\n                for (var j = 0; j < tempArray.length; j++) {\r\n                    vertices.push(tempArray[j]);\r\n                }\r\n            }\r\n            j = 0;\r\n            for (var i = 0; i < vertices.length; i += 3) {\r\n                colors.push(this._r * this._a, this._g * this._a, this._b * this._a, this._a);\r\n                indices.push(j);\r\n                j++;\r\n            }\r\n        }\r\n\r\n        // Then update buffers\r\n        super.update();\r\n    }\r\n\r\n    render(renderer:WebGLRenderer):void {\r\n        if (this._vertices.length > 0) {\r\n            var target = renderer.currentRenderTarget;\r\n            RenderHelper.renderPrimitives2(renderer, target, this._vertexBuffer, this._colorBuffer, this._indexBuffer, false, target.isRoot, false);\r\n        }\r\n    }\r\n\r\n    private _r:number = 0;\r\n    private _g:number = 0;\r\n    private _b:number = 0;\r\n    private _a:number = 1;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}