{"version":3,"sources":["webgl/filters/blurxfilter.ts"],"names":["BlurXFilter","BlurXFilter.constructor","BlurXFilter.strength","BlurXFilter.pass","BlurXFilter.process","BlurXFilter.___initialize","BlurXFilter.___dispose"],"mappings":"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","file":"webgl/filters/BlurXFilter.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {BlurXShader} from \"../shaders/BlurXShader\";\r\nimport {RenderTarget2D} from \"../RenderTarget2D\";\r\nimport {WebGLRenderer} from \"../WebGLRenderer\";\r\nimport {FilterManager} from \"../FilterManager\";\r\nimport {FilterBase} from \"../FilterBase\";\r\nimport {ShaderID} from \"../ShaderID\";\r\nimport {RenderHelper} from \"../RenderHelper\";\r\nimport {GLUtil} from \"../../../lib/glantern-utils/src/GLUtil\";\r\n\r\nexport class BlurXFilter extends FilterBase {\r\n\r\n    constructor(manager:FilterManager) {\r\n        super(manager);\r\n    }\r\n\r\n    get strength():number {\r\n        return this._strength;\r\n    }\r\n\r\n    set strength(v:number) {\r\n        if (v < 0) {\r\n            v = 1;\r\n        }\r\n        this._strength = v;\r\n    }\r\n\r\n    get pass():number {\r\n        return this._pass;\r\n    }\r\n\r\n    set pass(v:number) {\r\n        v = GLUtil.limitInto(v, 1, 3) | 0;\r\n        this._pass = v;\r\n    }\r\n\r\n    process(renderer:WebGLRenderer, input:RenderTarget2D, output:RenderTarget2D, clearOutput:boolean):void {\r\n        // Larger value makes image smoother, darker (or less contrastive), but greatly improves efficiency.\r\n        var passCoeff = 3;\r\n        var t1 = input, t2 = this._tempTarget;\r\n        t2.clear();\r\n        var t:RenderTarget2D;\r\n        for (var i = 0; i < passCoeff * this.pass; ++i) {\r\n            RenderHelper.renderBuffered(renderer, t1, t2, ShaderID.BLUR_X, true, (renderer:WebGLRenderer):void => {\r\n                var shader = <BlurXShader>renderer.shaderManager.currentShader;\r\n                shader.setStrength(this.strength / 4 / this.pass / (t1.fitWidth / t1.originalWidth));\r\n            });\r\n            t = t1;\r\n            t1 = t2;\r\n            t2 = t;\r\n        }\r\n        //renderer.copyRenderTargetContent(t1, output, clearOutput);\r\n        RenderHelper.copyTargetContent(renderer, t1, output, this.flipX, this.flipY, clearOutput);\r\n    }\r\n\r\n    __initialize():void {\r\n        this._tempTarget = this.filterManager.renderer.createRenderTarget();\r\n    }\r\n\r\n    __dispose():void {\r\n        this.filterManager.renderer.releaseRenderTarget(this._tempTarget);\r\n        this._tempTarget = null;\r\n    }\r\n\r\n    private _strength:number = 5;\r\n    private _pass:number = 1;\r\n    private _tempTarget:RenderTarget2D = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}