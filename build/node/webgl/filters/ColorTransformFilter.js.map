{"version":3,"sources":["webgl/filters/colortransformfilter.ts"],"names":["ColorTransformFilter","ColorTransformFilter.constructor","ColorTransformFilter.setColorMatrix","ColorTransformFilter.process","ColorTransformFilter.___initialize","ColorTransformFilter.___dispose"],"mappings":"AAAA;;GAEG;;;;;;AAMH,2BAAyB,eAAe,CAAC,CAAA;AACzC,6BAA2B,iBAAiB,CAAC,CAAA;AAC7C,yBAAuB,aAAa,CAAC,CAAA;AAErC;IAA0CA,wCAAUA;IAEhDA,8BAAYA,OAAqBA;QAC7BC,kBAAMA,OAAOA,CAACA,CAACA;QAwBXA,iBAAYA,GAAYA;YAC5BA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;YACbA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;YACbA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;YACbA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA;SAChBA,CAACA;QACMA,gBAAWA,GAAkBA,IAAIA,CAACA;IA7B1CA,CAACA;IAEDD,6CAAcA,GAAdA,UAAeA,IAAaA;QACxBE,IAAIA,CAACA,YAAYA,GAAGA,IAAIA,CAACA,KAAKA,EAAEA,CAACA;IACrCA,CAACA;IAEDF,sCAAOA,GAAPA,UAAQA,QAAsBA,EAAEA,KAAoBA,EAAEA,MAAqBA,EAAEA,WAAmBA;QAAhGG,iBAMCA;QALGA,2BAAYA,CAACA,cAAcA,CAACA,QAAQA,EAAEA,KAAKA,EAAEA,IAAIA,CAACA,WAAWA,EAAEA,mBAAQA,CAACA,eAAeA,EAAEA,IAAIA,EAAEA,UAACA,QAAsBA;YAClHA,IAAIA,MAAMA,GAAyBA,QAAQA,CAACA,aAAaA,CAACA,aAAaA,CAACA;YACxEA,MAAMA,CAACA,cAAcA,CAACA,KAAIA,CAACA,YAAYA,CAACA,CAACA;QAC7CA,CAACA,CAACA,CAACA;QACHA,2BAAYA,CAACA,iBAAiBA,CAACA,QAAQA,EAAEA,IAAIA,CAACA,WAAWA,EAAEA,MAAMA,EAAEA,IAAIA,CAACA,KAAKA,EAAEA,IAAIA,CAACA,KAAKA,EAAEA,WAAWA,CAACA,CAACA;IAC5GA,CAACA;IAEDH,2CAAYA,GAAZA;QACII,IAAIA,CAACA,WAAWA,GAAGA,IAAIA,CAACA,aAAaA,CAACA,QAAQA,CAACA,kBAAkBA,EAAEA,CAACA;IACxEA,CAACA;IAEDJ,wCAASA,GAATA;QACIK,IAAIA,CAACA,aAAaA,CAACA,QAAQA,CAACA,mBAAmBA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA;QAClEA,IAAIA,CAACA,WAAWA,GAAGA,IAAIA,CAACA;IAC5BA,CAACA;IAULL,2BAACA;AAADA,CAnCA,AAmCCA,EAnCyC,uBAAU,EAmCnD;AAnCY,4BAAoB,uBAmChC,CAAA","file":"webgl/filters/ColorTransformFilter.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {ColorTransformShader} from \"../shaders/ColorTransformShader\";\r\nimport {RenderTarget2D} from \"../RenderTarget2D\";\r\nimport {WebGLRenderer} from \"../WebGLRenderer\";\r\nimport {FilterManager} from \"../FilterManager\";\r\nimport {FilterBase} from \"../FilterBase\";\r\nimport {RenderHelper} from \"../RenderHelper\";\r\nimport {ShaderID} from \"../ShaderID\";\r\n\r\nexport class ColorTransformFilter extends FilterBase {\r\n\r\n    constructor(manager:FilterManager) {\r\n        super(manager);\r\n    }\r\n\r\n    setColorMatrix(r4c5:number[]):void {\r\n        this._colorMatrix = r4c5.slice();\r\n    }\r\n\r\n    process(renderer:WebGLRenderer, input:RenderTarget2D, output:RenderTarget2D, clearOutput:boolean):void {\r\n        RenderHelper.renderBuffered(renderer, input, this._tempTarget, ShaderID.COLOR_TRANSFORM, true, (renderer:WebGLRenderer):void => {\r\n            var shader = <ColorTransformShader>renderer.shaderManager.currentShader;\r\n            shader.setColorMatrix(this._colorMatrix);\r\n        });\r\n        RenderHelper.copyTargetContent(renderer, this._tempTarget, output, this.flipX, this.flipY, clearOutput);\r\n    }\r\n\r\n    __initialize():void {\r\n        this._tempTarget = this.filterManager.renderer.createRenderTarget();\r\n    }\r\n\r\n    __dispose():void {\r\n        this.filterManager.renderer.releaseRenderTarget(this._tempTarget);\r\n        this._tempTarget = null;\r\n    }\r\n\r\n    private _colorMatrix:number[] = [\r\n        1, 0, 0, 0, 0,\r\n        0, 1, 0, 0, 0,\r\n        0, 0, 1, 0, 0,\r\n        0, 0, 0, 1, 0\r\n    ];\r\n    private _tempTarget:RenderTarget2D = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}