{"version":3,"sources":["webgl/filters/ColorTransformFilter.ts"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAMH,2BAAyB,eAAe,CAAC,CAAA;AACzC,6BAA2B,iBAAiB,CAAC,CAAA;AAC7C,yBAAuB,aAAa,CAAC,CAAA;AAErC;IAA0C,wCAAU;IAEhD,8BAAY,OAAqB;QAC7B,kBAAM,OAAO,CAAC,CAAC;QAwBX,iBAAY,GAAY;YAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACb,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACb,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACb,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SAChB,CAAC;QACM,gBAAW,GAAkB,IAAI,CAAC;IA7B1C,CAAC;IAED,6CAAc,GAAd,UAAe,IAAa;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACrC,CAAC;IAED,sCAAO,GAAP,UAAQ,QAAsB,EAAE,KAAoB,EAAE,MAAqB,EAAE,WAAmB;QAAhG,iBAMC;QALG,2BAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,mBAAQ,CAAC,eAAe,EAAE,IAAI,EAAE,UAAC,QAAsB;YAClH,IAAI,MAAM,GAAyB,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC;YACxE,MAAM,CAAC,cAAc,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QACH,2BAAY,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAC5G,CAAC;IAED,2CAAY,GAAZ;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;IACxE,CAAC;IAED,wCAAS,GAAT;QACI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IAUL,2BAAC;AAAD,CAnCA,AAmCC,CAnCyC,uBAAU,GAmCnD;AAnCY,4BAAoB,uBAmChC,CAAA","file":"webgl/filters/ColorTransformFilter.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {ColorTransformShader} from \"../shaders/ColorTransformShader\";\r\nimport {RenderTarget2D} from \"../RenderTarget2D\";\r\nimport {WebGLRenderer} from \"../WebGLRenderer\";\r\nimport {FilterManager} from \"../FilterManager\";\r\nimport {FilterBase} from \"../FilterBase\";\r\nimport {RenderHelper} from \"../RenderHelper\";\r\nimport {ShaderID} from \"../ShaderID\";\r\n\r\nexport class ColorTransformFilter extends FilterBase {\r\n\r\n    constructor(manager:FilterManager) {\r\n        super(manager);\r\n    }\r\n\r\n    setColorMatrix(r4c5:number[]):void {\r\n        this._colorMatrix = r4c5.slice();\r\n    }\r\n\r\n    process(renderer:WebGLRenderer, input:RenderTarget2D, output:RenderTarget2D, clearOutput:boolean):void {\r\n        RenderHelper.renderBuffered(renderer, input, this._tempTarget, ShaderID.COLOR_TRANSFORM, true, (renderer:WebGLRenderer):void => {\r\n            var shader = <ColorTransformShader>renderer.shaderManager.currentShader;\r\n            shader.setColorMatrix(this._colorMatrix);\r\n        });\r\n        RenderHelper.copyTargetContent(renderer, this._tempTarget, output, this.flipX, this.flipY, clearOutput);\r\n    }\r\n\r\n    __initialize():void {\r\n        this._tempTarget = this.filterManager.renderer.createRenderTarget();\r\n    }\r\n\r\n    __dispose():void {\r\n        this.filterManager.renderer.releaseRenderTarget(this._tempTarget);\r\n        this._tempTarget = null;\r\n    }\r\n\r\n    private _colorMatrix:number[] = [\r\n        1, 0, 0, 0, 0,\r\n        0, 1, 0, 0, 0,\r\n        0, 0, 1, 0, 0,\r\n        0, 0, 0, 1, 0\r\n    ];\r\n    private _tempTarget:RenderTarget2D = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}