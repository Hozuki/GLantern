{"version":3,"sources":["webgl/filters/BlurYFilter.ts"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAMH,2BAAyB,eAAe,CAAC,CAAA;AACzC,yBAAuB,aAAa,CAAC,CAAA;AACrC,6BAA2B,iBAAiB,CAAC,CAAA;AAC7C,uBAAqB,cAAc,CAAC,CAAA;AAEpC;IAAiC,+BAAU;IAEvC,qBAAY,OAAqB;QAC7B,kBAAM,OAAO,CAAC,CAAC;QAmDX,cAAS,GAAU,CAAC,CAAC;QACrB,UAAK,GAAU,CAAC,CAAC;QACjB,gBAAW,GAAkB,IAAI,CAAC;IApD1C,CAAC;IAED,sBAAI,iCAAQ;aAAZ;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aAED,UAAa,CAAQ;YACjB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC,GAAG,CAAC,CAAC;YACV,CAAC;YACD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACvB,CAAC;;;OAPA;IASD,sBAAI,6BAAI;aAAR;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;aAED,UAAS,CAAQ;YACb,CAAC,GAAG,eAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACnB,CAAC;;;OALA;IAOD,6BAAO,GAAP,UAAQ,QAAsB,EAAE,KAAoB,EAAE,MAAqB,EAAE,WAAmB;QAAhG,iBAiBC;QAhBG,oGAAoG;QACpG,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QACtC,EAAE,CAAC,KAAK,EAAE,CAAC;QACX,IAAI,CAAgB,CAAC;QACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;YAC7C,2BAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,mBAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,UAAC,QAAsB;gBACxF,IAAI,MAAM,GAAgB,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC;gBAC/D,MAAM,CAAC,WAAW,CAAC,KAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,KAAI,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;YACzF,CAAC,CAAC,CAAC;YACH,CAAC,GAAG,EAAE,CAAC;YACP,EAAE,GAAG,EAAE,CAAC;YACR,EAAE,GAAG,CAAC,CAAC;QACX,CAAC;QACD,4DAA4D;QAC5D,2BAAY,CAAC,iBAAiB,CAAC,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAC9F,CAAC;IAED,kCAAY,GAAZ;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;IACxE,CAAC;IAED,+BAAS,GAAT;QACI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IAML,kBAAC;AAAD,CA1DA,AA0DC,CA1DgC,uBAAU,GA0D1C;AA1DY,mBAAW,cA0DvB,CAAA","file":"webgl/filters/BlurYFilter.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {BlurYShader} from \"../shaders/BlurYShader\";\r\nimport {RenderTarget2D} from \"../RenderTarget2D\";\r\nimport {WebGLRenderer} from \"../WebGLRenderer\";\r\nimport {FilterManager} from \"../FilterManager\";\r\nimport {FilterBase} from \"../FilterBase\";\r\nimport {ShaderID} from \"../ShaderID\";\r\nimport {RenderHelper} from \"../RenderHelper\";\r\nimport {GLUtil} from \"../../GLUtil\";\r\n\r\nexport class BlurYFilter extends FilterBase {\r\n\r\n    constructor(manager:FilterManager) {\r\n        super(manager);\r\n    }\r\n\r\n    get strength():number {\r\n        return this._strength;\r\n    }\r\n\r\n    set strength(v:number) {\r\n        if (v < 0) {\r\n            v = 1;\r\n        }\r\n        this._strength = v;\r\n    }\r\n\r\n    get pass():number {\r\n        return this._pass;\r\n    }\r\n\r\n    set pass(v:number) {\r\n        v = GLUtil.limitInto(v, 1, 3) | 0;\r\n        this._pass = v;\r\n    }\r\n\r\n    process(renderer:WebGLRenderer, input:RenderTarget2D, output:RenderTarget2D, clearOutput:boolean):void {\r\n        // Larger value makes image smoother, darker (or less contrastive), but greatly improves efficiency.\r\n        var passCoeff = 3;\r\n        var t1 = input, t2 = this._tempTarget;\r\n        t2.clear();\r\n        var t:RenderTarget2D;\r\n        for (var i = 0; i < passCoeff * this.pass; ++i) {\r\n            RenderHelper.renderBuffered(renderer, t1, t2, ShaderID.BLUR_Y, true, (renderer:WebGLRenderer):void => {\r\n                var shader = <BlurYShader>renderer.shaderManager.currentShader;\r\n                shader.setStrength(this.strength / 4 / this.pass / (t1.fitWidth / t1.originalWidth));\r\n            });\r\n            t = t1;\r\n            t1 = t2;\r\n            t2 = t;\r\n        }\r\n        //renderer.copyRenderTargetContent(t1, output, clearOutput);\r\n        RenderHelper.copyTargetContent(renderer, t1, output, this.flipX, this.flipY, clearOutput);\r\n    }\r\n\r\n    __initialize():void {\r\n        this._tempTarget = this.filterManager.renderer.createRenderTarget();\r\n    }\r\n\r\n    __dispose():void {\r\n        this.filterManager.renderer.releaseRenderTarget(this._tempTarget);\r\n        this._tempTarget = null;\r\n    }\r\n\r\n    private _strength:number = 5;\r\n    private _pass:number = 1;\r\n    private _tempTarget:RenderTarget2D = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}