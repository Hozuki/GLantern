{"version":3,"sources":["webgl/FilterBase.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAOH;IAEI,oBAAY,OAAqB;QA+DzB,mBAAc,GAAiB,IAAI,CAAC;QACpC,WAAM,GAAW,KAAK,CAAC;QACvB,WAAM,GAAW,KAAK,CAAC;QACvB,oBAAe,GAAU,CAAC,CAAC;QAjE/B,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;IAClC,CAAC;IAID;;;;OAIG;IACH,gCAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,kCAAa,GAAb;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;IACL,CAAC;IAED,4BAAO,GAAP;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,+BAAU,GAAV;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,sBAAI,qCAAa;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBAAI,6BAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAED,UAAU,CAAS;YACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACpB,CAAC;;;OAJA;IAMD,sBAAI,6BAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAED,UAAU,CAAS;YACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACpB,CAAC;;;OAJA;IAMS,iCAAY,GAAtB;IACA,CAAC;IAES,8BAAS,GAAnB;IACA,CAAC;IAOL,iBAAC;AAAD,CAtEA,AAsEC,IAAA;AAtEqB,kBAAU,aAsE/B,CAAA","file":"webgl/FilterBase.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {FilterManager} from \"./FilterManager\";\r\nimport {RenderTarget2D} from \"./RenderTarget2D\";\r\nimport {WebGLRenderer} from \"./WebGLRenderer\";\r\nimport {IBitmapFilter} from \"./IBitmapFilter\";\r\n\r\nexport abstract class FilterBase implements IBitmapFilter {\r\n\r\n    constructor(manager:FilterManager) {\r\n        this._filterManager = manager;\r\n    }\r\n\r\n    abstract process(renderer:WebGLRenderer, input:RenderTarget2D, output:RenderTarget2D, clearOutput:boolean):void;\r\n\r\n    /**\r\n     * Called when it is added to a {@link DisplayObject.filters} array.\r\n     * Notice that it may be called multiple times, but a filter should only be initialized once\r\n     * if its output buffer is null.\r\n     */\r\n    notifyAdded():void {\r\n        if (this._referenceCount <= 0) {\r\n            this.__initialize();\r\n        }\r\n        this._referenceCount++;\r\n    }\r\n\r\n    /**\r\n     * Called when it is removed from a {@link DisplayObject.filters} array.\r\n     * Notice that it may be called multiple times, but should do nothing if its output is already null.\r\n     */\r\n    notifyRemoved():void {\r\n        this._referenceCount--;\r\n        if (this._referenceCount <= 0) {\r\n            this.__dispose();\r\n        }\r\n    }\r\n\r\n    dispose():void {\r\n        this.__dispose();\r\n    }\r\n\r\n    initialize():void {\r\n        this.__initialize();\r\n    }\r\n\r\n    get filterManager():FilterManager {\r\n        return this._filterManager;\r\n    }\r\n\r\n    get flipX():boolean {\r\n        return this._flipX;\r\n    }\r\n\r\n    set flipX(v:boolean) {\r\n        this._flipX = v;\r\n    }\r\n\r\n    get flipY():boolean {\r\n        return this._flipY;\r\n    }\r\n\r\n    set flipY(v:boolean) {\r\n        this._flipY = v;\r\n    }\r\n\r\n    protected __initialize():void {\r\n    }\r\n\r\n    protected __dispose():void {\r\n    }\r\n\r\n    private _filterManager:FilterManager = null;\r\n    private _flipY:boolean = false;\r\n    private _flipX:boolean = false;\r\n    private _referenceCount:number = 0;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}