{"version":3,"sources":["webgl/RenderTarget2D.ts"],"names":["RenderTarget2D","RenderTarget2D.constructor","RenderTarget2D.dispose","RenderTarget2D.originalWidth","RenderTarget2D.originalHeight","RenderTarget2D.fitWidth","RenderTarget2D.fitHeight","RenderTarget2D.texture","RenderTarget2D.image","RenderTarget2D.isRoot","RenderTarget2D.activate","RenderTarget2D.clear","RenderTarget2D.resize","RenderTarget2D.___initialize","RenderTarget2D.___initialize.error","RenderTarget2D.___resize","initStaticFields"],"mappings":"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","file":"webgl/RenderTarget2D.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/17.\r\n */\r\n\r\nimport {WebGLRenderer} from \"./WebGLRenderer\";\r\nimport {IDisposable} from \"../IDisposable\";\r\nimport {_util} from \"../_util/_util\";\r\nimport {PackedArrayBuffer} from \"./PackedArrayBuffer\";\r\n\r\nvar gl = (<any>this).WebGLRenderingContext || (<any>window).WebGLRenderingContext;\r\nvar isInitializedStatically:boolean = false;\r\n\r\n/**\r\n * Represents a 2D render target based on WebGL texture.\r\n */\r\nexport class RenderTarget2D implements IDisposable {\r\n\r\n    /**\r\n     * Instantiates a new {@link RenderTarget2D}.\r\n     * @param renderer {WebGLRenderer} The {@link WebGLRenderer} used to create this new {@link RenderTarget2D}.\r\n     * @param [image] {ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} The initial image or image-related\r\n     * HTML element. See {@link RenderTarget2D.image} for more information. The default value is null.\r\n     * @param [isRoot] {Boolean} Declares whether the {@link RenderTarget2D} is a root for display. See {@link RenderTarget2D.isRoot}\r\n     * for more information. The default value is false.\r\n     * @implements {IDisposable}\r\n     */\r\n    constructor(renderer:WebGLRenderer, image:ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement = null, isRoot:boolean = false) {\r\n        if (!isInitializedStatically) {\r\n            initStaticFields(renderer.context);\r\n        }\r\n        this._renderer = renderer;\r\n        this.__initialize(renderer.context, renderer.view.width, renderer.view.height, image, isRoot);\r\n    }\r\n\r\n    /**\r\n     * Disposes the {@link RenderTarget2D} and related resources.\r\n     */\r\n    dispose():void {\r\n        var glc = this._glc;\r\n        glc.deleteTexture(this._texture);\r\n        glc.deleteFramebuffer(this._frameBuffer);\r\n        glc.deleteRenderbuffer(this._depthBuffer);\r\n        this._texture = null;\r\n        this._frameBuffer = null;\r\n        this._depthBuffer = null;\r\n        this._glc = null;\r\n        this._renderer = null;\r\n    }\r\n\r\n    /**\r\n     * Returns the original width of the {@link RenderTarget2D}.\r\n     * Old WebGL contexts restrict the width and height of textures to being a power of 2. However, users may want to\r\n     * create custom-sized {@link RenderTarget2D}s, which requires the targets using various sizes of \"textures\".\r\n     * Creating textures width and height different from power of 2 is not allowed in these cases, so textures slightly\r\n     * larger than needed with width and height being power of 2 is created.\r\n     * Therefore, the original size is the size requested, and the fit size is the real size of texture. During rendering,\r\n     * the original size is used for presenting, and the fit size is used for manipulation.\r\n     * @see {@link RenderTarget2D.originalHeight}\r\n     * @see {@link RenderTarget2D.fitWidth}\r\n     * @see {@link RenderTarget2D.fitHeight}\r\n     * @returns {Number} The original width of the {@link RenderTarget2D}.\r\n     */\r\n    get originalWidth():number {\r\n        return this._originalWidth;\r\n    }\r\n\r\n    /**\r\n     * Returns the original height of the {@link RenderTarget2D}. See {@link RenderTarget2D.originalWidth} for more information.\r\n     * @see {@link RenderTarget2D.originalWidth}\r\n     * @see {@link RenderTarget2D.fitWidth}\r\n     * @see {@link RenderTarget2D.fitHeight}\r\n     * @returns {number}\r\n     */\r\n    get originalHeight():number {\r\n        return this._originalHeight;\r\n    }\r\n\r\n    /**\r\n     * Returns the fit width of the {@link RenderTarget2D}. See {@link RenderTarget2D.originalWidth} for more information.\r\n     * @see {@link RenderTarget2D.originalWidth}\r\n     * @see {@link RenderTarget2D.originalHeight}\r\n     * @see {@link RenderTarget2D.fitHeight}\r\n     * @returns {Number} The fit width of the {@link RenderTarget2D}.\r\n     */\r\n    get fitWidth():number {\r\n        return this._fitWidth;\r\n    }\r\n\r\n    /**\r\n     * Returns the fit height of the {@link RenderTarget2D}. See {@link RenderTarget2D.originalWidth} for more information.\r\n     * @see {@link RenderTarget2D.originalWidth}\r\n     * @see {@link RenderTarget2D.originalHeight}\r\n     * @see {@link RenderTarget2D.fitHeight}\r\n     * @returns {number}\r\n     */\r\n    get fitHeight():number {\r\n        return this._fitHeight;\r\n    }\r\n\r\n    /**\r\n     * Returns the underlying {@link WebGLTexture} of the {@link RenderTarget2D}. May be null if the target is a root target.\r\n     * @returns {WebGLTexture} The underlying texture.\r\n     */\r\n    get texture():WebGLTexture {\r\n        return this._texture;\r\n    }\r\n\r\n    /**\r\n     * The content used to create the {@link RenderTarget2D}. It is useful for importing external images, or dynamically\r\n     * rendering image sequences from {@link HTMLVideoElement}s. Null means this is a blank {@link RenderTarget2D}.\r\n     * @returns {ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\r\n     */\r\n    get image():ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement {\r\n        return this._image;\r\n    }\r\n\r\n    /**\r\n     * Returns whether the {@link RenderTarget2D} is a root for display. A root {@link RenderTarget2D}\r\n     * has no underlying textures and renders directly to the output buffer (i.e. the &lt;canvas&gt; attached to the\r\n     * {@link WebGLRenderer}. So they must be used as final render target, not buffers.\r\n     * @returns {Boolean} True if the {@link RenderTarget2D} is a root target, and false otherwise.\r\n     */\r\n    get isRoot():boolean {\r\n        return this._isRoot;\r\n    }\r\n\r\n    /**\r\n     * Activates the {@link RenderTarget2D}, and all the rendering after the activation will be done on this target.\r\n     */\r\n    activate():void {\r\n        var glc = this._glc;\r\n        glc.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\r\n    }\r\n\r\n    /**\r\n     * Clears the content on the {@link RenderTarget2D}.\r\n     */\r\n    clear():void {\r\n        this.activate();\r\n        var glc = this._glc;\r\n        glc.viewport(0, 0, this._fitWidth, this._fitHeight);\r\n        glc.clearColor(0, 0, 0, 0);\r\n        glc.clearDepth(0);\r\n        glc.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n    }\r\n\r\n    /**\r\n     * Resizes the {@link RenderTarget2D}. Note that currently this function is only a wrapper for the internal one, and\r\n     * public calls are experimental.\r\n     * @param newWidth {Number} The new width, in pixels.\r\n     * @param newHeight {Number} The new height, in pixels.\r\n     */\r\n    resize(newWidth:number, newHeight:number):void {\r\n        this.__resize(newWidth, newHeight, true);\r\n    }\r\n\r\n    /**\r\n     * Initializes the {@link RenderTarget2D}.\r\n     * @param glc {WebGLRenderingContext} The {@link WebGLRenderingContext} used to manipulate the {@link RenderTarget2D}.\r\n     * @param width {Number} The new width, in pixels.\r\n     * @param height {Number} The new height, in pixels.\r\n     * @param image {ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} See {@link RenderTarget2D.constructor}\r\n     * for more information.\r\n     * @param isRoot {Boolean} See {@link RenderTarget2D.isRoot} for more information.\r\n     * @private\r\n     */\r\n    private __initialize(glc:WebGLRenderingContext, width:number, height:number,\r\n                         image:ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement, isRoot:boolean):void {\r\n        this._glc = glc;\r\n        this._isRoot = isRoot;\r\n        this._image = image;\r\n\r\n        function error(message:string) {\r\n            glc.deleteFramebuffer(this._frameBuffer);\r\n            glc.deleteRenderbuffer(this._depthBuffer);\r\n            glc.deleteTexture(this._texture);\r\n            console.warn(message);\r\n        }\r\n\r\n        if (!isRoot) {\r\n            this._frameBuffer = glc.createFramebuffer();\r\n            if (this._frameBuffer === null) {\r\n                return error(\"Failed to create the frame buffer.\");\r\n            }\r\n            this._depthBuffer = glc.createRenderbuffer();\r\n            if (this._depthBuffer === null) {\r\n                return error(\"Failed to create the depth buffer.\");\r\n            }\r\n            this._texture = glc.createTexture();\r\n            if (this._texture === null) {\r\n                return error(\"Failed to create the underlying texture.\");\r\n            }\r\n        }\r\n        this.__resize(width, height, false);\r\n        if (!isRoot) {\r\n            glc.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\r\n            glc.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._texture, 0);\r\n            glc.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this._depthBuffer);\r\n            var status = glc.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n            if (status !== gl.FRAMEBUFFER_COMPLETE) {\r\n                return error(\"Frame buffer is not complete: code 0x\" + status.toString(16));\r\n            }\r\n        }\r\n        glc.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n        glc.bindTexture(gl.TEXTURE_2D, null);\r\n        glc.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    /**\r\n     * Resizes the {@link RenderTarget2D}.\r\n     * @param newWidth {Number} The new width, in pixels.\r\n     * @param newHeight {Number} The new height, in pixels.\r\n     * @param unbind {Boolean} Whether should unbind the texture after resizing or not. Unbinding is not required during\r\n     * initialization, but should be done during custom resizing.\r\n     * @private\r\n     */\r\n    private __resize(newWidth:number, newHeight:number, unbind:boolean):void {\r\n        var glc = this._glc;\r\n        var image = this._image;\r\n        var isRoot = this._isRoot;\r\n        var texture = this._texture;\r\n\r\n        if (image === null) {\r\n            newWidth |= 0;\r\n            newHeight |= 0;\r\n            this._originalWidth = newWidth;\r\n            this._originalHeight = newHeight;\r\n            if (!_util.isPowerOfTwo(newWidth)) {\r\n                newWidth = _util.power2Roundup(newWidth);\r\n            }\r\n            if (!_util.isPowerOfTwo(newHeight)) {\r\n                newHeight = _util.power2Roundup(newHeight);\r\n            }\r\n            this._fitWidth = newWidth;\r\n            this._fitHeight = newHeight;\r\n        } else {\r\n            // TODO: WARNING: Not tested, may also need to round-up to power of 2.\r\n            newWidth = this._originalWidth = this._fitWidth = image.width;\r\n            newHeight = this._originalHeight = this._fitHeight = image.height;\r\n        }\r\n\r\n        if (texture !== null) {\r\n            glc.bindTexture(gl.TEXTURE_2D, this._texture);\r\n            glc.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            glc.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            glc.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            glc.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        }\r\n        if (image !== null) {\r\n            glc.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\r\n            if (texture !== null) {\r\n                glc.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, <ImageData>image);\r\n            }\r\n        } else {\r\n            glc.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\r\n            if (texture !== null) {\r\n                glc.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, newWidth, newHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n            }\r\n        }\r\n        if (!isRoot) {\r\n            glc.bindRenderbuffer(gl.RENDERBUFFER, this._depthBuffer);\r\n            glc.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, newWidth, newHeight);\r\n        }\r\n        if (unbind) {\r\n            glc.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n            glc.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n    }\r\n\r\n    protected _glc:WebGLRenderingContext = null;\r\n    protected _renderer:WebGLRenderer = null;\r\n    protected _frameBuffer:WebGLFramebuffer = null;\r\n    protected _depthBuffer:WebGLRenderbuffer = null;\r\n    protected _texture:WebGLTexture = null;\r\n    protected _originalWidth:number = 0;\r\n    protected _originalHeight:number = 0;\r\n    protected _fitWidth:number = 0;\r\n    protected _fitHeight:number = 0;\r\n    protected _image:ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement = null;\r\n    private _isRoot:boolean = false;\r\n\r\n    static textureCoords:PackedArrayBuffer = null;\r\n    static textureIndices:PackedArrayBuffer = null;\r\n\r\n}\r\n\r\nfunction initStaticFields(glc:WebGLRenderingContext) {\r\n    if (isInitializedStatically) {\r\n        return;\r\n    }\r\n    var textureCoords = [\r\n        0, 1,\r\n        1, 1,\r\n        0, 0,\r\n        1, 0\r\n    ];\r\n    var textureIndices = [\r\n        0, 1, 2,\r\n        1, 2, 3\r\n    ];\r\n    RenderTarget2D.textureCoords = PackedArrayBuffer.create(glc, textureCoords, gl.FLOAT, gl.ARRAY_BUFFER);\r\n    RenderTarget2D.textureIndices = PackedArrayBuffer.create(glc, textureIndices, gl.UNSIGNED_SHORT, gl.ELEMENT_ARRAY_BUFFER);\r\n    isInitializedStatically = true;\r\n}\r\n"],"sourceRoot":"/source/"}