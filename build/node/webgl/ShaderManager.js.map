{"version":3,"sources":["webgl/ShaderManager.ts"],"names":["ShaderManager","ShaderManager.constructor","ShaderManager.dispose","ShaderManager.getNextAvailableID","ShaderManager.loadShader","ShaderManager.selectShader","ShaderManager.currentShader","ShaderManager.context","ShaderManager.renderer","ShaderManager.___getShader","ShaderManager.___insertShaders"],"mappings":"AAAA;;GAEG;AAIH,gCAA8B,2BAA2B,CAAC,CAAA;AAC1D,4BAA0B,uBAAuB,CAAC,CAAA;AAClD,4BAA0B,uBAAuB,CAAC,CAAA;AAClD,gCAA8B,2BAA2B,CAAC,CAAA;AAC1D,qCAAmC,gCAAgC,CAAC,CAAA;AACpE,2BAAyB,sBAAsB,CAAC,CAAA;AAKhD,4BAA0B,uBAAuB,CAAC,CAAA;AAClD,gCAA8B,2BAA2B,CAAC,CAAA;AAE1D;IAEIA,uBAAYA,QAAsBA;QA0E1BC,cAASA,GAAiBA,IAAIA,CAACA;QAC/BA,aAAQA,GAAgBA,IAAIA,CAACA;QAC7BA,mBAAcA,GAAcA,IAAIA,CAACA;QA3ErCA,IAAIA,CAACA,SAASA,GAAGA,QAAQA,CAACA;QAC1BA,IAAIA,CAACA,QAAQA,GAAGA,EAAEA,CAACA;QACnBA,IAAIA,CAACA,eAAeA,EAAEA,CAACA;IAC3BA,CAACA;IAEDD,+BAAOA,GAAPA;QACIE,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,MAAMA,EAAEA,EAAEA,CAACA,EAAEA,CAACA;YAC5CA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,OAAOA,EAAEA,CAACA;QAC/BA,CAACA;QACDA,IAAIA,CAACA,cAAcA,GAAGA,IAAIA,CAACA;QAC3BA,IAAIA,CAACA,SAASA,GAAGA,IAAIA,CAACA;QACtBA,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;IACzBA,CAACA;IAEDF,0CAAkBA,GAAlBA;QACIG,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,MAAMA,CAACA;IAChCA,CAACA;IAEDH,kCAAUA,GAAVA,UAAWA,UAAiBA,EAAEA,QAAkCA,EAAEA,UAAsCA;QACpGI,IAAIA,QAAQA,GAAGA,CAACA,CAACA,CAACA;QAClBA,IAAIA,CAACA;YACDA,IAAIA,YAAYA,GAAOA,OAAOA,CAACA,YAAYA,GAAGA,UAAUA,GAAGA,QAAQA,CAACA,CAACA;YACrEA,IAAIA,eAAeA,GAAUA,YAAYA,CAACA,iBAAiBA,CAACA;YAC5DA,IAAIA,MAAMA,GAAcA,IAAIA,CAACA;YAC7BA,MAAMA,GAAGA,IAAIA,YAAYA,CAACA,IAAIA,EAAEA,YAAYA,CAACA,aAAaA,EAAEA,YAAYA,CAACA,eAAeA,EAAEA,QAAQA,EAAEA,UAAUA,CAACA,CAACA;YAChHA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;YAC3BA,QAAQA,GAAGA,MAAMA,CAACA,EAAEA,CAACA;QACzBA,CAAEA;QAAAA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;QACbA,CAACA;QACDA,MAAMA,CAACA,QAAQA,CAACA;IACpBA,CAACA;IAEDJ,oCAAYA,GAAZA,UAAaA,EAASA;QAClBK,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,WAAWA,CAACA,EAAEA,CAACA,CAACA;QAClCA,EAAEA,CAACA,CAACA,MAAMA,KAAKA,IAAIA,CAACA,CAACA,CAACA;YAClBA,MAAMA,CAACA,MAAMA,EAAEA,CAACA;YAChBA,IAAIA,CAACA,cAAcA,GAAGA,MAAMA,CAACA;QACjCA,CAACA;IACLA,CAACA;IAEDL,sBAAIA,wCAAaA;aAAjBA;YACIM,MAAMA,CAACA,IAAIA,CAACA,cAAcA,CAACA;QAC/BA,CAACA;;;OAAAN;IAEDA,sBAAIA,kCAAOA;aAAXA;YACIO,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,OAAOA,CAACA;QAClCA,CAACA;;;OAAAP;IAEDA,sBAAIA,mCAAQA;aAAZA;YACIQ,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA;QAC1BA,CAACA;;;OAAAR;IAEOA,mCAAWA,GAAnBA,UAAoBA,EAASA;QACzBS,IAAIA,MAAMA,GAAcA,IAAIA,CAACA;QAC7BA,IAAIA,CAACA;YACDA,MAAMA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,EAAEA,CAACA,CAACA;QAC/BA,CAAEA;QAAAA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;QACbA,CAACA;QACDA,MAAMA,CAACA,MAAMA,CAACA;IAClBA,CAACA;IAEOT,uCAAeA,GAAvBA;QACIU,IAAIA,UAAUA,GAAGA,IAAIA,CAACA,QAAQA,CAACA;QAC/BA,UAAUA,CAACA,IAAIA,CAACA,IAAIA,iCAAeA,CAACA,IAAIA,CAACA,CAACA,CAACA;QAC3CA,UAAUA,CAACA,IAAIA,CAACA,IAAIA,yBAAWA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACvCA,UAAUA,CAACA,IAAIA,CAACA,IAAIA,yBAAWA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACvCA,UAAUA,CAACA,IAAIA,CAACA,IAAIA,iCAAeA,CAACA,IAAIA,CAACA,CAACA,CAACA;QAC3CA,UAAUA,CAACA,IAAIA,CAACA,IAAIA,2CAAoBA,CAACA,IAAIA,CAACA,CAACA,CAACA;QAChDA,UAAUA,CAACA,IAAIA,CAACA,IAAIA,uBAAUA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACtCA,UAAUA,CAACA,IAAIA,CAACA,IAAIA,yBAAWA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACvCA,UAAUA,CAACA,IAAIA,CAACA,IAAIA,iCAAeA,CAACA,IAAIA,CAACA,CAACA,CAACA;IAC/CA,CAACA;IAMLV,oBAACA;AAADA,CAhFA,AAgFCA,IAAA;AAhFY,qBAAa,gBAgFzB,CAAA","file":"webgl/ShaderManager.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/17.\r\n */\r\n\r\nimport {ShaderBase} from \"./ShaderBase\";\r\nimport {WebGLRenderer} from \"./WebGLRenderer\";\r\nimport {PrimitiveShader} from \"./shaders/PrimitiveShader\";\r\nimport {BlurXShader} from \"./shaders/BlurXShader\";\r\nimport {BlurYShader} from \"./shaders/BlurYShader\";\r\nimport {ReplicateShader} from \"./shaders/ReplicateShader\";\r\nimport {ColorTransformShader} from \"./shaders/ColorTransformShader\";\r\nimport {FxaaShader} from \"./shaders/FxaaShader\";\r\nimport {UniformCache} from \"./UniformCache\";\r\nimport {AttributeCache} from \"./AttributeCache\";\r\nimport {IDisposable} from \"../IDisposable\";\r\nimport {ShaderID} from \"./ShaderID\";\r\nimport {Blur2Shader} from \"./shaders/Blur2Shader\";\r\nimport {CopyImageShader} from \"./shaders/CopyImageShader\";\r\n\r\nexport class ShaderManager implements IDisposable {\r\n\r\n    constructor(renderer:WebGLRenderer) {\r\n        this._renderer = renderer;\r\n        this._shaders = [];\r\n        this.__insertShaders();\r\n    }\r\n\r\n    dispose():void {\r\n        for (var i = 0; i < this._shaders.length; ++i) {\r\n            this._shaders[i].dispose();\r\n        }\r\n        this._currentShader = null;\r\n        this._renderer = null;\r\n        this._shaders = null;\r\n    }\r\n\r\n    getNextAvailableID():number {\r\n        return this._shaders.length;\r\n    }\r\n\r\n    loadShader(shaderName:string, uniforms:Map<string, UniformCache>, attributes:Map<string, AttributeCache>):number {\r\n        var returnID = -1;\r\n        try {\r\n            var SHADER_CLASS:any = require(\"./shaders/\" + shaderName + \"Shader\");\r\n            var shaderClassName:string = SHADER_CLASS.SHADER_CLASS_NAME;\r\n            var shader:ShaderBase = null;\r\n            shader = new SHADER_CLASS(this, SHADER_CLASS.VERTEX_SOURCE, SHADER_CLASS.FRAGMENT_SOURCE, uniforms, attributes);\r\n            this._shaders.push(shader);\r\n            returnID = shader.id;\r\n        } catch (e) {\r\n        }\r\n        return returnID;\r\n    }\r\n\r\n    selectShader(id:number):void {\r\n        var shader = this.__getShader(id);\r\n        if (shader !== null) {\r\n            shader.select();\r\n            this._currentShader = shader;\r\n        }\r\n    }\r\n\r\n    get currentShader():ShaderBase {\r\n        return this._currentShader;\r\n    }\r\n\r\n    get context():WebGLRenderingContext {\r\n        return this._renderer.context;\r\n    }\r\n\r\n    get renderer():WebGLRenderer {\r\n        return this._renderer;\r\n    }\r\n\r\n    private __getShader(id:number):ShaderBase {\r\n        var shader:ShaderBase = null;\r\n        try {\r\n            shader = this._shaders[id];\r\n        } catch (e) {\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    private __insertShaders():void {\r\n        var shaderList = this._shaders;\r\n        shaderList.push(new PrimitiveShader(this));\r\n        shaderList.push(new BlurXShader(this));\r\n        shaderList.push(new BlurYShader(this));\r\n        shaderList.push(new ReplicateShader(this));\r\n        shaderList.push(new ColorTransformShader(this));\r\n        shaderList.push(new FxaaShader(this));\r\n        shaderList.push(new Blur2Shader(this));\r\n        shaderList.push(new CopyImageShader(this));\r\n    }\r\n\r\n    private _renderer:WebGLRenderer = null;\r\n    private _shaders:ShaderBase[] = null;\r\n    private _currentShader:ShaderBase = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}