{"version":3,"sources":["webgl/ShaderManager.ts"],"names":[],"mappings":"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","file":"webgl/ShaderManager.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/17.\r\n */\r\n\r\nimport {ShaderBase} from \"./ShaderBase\";\r\nimport {WebGLRenderer} from \"./WebGLRenderer\";\r\nimport {PrimitiveShader} from \"./shaders/PrimitiveShader\";\r\nimport {BlurXShader} from \"./shaders/BlurXShader\";\r\nimport {BlurYShader} from \"./shaders/BlurYShader\";\r\nimport {ReplicateShader} from \"./shaders/ReplicateShader\";\r\nimport {ColorTransformShader} from \"./shaders/ColorTransformShader\";\r\nimport {FxaaShader} from \"./shaders/FxaaShader\";\r\nimport {UniformCache} from \"./UniformCache\";\r\nimport {AttributeCache} from \"./AttributeCache\";\r\nimport {IDisposable} from \"../IDisposable\";\r\nimport {ShaderID} from \"./ShaderID\";\r\nimport {Blur2Shader} from \"./shaders/Blur2Shader\";\r\nimport {CopyImageShader} from \"./shaders/CopyImageShader\";\r\nimport {Primitive2Shader} from \"./shaders/Primitive2Shader\";\r\n\r\nexport class ShaderManager implements IDisposable {\r\n\r\n    constructor(renderer:WebGLRenderer) {\r\n        this._renderer = renderer;\r\n        this._shaders = [];\r\n        this.__insertShaders();\r\n    }\r\n\r\n    dispose():void {\r\n        for (var i = 0; i < this._shaders.length; ++i) {\r\n            this._shaders[i].dispose();\r\n        }\r\n        this._currentShader = null;\r\n        this._renderer = null;\r\n        this._shaders = null;\r\n    }\r\n\r\n    getNextAvailableID():number {\r\n        return this._shaders.length;\r\n    }\r\n\r\n    loadShader(shaderName:string, uniforms:Map<string, UniformCache>, attributes:Map<string, AttributeCache>):number {\r\n        var returnID = -1;\r\n        try {\r\n            var SHADER_CLASS:any = require(\"./shaders/\" + shaderName + \"Shader\");\r\n            var shaderClassName:string = SHADER_CLASS.SHADER_CLASS_NAME;\r\n            var shader:ShaderBase = null;\r\n            shader = new SHADER_CLASS(this, SHADER_CLASS.VERTEX_SOURCE, SHADER_CLASS.FRAGMENT_SOURCE, uniforms, attributes);\r\n            this._shaders.push(shader);\r\n            returnID = shader.id;\r\n        } catch (e) {\r\n        }\r\n        return returnID;\r\n    }\r\n\r\n    selectShader(id:number):void {\r\n        var shader = this.__getShader(id);\r\n        if (shader !== null) {\r\n            shader.select();\r\n            this._currentShader = shader;\r\n        }\r\n    }\r\n\r\n    get currentShader():ShaderBase {\r\n        return this._currentShader;\r\n    }\r\n\r\n    get context():WebGLRenderingContext {\r\n        return this._renderer.context;\r\n    }\r\n\r\n    get renderer():WebGLRenderer {\r\n        return this._renderer;\r\n    }\r\n\r\n    private __getShader(id:number):ShaderBase {\r\n        var shader:ShaderBase = null;\r\n        try {\r\n            shader = this._shaders[id];\r\n        } catch (e) {\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    private __insertShaders():void {\r\n        var shaderList = this._shaders;\r\n        shaderList.push(new PrimitiveShader(this));\r\n        shaderList.push(new BlurXShader(this));\r\n        shaderList.push(new BlurYShader(this));\r\n        shaderList.push(new ReplicateShader(this));\r\n        shaderList.push(new ColorTransformShader(this));\r\n        shaderList.push(new FxaaShader(this));\r\n        shaderList.push(new Blur2Shader(this));\r\n        shaderList.push(new CopyImageShader(this));\r\n        shaderList.push(new Primitive2Shader(this));\r\n    }\r\n\r\n    private _renderer:WebGLRenderer = null;\r\n    private _shaders:ShaderBase[] = null;\r\n    private _currentShader:ShaderBase = null;\r\n\r\n}\r\n"],"sourceRoot":"/source/"}