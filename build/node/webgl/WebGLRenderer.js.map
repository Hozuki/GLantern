{"version":3,"sources":["webgl/WebGLRenderer.ts"],"names":["WebGLRenderer","WebGLRenderer.constructor","WebGLRenderer.clear","WebGLRenderer.dispose","WebGLRenderer.setRenderTarget","WebGLRenderer.currentRenderTarget","WebGLRenderer.view","WebGLRenderer.context","WebGLRenderer.shaderManager","WebGLRenderer.filterManager","WebGLRenderer.tessellator","WebGLRenderer.inputTarget","WebGLRenderer.screenTarget","WebGLRenderer.createRenderTarget","WebGLRenderer.createRootRenderTarget","WebGLRenderer.releaseRenderTarget","WebGLRenderer.copyRenderTargetContent","WebGLRenderer.copyRenderTargetContentEx","WebGLRenderer.present","WebGLRenderer.setBlendMode","WebGLRenderer.___initialize","WebGLRenderer.___initializeTessellator","WebGLRenderer.onContextLost","WebGLRenderer.onContextRestored"],"mappings":"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","file":"webgl/WebGLRenderer.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/17.\r\n */\r\n\r\nimport libtess = require(\"libtess\");\r\n\r\nimport {RendererOptions} from \"./RendererOptions\";\r\nimport {ShaderManager} from \"./ShaderManager\";\r\nimport {FilterManager} from \"./FilterManager\";\r\nimport {RenderTarget2D} from \"./RenderTarget2D\";\r\nimport {WebGLUtils} from \"./WebGLUtils\";\r\nimport {_util} from \"../_util/_util\";\r\nimport {IDisposable} from \"../IDisposable\";\r\nimport {RenderHelper} from \"./RenderHelper\";\r\nimport {BlendMode} from \"../flash/display/BlendMode\";\r\n\r\nvar gl = (<any>this).WebGLRenderingContext || (<any>window).WebGLRenderingContext;\r\n\r\n/**\r\n * The WebGL renderer, main provider of the rendering services.\r\n */\r\nexport class WebGLRenderer implements IDisposable {\r\n\r\n    /**\r\n     * Instantiates a new {@link WebGLRenderer}.\r\n     * @param width {Number} The width for presentation of the renderer.\r\n     * @param height {Number} The height for presentation of the renderer.\r\n     * @param options {RendererOptions} Options for initializing the newly created {@link WebGLRenderer}.\r\n     * @implements {IDisposable}\r\n     */\r\n    constructor(width:number, height:number, options:RendererOptions) {\r\n        this.__initialize(width, height, options);\r\n    }\r\n\r\n    clear():void {\r\n        if (this._screenTarget !== null) {\r\n            this._screenTarget.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disposes the {@link WebGLRenderer} and related resources.\r\n     */\r\n    dispose():void {\r\n        if (this._isInitialized) {\r\n            this._inputTarget.dispose();\r\n            this._screenTarget.dispose();\r\n            this._filterManager.dispose();\r\n            this._shaderManager.dispose();\r\n            this._filterManager = null;\r\n            this._shaderManager = null;\r\n            this._inputTarget = null;\r\n            this._screenTarget = null;\r\n            this._context = null;\r\n            if (this._view.parentNode !== null && this._view.parentNode !== undefined) {\r\n                this._view.parentNode.removeChild(this._view);\r\n            }\r\n            this._view = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Switches current render target to a specified {@link RenderTarget2D}.\r\n     * @param [target] {RenderTarget2D} The {@link RenderTarget2D} that will be used. Null means using the default first-time\r\n     * render target of the {@link WebGLRenderer}. The default value is null.\r\n     */\r\n    setRenderTarget(target:RenderTarget2D = null):void {\r\n        if (_util.isUndefinedOrNull(target)) {\r\n            this._currentRenderTarget = this._inputTarget;\r\n        } else {\r\n            this._currentRenderTarget = target;\r\n        }\r\n        this._currentRenderTarget.activate();\r\n    }\r\n\r\n    /**\r\n     * Returns current render target of the {@link WebGLRenderer}.\r\n     * @returns {RenderTarget2D} Current render target of the {@link WebGLRenderer}.\r\n     */\r\n    get currentRenderTarget():RenderTarget2D {\r\n        return this._currentRenderTarget;\r\n    }\r\n\r\n    /**\r\n     * Returns the output &lt;canvas&gt; for displaying the contents rendered.\r\n     * @returns {HTMLCanvasElement} The output &lt;canvas&gt;.\r\n     */\r\n    get view():HTMLCanvasElement {\r\n        return this._view;\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link WebGLRenderingContext} attached to the {@link WebGLRenderer}.\r\n     * @returns {WebGLRenderingContext} The {@link WebGLRenderingContext} attached to the {@link WebGLRenderer}.\r\n     */\r\n    get context():WebGLRenderingContext {\r\n        return this._context;\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link ShaderManager} used by the {@link WebGLRenderer}.\r\n     * @returns {ShaderManager} The {@link ShaderManager} used by the {@link WebGLRenderer}.\r\n     */\r\n    get shaderManager():ShaderManager {\r\n        return this._shaderManager;\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link FilterManager} used by the {@link WebGLRenderer}.\r\n     * @returns {FilterManager} The {@link FilterManager} used by the {@link WebGLRenderer}.\r\n     */\r\n    get filterManager():FilterManager {\r\n        return this._filterManager;\r\n    }\r\n\r\n    /**\r\n     * Returns the tessellator used by the {@link WebGLRenderer}.\r\n     * @returns {libtess.GluTesselator} The tessellator used by the {@link WebGLRenderer}.\r\n     */\r\n    get tessellator():libtess.GluTesselator {\r\n        return this._tessellator;\r\n    }\r\n\r\n    /**\r\n     * Returns the first-time render target of the {@link WebGLRenderer}. Contents are all rendered to this target. Then,\r\n     * the contents on this target are copied to {@link WebGLRenderer.screenTarget} for postprocessing.\r\n     * @returns {RenderTarget2D} The first-time render target of the {@link WebGLRenderer}.\r\n     */\r\n    get inputTarget():RenderTarget2D {\r\n        return this._inputTarget;\r\n    }\r\n\r\n    /**\r\n     * Returns the final output of the {@link WebGLRenderer}. This target is always a root render target, which directly\r\n     * renders to the attached &lt;canvas&gt;. If FXAA is enabled, the copying process from {@link WebGLRenderer.inputTarget}\r\n     * to this target performs a FXAA filtering. If not, it is a simple replicating process.\r\n     * @returns {RenderTarget2D} The output of the {@link WebGLRenderer}.\r\n     */\r\n    get screenTarget():RenderTarget2D {\r\n        return this._screenTarget;\r\n    }\r\n\r\n    /**\r\n     * Creates a new {@link RenderTarget2D} as a buffer. {@link RenderTarget2D}s should be only instanted through this\r\n     * factory method, and be released using {@link WebGLRenderer.releaseRenderTarget}.\r\n     * @param [image] {ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} See {@link RenderTarget2D.image}\r\n     * for more information.\r\n     * @returns {RenderTarget2D} The created {@link RenderTarget2D}.\r\n     */\r\n    createRenderTarget(image:ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement = null):RenderTarget2D {\r\n        return new RenderTarget2D(this, image, false);\r\n    }\r\n\r\n    /**\r\n     * Creates a new {@link RenderTarget2D} as an output to the screen. {@link RenderTarget2D}s should be only instanted\r\n     * through this factory method, and be released using {@link WebGLRenderer.releaseRenderTarget}.\r\n     * @param [image] {ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} See {@link RenderTarget2D.image}\r\n     * for more information.\r\n     * @returns {RenderTarget2D} The created {@link RenderTarget2D}.\r\n     */\r\n    createRootRenderTarget(image:ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement = null):RenderTarget2D {\r\n        return new RenderTarget2D(this, image, true);\r\n    }\r\n\r\n    /**\r\n     * Releases a {@link RenderTarget2D} created by the {@link WebGLRenderer}.\r\n     * @param target {RenderTarget2D} The {@link RenderTarget2D} to be released.\r\n     */\r\n    releaseRenderTarget(target:RenderTarget2D):void {\r\n        if (target !== null && target !== undefined) {\r\n            target.dispose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs a simple copying from the source {@link RenderTarget2D} to the destination {@link RenderTarget2D}.\r\n     * @param source {RenderTarget2D} The source of contents.\r\n     * @param destination {RenderTarget2D} The destination to which the contents are copyied.\r\n     * @param clearOutput {Boolean} Whether to clear the contents of the destination before copying or not.\r\n     */\r\n    copyRenderTargetContent(source:RenderTarget2D, destination:RenderTarget2D, clearOutput:boolean):void {\r\n        RenderHelper.copyTargetContent(this, source, destination, false, false, clearOutput);\r\n    }\r\n\r\n    /**\r\n     * Performs an extended copying from the source {@link RenderTarget2D} to the destination {@link RenderTarget2D}.\r\n     * @param source {RenderTarget2D} The source of contents.\r\n     * @param destination {RenderTarget2D} The destination to which the contents are copyied.\r\n     * @param flipX {Boolean} Whether to flip the contents horizontally during copying or not.\r\n     * @param flipY {Boolean} Whether to flip the contents vertically during copying or not.\r\n     * @param clearOutput {Boolean} Whether to clear the contents of the destination before copying or not.\r\n     */\r\n    copyRenderTargetContentEx(source:RenderTarget2D, destination:RenderTarget2D, flipX:boolean, flipY:boolean, clearOutput:boolean):void {\r\n        RenderHelper.copyTargetContent(this, source, destination, flipX, flipY, clearOutput);\r\n    }\r\n\r\n    /**\r\n     * Presents the final composition result.\r\n     */\r\n    present():void {\r\n        this.copyRenderTargetContentEx(this._inputTarget, this._screenTarget, false, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set current blend mode. Blend modes affects how the visual contents are rendered.\r\n     * @param blendMode {String} See {@link BlendMode} for more information.\r\n     * @see {@link BlendMode}\r\n     */\r\n    setBlendMode(blendMode:string):void {\r\n        if (!this._isInitialized) {\r\n            return;\r\n        }\r\n        if (this._currentBlendMode === blendMode) {\r\n            return;\r\n        }\r\n\r\n        var config:number[] = BMS[blendMode] || BMS[BlendMode.NORMAL];\r\n        var glc = this._context;\r\n        if (config[0] >= 0) {\r\n            glc.blendEquation(gl.FUNC_ADD);\r\n        } else {\r\n            glc.blendEquation(gl.FUNC_SUBTRACT);\r\n        }\r\n        glc.blendFunc(config[1], config[2]);\r\n        this._currentBlendMode = blendMode;\r\n    }\r\n\r\n    /**\r\n     * Initializes the newly created {@link WebGLRenderer}.\r\n     * @param width {Number} The width, in pixels.\r\n     * @param height {Number} The height, in pixels.\r\n     * @param options {RendererOptions} Initialization options.\r\n     * @private\r\n     */\r\n    private __initialize(width:number, height:number, options:RendererOptions) {\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        this._isInitialized = true;\r\n        this._options = _util.deepClone(options);\r\n\r\n        var canvas:HTMLCanvasElement = window.document.createElement(\"canvas\");\r\n        canvas.className = \"glantern-view\";\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        var attributes:WebGLContextAttributes = Object.create(null);\r\n        attributes.alpha = options.transparent;\r\n        attributes.antialias = options.antialias;\r\n        attributes.premultipliedAlpha = true;\r\n        attributes.depth = false;\r\n        this._context = WebGLUtils.setupWebGL(canvas, attributes);\r\n        this._view = canvas;\r\n\r\n        var glc = this._context;\r\n        glc.disable(gl.DEPTH_TEST);\r\n        glc.disable(gl.CULL_FACE);\r\n        glc.enable(gl.BLEND);\r\n        this.setBlendMode(BlendMode.NORMAL);\r\n\r\n        /*\r\n         if (options.antialias) {\r\n         // If anti-alias is on, then we need to draw the \"screen\" to a FXAA buffer\r\n         this._receiveTarget = this.createRenderTarget(); // MSAA zoomFactor = 2\r\n         this._screenTarget = this.createRootRenderTarget(); // MSAA zoomFactor = 1\r\n         } else {\r\n         // If anti-alias is off, then we will output to the screen, directly.\r\n         this._receiveTarget = this.createRootRenderTarget();\r\n         }\r\n         */\r\n        this._inputTarget = this.createRenderTarget();\r\n        this._screenTarget = this.createRootRenderTarget();\r\n\r\n        canvas.addEventListener(\"webglcontextlost\", this.onContextLost.bind(this));\r\n        canvas.addEventListener(\"webglcontextrestored\", this.onContextRestored.bind(this));\r\n\r\n        this._tessellator = new libtess.GluTesselator();\r\n        this._shaderManager = new ShaderManager(this);\r\n        this._filterManager = new FilterManager(this);\r\n\r\n        this.setRenderTarget(null);\r\n\r\n        this.__initializeTessellator();\r\n    }\r\n\r\n    /**\r\n     * Initializes the tessellator.\r\n     * @private\r\n     */\r\n    private __initializeTessellator():void {\r\n        var tess = this._tessellator;\r\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA,\r\n            (data:number[], polyVertArray:number[][]):void => {\r\n                polyVertArray[polyVertArray.length - 1].push(data[0], data[1], data[2]);\r\n            });\r\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN_DATA,\r\n            (type:number, vertexArrays:number[][]):void => {\r\n                if (type !== libtess.primitiveType.GL_TRIANGLES) {\r\n                    console.warn('{TESS} expected TRIANGLES but got type: ' + type);\r\n                }\r\n                vertexArrays.push([]);\r\n            });\r\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR,\r\n            (errorCode:number):void => {\r\n                console.warn('{TESS} error number: ', errorCode);\r\n            });\r\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE,\r\n            (coords:number[], data:any, weight:number):number[] => {\r\n                return [coords[0], coords[1], coords[2]];\r\n            });\r\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG,\r\n            (flag:any):void => {\r\n                // Do nothing\r\n            });\r\n    }\r\n\r\n    /**\r\n     * The event handler for handling the lost of active {@link WebGLRenderingContext}.\r\n     * @param ev {Event} Event parameters.\r\n     */\r\n    private onContextLost(ev:Event):void {\r\n    }\r\n\r\n    /**\r\n     * The event handler for handling the restoration of active {@link WebGLRenderingContext}.\r\n     * @param ev {Event} Event parameters.\r\n     */\r\n    private onContextRestored(ev:Event):void {\r\n    }\r\n\r\n    /**\r\n     * The default {@link RendererOptions} for instantiating a {@link WebGLRenderer}.\r\n     * @type {RendererOptions}\r\n     */\r\n    static DEFAULT_OPTIONS:RendererOptions = {\r\n        antialias: false,\r\n        depth: false,\r\n        transparent: true\r\n    };\r\n\r\n    private _currentRenderTarget:RenderTarget2D = null;\r\n    private _currentBlendMode:string = null;\r\n    private _inputTarget:RenderTarget2D = null;\r\n    private _screenTarget:RenderTarget2D = null;\r\n    private _filterManager:FilterManager = null;\r\n    private _shaderManager:ShaderManager = null;\r\n    private _tessellator:libtess.GluTesselator = null;\r\n    private _context:WebGLRenderingContext = null;\r\n    private _view:HTMLCanvasElement;\r\n    private _options:RendererOptions = null;\r\n    private _isInitialized:boolean = false;\r\n\r\n}\r\n\r\nvar BMS:{[k:string]:number[]} = Object.create(null);\r\nBMS[BlendMode.ADD] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.ALPHA] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.DARKEN] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.DIFFERENCE] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.ERASE] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.HARDLIGHT] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.INVERT] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.LAYER] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.LIGHTEN] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.MULTIPLY] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.NORMAL] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.OVERLAY] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.SCREEN] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.SHADER] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.SUBTRACT] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n"],"sourceRoot":"/source/"}