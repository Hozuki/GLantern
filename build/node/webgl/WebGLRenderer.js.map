{"version":3,"sources":["webgl/WebGLRenderer.ts"],"names":[],"mappings":"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","file":"webgl/WebGLRenderer.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/17.\r\n */\r\n\r\nimport libtess = require(\"libtess\");\r\n\r\nimport {RendererOptions} from \"./RendererOptions\";\r\nimport {ShaderManager} from \"./ShaderManager\";\r\nimport {FilterManager} from \"./FilterManager\";\r\nimport {RenderTarget2D} from \"./RenderTarget2D\";\r\nimport {WebGLUtils} from \"./WebGLUtils\";\r\nimport {IDisposable} from \"../IDisposable\";\r\nimport {RenderHelper} from \"./RenderHelper\";\r\nimport {BlendMode} from \"../flash/display/BlendMode\";\r\nimport {GLUtil} from \"../GLUtil\";\r\n\r\nvar gl = (<any>this).WebGLRenderingContext || (<any>window).WebGLRenderingContext;\r\n\r\n/**\r\n * The WebGL renderer, main provider of the rendering services.\r\n */\r\nexport class WebGLRenderer implements IDisposable {\r\n\r\n    /**\r\n     * Instantiates a new {@link WebGLRenderer}.\r\n     * @param width {Number} The width for presentation of the renderer.\r\n     * @param height {Number} The height for presentation of the renderer.\r\n     * @param options {RendererOptions} Options for initializing the newly created {@link WebGLRenderer}.\r\n     * @implements {IDisposable}\r\n     */\r\n    constructor(width:number, height:number, options:RendererOptions) {\r\n        this.__initialize(width, height, options);\r\n    }\r\n\r\n    /**\r\n     * Clear the screen.\r\n     */\r\n    clear():void {\r\n        if (this._screenTarget !== null) {\r\n            this._screenTarget.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disposes the {@link WebGLRenderer} and related resources.\r\n     */\r\n    dispose():void {\r\n        if (this._isInitialized) {\r\n            this._screenTarget.dispose();\r\n            this._filterManager.dispose();\r\n            this._shaderManager.dispose();\r\n            this._filterManager = null;\r\n            this._shaderManager = null;\r\n            this._screenTarget = null;\r\n            this._context = null;\r\n            if (this._view.parentNode !== null && this._view.parentNode !== undefined) {\r\n                this._view.parentNode.removeChild(this._view);\r\n            }\r\n            this._view = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Switches current render target to a specified {@link RenderTarget2D}.\r\n     * @param [target] {RenderTarget2D} The {@link RenderTarget2D} that will be used. Null means using the default first-time\r\n     * render target of the {@link WebGLRenderer}. The default value is null.\r\n     */\r\n    setRenderTarget(target:RenderTarget2D = null):void {\r\n        if (target === this._currentRenderTarget && target !== null) {\r\n            return;\r\n        }\r\n        if (GLUtil.isUndefinedOrNull(target)) {\r\n            this._currentRenderTarget = this._screenTarget;\r\n        } else {\r\n            this._currentRenderTarget = target;\r\n        }\r\n        this._currentRenderTarget.activate();\r\n    }\r\n\r\n    /**\r\n     * Returns current render target of the {@link WebGLRenderer}.\r\n     * @returns {RenderTarget2D} Current render target of the {@link WebGLRenderer}.\r\n     */\r\n    get currentRenderTarget():RenderTarget2D {\r\n        return this._currentRenderTarget;\r\n    }\r\n\r\n    /**\r\n     * Returns the output &lt;canvas&gt; for displaying the contents rendered.\r\n     * @returns {HTMLCanvasElement} The output &lt;canvas&gt;.\r\n     */\r\n    get view():HTMLCanvasElement {\r\n        return this._view;\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link WebGLRenderingContext} attached to the {@link WebGLRenderer}.\r\n     * @returns {WebGLRenderingContext} The {@link WebGLRenderingContext} attached to the {@link WebGLRenderer}.\r\n     */\r\n    get context():WebGLRenderingContext {\r\n        return this._context;\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link ShaderManager} used by the {@link WebGLRenderer}.\r\n     * @returns {ShaderManager} The {@link ShaderManager} used by the {@link WebGLRenderer}.\r\n     */\r\n    get shaderManager():ShaderManager {\r\n        return this._shaderManager;\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link FilterManager} used by the {@link WebGLRenderer}.\r\n     * @returns {FilterManager} The {@link FilterManager} used by the {@link WebGLRenderer}.\r\n     */\r\n    get filterManager():FilterManager {\r\n        return this._filterManager;\r\n    }\r\n\r\n    /**\r\n     * Returns the tessellator used by the {@link WebGLRenderer}.\r\n     * @returns {libtess.GluTesselator} The tessellator used by the {@link WebGLRenderer}.\r\n     */\r\n    get tessellator():libtess.GluTesselator {\r\n        return this._tessellator;\r\n    }\r\n\r\n    /**\r\n     * Returns the final output of the {@link WebGLRenderer}. This target is always a root render target, which directly\r\n     * renders to the attached &lt;canvas&gt;. If FXAA is enabled, the copying process from {@link WebGLRenderer.inputTarget}\r\n     * to this target performs a FXAA filtering. If not, it is a simple replicating process.\r\n     * @returns {RenderTarget2D} The output of the {@link WebGLRenderer}.\r\n     */\r\n    get screenTarget():RenderTarget2D {\r\n        return this._screenTarget;\r\n    }\r\n\r\n    /**\r\n     * Creates a new {@link RenderTarget2D} as a buffer. {@link RenderTarget2D}s should be only instanted through this\r\n     * factory method, and be released using {@link WebGLRenderer.releaseRenderTarget}.\r\n     * @param [image] {ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} See {@link RenderTarget2D.image}\r\n     * for more information.\r\n     * @returns {RenderTarget2D} The created {@link RenderTarget2D}.\r\n     */\r\n    createRenderTarget(image:ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement = null):RenderTarget2D {\r\n        return new RenderTarget2D(this, image, false);\r\n    }\r\n\r\n    /**\r\n     * Creates a new {@link RenderTarget2D} as an output to the screen. {@link RenderTarget2D}s should be only instanted\r\n     * through this factory method, and be released using {@link WebGLRenderer.releaseRenderTarget}.\r\n     * @param [image] {ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} See {@link RenderTarget2D.image}\r\n     * for more information.\r\n     * @returns {RenderTarget2D} The created {@link RenderTarget2D}.\r\n     */\r\n    createRootRenderTarget(image:ImageData|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement = null):RenderTarget2D {\r\n        return new RenderTarget2D(this, image, true);\r\n    }\r\n\r\n    /**\r\n     * Releases a {@link RenderTarget2D} created by the {@link WebGLRenderer}.\r\n     * @param target {RenderTarget2D} The {@link RenderTarget2D} to be released.\r\n     */\r\n    releaseRenderTarget(target:RenderTarget2D):void {\r\n        if (target !== null && target !== undefined) {\r\n            target.dispose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set current blend mode. Blend modes affects how the visual contents are rendered.\r\n     * @param blendMode {String} See {@link BlendMode} for more information.\r\n     * @see {@link BlendMode}\r\n     */\r\n    setBlendMode(blendMode:string):void {\r\n        if (!this._isInitialized) {\r\n            return;\r\n        }\r\n        if (this._currentBlendMode === blendMode) {\r\n            return;\r\n        }\r\n\r\n        var config:number[] = BMS[blendMode] || BMS[BlendMode.NORMAL];\r\n        var glc = this._context;\r\n        if (config[0] >= 0) {\r\n            glc.blendEquation(gl.FUNC_ADD);\r\n        } else {\r\n            glc.blendEquation(gl.FUNC_SUBTRACT);\r\n        }\r\n        glc.blendFunc(config[1], config[2]);\r\n        this._currentBlendMode = blendMode;\r\n    }\r\n\r\n    /**\r\n     * The default {@link RendererOptions} for instantiating a {@link WebGLRenderer}.\r\n     * @type {RendererOptions}\r\n     */\r\n    static DEFAULT_OPTIONS:RendererOptions = {\r\n        antialias: true,\r\n        depth: false,\r\n        transparent: true\r\n    };\r\n\r\n    /**\r\n     * Initializes the newly created {@link WebGLRenderer}.\r\n     * @param width {Number} The width, in pixels.\r\n     * @param height {Number} The height, in pixels.\r\n     * @param options {RendererOptions} Initialization options.\r\n     * @private\r\n     */\r\n    private __initialize(width:number, height:number, options:RendererOptions) {\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        this._isInitialized = true;\r\n        this._options = GLUtil.deepClone(options);\r\n\r\n        var canvas:HTMLCanvasElement = window.document.createElement(\"canvas\");\r\n        canvas.className = \"glantern-view\";\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        var attributes:WebGLContextAttributes = Object.create(null);\r\n        attributes.alpha = options.transparent;\r\n        attributes.antialias = options.antialias;\r\n        attributes.premultipliedAlpha = true;\r\n        attributes.depth = false;\r\n        this._context = WebGLUtils.setupWebGL(canvas, attributes);\r\n        this._view = canvas;\r\n\r\n        var glc = this._context;\r\n        glc.disable(gl.DEPTH_TEST);\r\n        glc.disable(gl.CULL_FACE);\r\n        glc.enable(gl.BLEND);\r\n        this.setBlendMode(BlendMode.NORMAL);\r\n\r\n        this._screenTarget = this.createRootRenderTarget();\r\n\r\n        canvas.addEventListener(\"webglcontextlost\", this.onContextLost.bind(this));\r\n        canvas.addEventListener(\"webglcontextrestored\", this.onContextRestored.bind(this));\r\n\r\n        this._tessellator = new libtess.GluTesselator();\r\n        this._shaderManager = new ShaderManager(this);\r\n        this._filterManager = new FilterManager(this);\r\n\r\n        this.setRenderTarget(null);\r\n\r\n        this.__initializeTessellator();\r\n    }\r\n\r\n    /**\r\n     * Initializes the tessellator.\r\n     * @private\r\n     */\r\n    private __initializeTessellator():void {\r\n        var tess = this._tessellator;\r\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA,\r\n            (data:number[], polyVertArray:number[][]):void => {\r\n                polyVertArray[polyVertArray.length - 1].push(data[0], data[1], data[2]);\r\n            });\r\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN_DATA,\r\n            (type:number, vertexArrays:number[][]):void => {\r\n                if (type !== libtess.primitiveType.GL_TRIANGLES) {\r\n                    console.warn('{TESS} expected TRIANGLES but got type: ' + type);\r\n                }\r\n                vertexArrays.push([]);\r\n            });\r\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR,\r\n            (errorCode:number):void => {\r\n                console.warn('{TESS} error number: ', errorCode);\r\n            });\r\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE,\r\n            (coords:number[], data:any, weight:number):number[] => {\r\n                return [coords[0], coords[1], coords[2]];\r\n            });\r\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG,\r\n            (flag:any):void => {\r\n                // Do nothing\r\n            });\r\n    }\r\n\r\n    /**\r\n     * The event handler for handling the lost of active {@link WebGLRenderingContext}.\r\n     * @param ev {Event} Event parameters.\r\n     */\r\n    private onContextLost(ev:Event):void {\r\n    }\r\n\r\n    /**\r\n     * The event handler for handling the restoration of active {@link WebGLRenderingContext}.\r\n     * @param ev {Event} Event parameters.\r\n     */\r\n    private onContextRestored(ev:Event):void {\r\n    }\r\n\r\n    private _currentRenderTarget:RenderTarget2D = null;\r\n    private _currentBlendMode:string = null;\r\n    private _screenTarget:RenderTarget2D = null;\r\n    private _filterManager:FilterManager = null;\r\n    private _shaderManager:ShaderManager = null;\r\n    private _tessellator:libtess.GluTesselator = null;\r\n    private _context:WebGLRenderingContext = null;\r\n    private _view:HTMLCanvasElement;\r\n    private _options:RendererOptions = null;\r\n    private _isInitialized:boolean = false;\r\n\r\n}\r\n\r\nvar BMS:{[k:string]:number[]} = Object.create(null);\r\nBMS[BlendMode.ADD] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.ALPHA] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.DARKEN] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.DIFFERENCE] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.ERASE] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.HARDLIGHT] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.INVERT] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.LAYER] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.LIGHTEN] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.MULTIPLY] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.NORMAL] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.OVERLAY] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.SCREEN] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.SHADER] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\nBMS[BlendMode.SUBTRACT] = [1, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n"],"sourceRoot":"/source/"}