{"version":3,"sources":["webgl/RenderHelper.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH,+BAA6B,kBAAkB,CAAC,CAAA;AAChD,kCAAgC,qBAAqB,CAAC,CAAA;AAGtD,yBAAuB,YAAY,CAAC,CAAA;AAMpC,uBAAqB,WAAW,CAAC,CAAA;AAEjC,IAAI,EAAE,GAAS,IAAK,CAAC,qBAAqB,IAAU,MAAO,CAAC,qBAAqB,CAAC;AAElF;IAAA;IA+JA,CAAC;IA7JU,6BAAgB,GAAvB,UAAwB,QAAsB,EAAE,QAAuB,EAAE,QAA0B,EAAE,MAAwB,EAAE,OAAyB,EAAE,WAAmB;QACzK,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,mBAAQ,CAAC,SAAS,CAAC,CAAC;QAExD,IAAI,MAAM,GAAoB,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC;QACnE,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC3B,IAAI,iBAAwB,CAAC;QAE7B,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACpB,MAAM,CAAC,YAAY,EAAE,CAAC;QAEtB,QAAQ,CAAC,cAAc,EAAE,CAAC;QAC1B,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QACnE,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC,EAAE,QAAQ,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1G,GAAG,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;QAE/C,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAChE,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC,EAAE,MAAM,CAAC,aAAa,EAAE,KAAK,EAAE,MAAM,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACtG,GAAG,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;QAE/C,OAAO,CAAC,cAAc,EAAE,CAAC;QAEzB,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,QAAQ,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;QACD,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC;QACpE,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACnF,CAAC;IAEM,8BAAiB,GAAxB,UAAyB,QAAsB,EAAE,QAAuB,EAAE,QAA0B,EAAE,MAAwB,EAAE,OAAyB,EAChI,KAAa,EAAE,KAAa,EAAE,WAAmB;QACtE,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,mBAAQ,CAAC,UAAU,CAAC,CAAC;QAEzD,IAAI,MAAM,GAAqB,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC;QACpE,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC3B,IAAI,iBAAwB,CAAC;QAE7B,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACpB,MAAM,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;QAC1E,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvB,MAAM,CAAC,YAAY,EAAE,CAAC;QAEtB,QAAQ,CAAC,cAAc,EAAE,CAAC;QAC1B,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QACnE,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC,EAAE,QAAQ,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1G,GAAG,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;QAE/C,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAChE,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC,EAAE,MAAM,CAAC,aAAa,EAAE,KAAK,EAAE,MAAM,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACtG,GAAG,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;QAE/C,OAAO,CAAC,cAAc,EAAE,CAAC;QAEzB,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,QAAQ,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;QACD,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC;QACpE,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACnF,CAAC;IAGM,8BAAiB,GAAxB,UAAyB,QAAsB,EAAE,MAAqB,EAAE,WAA0B,EAAE,KAAa,EAAE,KAAa,EAAE,WAAmB;QACjJ,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,mBAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,UAAC,CAAe;YACxG,IAAI,MAAM,GAAoB,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC;YAC5D,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACvB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBACjB,MAAM,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC;gBAChF,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;YACrE,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6BAAgB,GAAvB,UAAwB,QAAsB,EAAE,MAAqB,EAAE,WAA0B,EAAE,KAAa,EAAE,KAAa,EAAE,SAAkB,EAAE,KAAY,EAAE,WAAmB;QAClL,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,mBAAQ,CAAC,UAAU,EAAE,WAAW,EAAE,UAAC,CAAe;YACzG,IAAI,MAAM,GAAoB,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC;YAC5D,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACvB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACvB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACvB,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC/B,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBACjB,MAAM,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC;gBAChF,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;YACrE,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,wBAAW,GAAlB,UAAmB,QAAsB,EAAE,MAAqB,EAAE,WAA0B,EAAE,WAAmB;QAC7G,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,mBAAQ,CAAC,UAAU,EAAE,WAAW,EAAE,UAAC,CAAe;YACzG,IAAI,MAAM,GAAoB,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC;YAC5D,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACvB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,2BAAc,GAArB,UAAsB,QAAsB,EAAE,MAAqB,EAAE,WAA0B,EAAE,QAAe,EAC1F,WAAmB,EAAE,UAAoC;QAC3E,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC;QACX,CAAC;QAED,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC3B,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC9C,UAAU,CAAC,QAAQ,CAAC,CAAC;QACrB,IAAI,MAAM,GAAmB,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC;QAClE,iDAAiD;QACjD,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAClC,MAAM,CAAC,YAAY,EAAE,CAAC;QAEtB,EAAE,CAAC,CAAC,YAAY,CAAC,uBAAuB,KAAK,IAAI,CAAC,CAAC,CAAC;YAChD,IAAI,eAAe,GAAG;gBAClB,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC;gBACtB,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC;gBACpC,CAAC,EAAE,CAAC,EAAE,CAAC;gBACP,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC;aACxB,CAAC;YACF,YAAY,CAAC,uBAAuB,GAAG,qCAAiB,CAAC,MAAM,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC;QACrH,CAAC;QAED,IAAI,iBAAwB,CAAC;QAE7B,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QACnE,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,sBAAsB,GAAG,YAAY,CAAC,uBAAuB,CAAC;YAClE,sBAAsB,CAAC,cAAc,EAAE,CAAC;YACxC,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC,EAAE,sBAAsB,CAAC,aAAa,EAAE,KAAK,EAAE,sBAAsB,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACtI,GAAG,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;QACnD,CAAC;QAED,oEAAoE;QACpE,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;QACjE,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,aAAa,GAAG,+BAAc,CAAC,aAAa,CAAC;YACjD,aAAa,CAAC,cAAc,EAAE,CAAC;YAC/B,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC,EAAE,aAAa,CAAC,aAAa,EAAE,KAAK,EAAE,aAAa,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACpH,GAAG,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;QACnD,CAAC;QAED,IAAI,cAAc,GAAG,+BAAc,CAAC,cAAc,CAAC;QACnD,cAAc,CAAC,cAAc,EAAE,CAAC;QAEhC,WAAW,CAAC,QAAQ,EAAE,CAAC;QACvB,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,WAAW,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC;QACD,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,cAAc,CAAC,CAAC;QAC1E,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;QAC5B,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC;QAC/D,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,cAAc,CAAC,YAAY,EAAE,cAAc,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAC7F,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IAED,uEAAuE;IACxD,oCAAuB,GAAqB,IAAI,CAAC;IAEpE,mBAAC;AAAD,CA/JA,AA+JC,IAAA;AA/JqB,oBAAY,eA+JjC,CAAA;AAED,8BAA8B,MAAqB,EAAE,WAA0B;IAC3E,EAAE,CAAC,CAAC,eAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnC,OAAO,CAAC,IAAI,CAAC,kEAAkE,CAAC,CAAC;QACjF,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACD,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;QAC1B,OAAO,CAAC,IAAI,CAAC,uGAAuG,CAAC,CAAC;QACtH,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACD,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAChB,OAAO,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;QAC5D,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACD,EAAE,CAAC,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;QACzB,OAAO,CAAC,IAAI,CAAC,6DAA6D,CAAC,CAAC;QAC5E,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACD,MAAM,CAAC,IAAI,CAAC;AAChB,CAAC","file":"webgl/RenderHelper.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {RenderTarget2D} from \"./RenderTarget2D\";\r\nimport {PackedArrayBuffer} from \"./PackedArrayBuffer\";\r\nimport {WebGLRenderer} from \"./WebGLRenderer\";\r\nimport {ReplicateShader} from \"./shaders/ReplicateShader\";\r\nimport {ShaderID} from \"./ShaderID\";\r\nimport {BufferedShader} from \"./shaders/BufferedShader\";\r\nimport {Matrix3D} from \"../flash/geom/Matrix3D\";\r\nimport {CopyImageShader} from \"./shaders/CopyImageShader\";\r\nimport {Primitive2Shader} from \"./shaders/Primitive2Shader\";\r\nimport {PrimitiveShader} from \"./shaders/PrimitiveShader\";\r\nimport {GLUtil} from \"../GLUtil\";\r\n\r\nvar gl = (<any>this).WebGLRenderingContext || (<any>window).WebGLRenderingContext;\r\n\r\nexport abstract class RenderHelper {\r\n\r\n    static renderPrimitives(renderer:WebGLRenderer, renderTo:RenderTarget2D, vertices:PackedArrayBuffer, colors:PackedArrayBuffer, indices:PackedArrayBuffer, clearOutput:boolean):void {\r\n        renderer.shaderManager.selectShader(ShaderID.PRIMITIVE);\r\n\r\n        var shader = <PrimitiveShader>renderer.shaderManager.currentShader;\r\n        var glc = renderer.context;\r\n        var attributeLocation:number;\r\n\r\n        renderTo.activate();\r\n        shader.syncUniforms();\r\n\r\n        vertices.syncBufferData();\r\n        attributeLocation = shader.getAttributeLocation(\"aVertexPosition\");\r\n        glc.vertexAttribPointer(attributeLocation, 3, vertices.elementGLType, false, vertices.elementSize * 3, 0);\r\n        glc.enableVertexAttribArray(attributeLocation);\r\n\r\n        colors.syncBufferData();\r\n        attributeLocation = shader.getAttributeLocation(\"aVertexColor\");\r\n        glc.vertexAttribPointer(attributeLocation, 4, colors.elementGLType, false, colors.elementSize * 4, 0);\r\n        glc.enableVertexAttribArray(attributeLocation);\r\n\r\n        indices.syncBufferData();\r\n\r\n        if (clearOutput) {\r\n            renderTo.clear();\r\n        }\r\n        glc.viewport(0, 0, renderTo.originalWidth, renderTo.originalHeight);\r\n        glc.drawElements(gl.TRIANGLES, indices.elementCount, indices.elementGLType, 0);\r\n    }\r\n\r\n    static renderPrimitives2(renderer:WebGLRenderer, renderTo:RenderTarget2D, vertices:PackedArrayBuffer, colors:PackedArrayBuffer, indices:PackedArrayBuffer,\r\n                             flipX:boolean, flipY:boolean, clearOutput:boolean):void {\r\n        renderer.shaderManager.selectShader(ShaderID.PRIMITIVE2);\r\n\r\n        var shader = <Primitive2Shader>renderer.shaderManager.currentShader;\r\n        var glc = renderer.context;\r\n        var attributeLocation:number;\r\n\r\n        renderTo.activate();\r\n        shader.setOriginalSize([renderTo.originalWidth, renderTo.originalHeight]);\r\n        shader.setFlipX(flipX);\r\n        shader.setFlipY(flipY);\r\n        shader.syncUniforms();\r\n\r\n        vertices.syncBufferData();\r\n        attributeLocation = shader.getAttributeLocation(\"aVertexPosition\");\r\n        glc.vertexAttribPointer(attributeLocation, 3, vertices.elementGLType, false, vertices.elementSize * 3, 0);\r\n        glc.enableVertexAttribArray(attributeLocation);\r\n\r\n        colors.syncBufferData();\r\n        attributeLocation = shader.getAttributeLocation(\"aVertexColor\");\r\n        glc.vertexAttribPointer(attributeLocation, 4, colors.elementGLType, false, colors.elementSize * 4, 0);\r\n        glc.enableVertexAttribArray(attributeLocation);\r\n\r\n        indices.syncBufferData();\r\n\r\n        if (clearOutput) {\r\n            renderTo.clear();\r\n        }\r\n        glc.viewport(0, 0, renderTo.originalWidth, renderTo.originalHeight);\r\n        glc.drawElements(gl.TRIANGLES, indices.elementCount, indices.elementGLType, 0);\r\n    }\r\n\r\n\r\n    static copyTargetContent(renderer:WebGLRenderer, source:RenderTarget2D, destination:RenderTarget2D, flipX:boolean, flipY:boolean, clearOutput:boolean):void {\r\n        RenderHelper.renderBuffered(renderer, source, destination, ShaderID.REPLICATE, clearOutput, (r:WebGLRenderer):void => {\r\n            var shader = <ReplicateShader>r.shaderManager.currentShader;\r\n            shader.setFlipX(flipX);\r\n            shader.setFlipY(flipY);\r\n            if (flipX || flipY) {\r\n                shader.setOriginalSize([destination.originalWidth, destination.originalHeight]);\r\n                shader.setFitSize([destination.fitWidth, destination.fitHeight]);\r\n            }\r\n        });\r\n    }\r\n\r\n    static copyImageContent(renderer:WebGLRenderer, source:RenderTarget2D, destination:RenderTarget2D, flipX:boolean, flipY:boolean, transform:Matrix3D, alpha:number, clearOutput:boolean):void {\r\n        RenderHelper.renderBuffered(renderer, source, destination, ShaderID.COPY_IMAGE, clearOutput, (r:WebGLRenderer):void => {\r\n            var shader = <CopyImageShader>r.shaderManager.currentShader;\r\n            shader.setFlipX(flipX);\r\n            shader.setFlipY(flipY);\r\n            shader.setAlpha(alpha);\r\n            shader.setTransform(transform);\r\n            if (flipX || flipY) {\r\n                shader.setOriginalSize([destination.originalWidth, destination.originalHeight]);\r\n                shader.setFitSize([destination.fitWidth, destination.fitHeight]);\r\n            }\r\n        });\r\n    }\r\n\r\n    static renderImage(renderer:WebGLRenderer, source:RenderTarget2D, destination:RenderTarget2D, clearOutput:boolean):void {\r\n        RenderHelper.renderBuffered(renderer, source, destination, ShaderID.COPY_IMAGE, clearOutput, (r:WebGLRenderer):void => {\r\n            var shader = <CopyImageShader>r.shaderManager.currentShader;\r\n            shader.setFlipX(false);\r\n            shader.setFlipY(false);\r\n        });\r\n    }\r\n\r\n    static renderBuffered(renderer:WebGLRenderer, source:RenderTarget2D, destination:RenderTarget2D, shaderID:number,\r\n                          clearOutput:boolean, shaderInit:(r:WebGLRenderer) => void):void {\r\n        if (!__checkRenderTargets(source, destination)) {\r\n            return;\r\n        }\r\n\r\n        var glc = renderer.context;\r\n        renderer.shaderManager.selectShader(shaderID);\r\n        shaderInit(renderer);\r\n        var shader = <BufferedShader>renderer.shaderManager.currentShader;\r\n        // Target must have a 'uSampler' sample2D uniform\r\n        shader.setTexture(source.texture);\r\n        shader.syncUniforms();\r\n\r\n        if (RenderHelper._glVertexPositionBuffer === null) {\r\n            var vertexPositions = [\r\n                0, source.fitHeight, 0,\r\n                source.fitWidth, source.fitHeight, 0,\r\n                0, 0, 0,\r\n                source.fitWidth, 0, 0\r\n            ];\r\n            RenderHelper._glVertexPositionBuffer = PackedArrayBuffer.create(glc, vertexPositions, gl.FLOAT, gl.ARRAY_BUFFER);\r\n        }\r\n\r\n        var attributeLocation:number;\r\n\r\n        attributeLocation = shader.getAttributeLocation(\"aVertexPosition\");\r\n        if (attributeLocation >= 0) {\r\n            var glVertexPositionBuffer = RenderHelper._glVertexPositionBuffer;\r\n            glVertexPositionBuffer.syncBufferData();\r\n            glc.vertexAttribPointer(attributeLocation, 3, glVertexPositionBuffer.elementGLType, false, glVertexPositionBuffer.elementSize * 3, 0);\r\n            glc.enableVertexAttribArray(attributeLocation);\r\n        }\r\n\r\n        // Some shaders, e.g. the blur-2 shader, has no texture coordinates.\r\n        attributeLocation = shader.getAttributeLocation(\"aTextureCoord\");\r\n        if (attributeLocation >= 0) {\r\n            var textureCoords = RenderTarget2D.textureCoords;\r\n            textureCoords.syncBufferData();\r\n            glc.vertexAttribPointer(attributeLocation, 2, textureCoords.elementGLType, false, textureCoords.elementSize * 2, 0);\r\n            glc.enableVertexAttribArray(attributeLocation);\r\n        }\r\n\r\n        var textureIndices = RenderTarget2D.textureIndices;\r\n        textureIndices.syncBufferData();\r\n\r\n        destination.activate();\r\n        if (clearOutput) {\r\n            destination.clear();\r\n        }\r\n        glc.viewport(0, 0, destination.originalWidth, destination.originalHeight);\r\n        glc.enable(gl.SCISSOR_TEST);\r\n        glc.scissor(0, 0, source.originalWidth, source.originalHeight);\r\n        glc.drawElements(gl.TRIANGLES, textureIndices.elementCount, textureIndices.elementGLType, 0);\r\n        glc.disable(gl.SCISSOR_TEST);\r\n    }\r\n\r\n    // Be careful! Manually dispose it when the whole module is finalizing.\r\n    private static _glVertexPositionBuffer:PackedArrayBuffer = null;\r\n\r\n}\r\n\r\nfunction __checkRenderTargets(source:RenderTarget2D, destination:RenderTarget2D):boolean {\r\n    if (GLUtil.isUndefinedOrNull(source)) {\r\n        console.warn(\"Cannot render a null RenderTarget2D onto another RenderTarget2D.\");\r\n        return false;\r\n    }\r\n    if (source.texture === null) {\r\n        console.warn(\"Cannot use a RenderTarget2D without texture-based frame buffer to render onto another RenderTarget2D.\");\r\n        return false;\r\n    }\r\n    if (source.isRoot) {\r\n        console.warn(\"Cannot use a root RenderTarget2D as source.\");\r\n        return false;\r\n    }\r\n    if (source === destination) {\r\n        console.warn(\"Source and destination must not be the same RenderTarget2D.\");\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n"],"sourceRoot":"/source/"}