{"version":3,"sources":["webgl/shaders/BlurXShader.ts"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,6BAA2B,iBAAiB,CAAC,CAAA;AAG7C,8BAA4B,kBAAkB,CAAC,CAAA;AAC/C,gCAA8B,oBAAoB,CAAC,CAAA;AACnD,+BAA6B,kBAAkB,CAAC,CAAA;AAChD,8BAA4B,kBAAkB,CAAC,CAAA;AAE/C;IAAiC,+BAAc;IAE3C,qBAAY,OAAqB;QAC7B,kBAAM,OAAO,EAAE,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,eAAe,CAAC,CAAC;IAC3E,CAAC;IAED,iCAAW,GAAX,UAAY,QAAe;QACvB,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,QAAQ,GAAG,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC;IACrD,CAAC;IAED,iCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;IACjD,CAAC;IAMS,iCAAW,GAArB,UAAsB,OAAqB,EAAE,QAAkC,EAAE,UAAsC;QACnH,gBAAK,CAAC,WAAW,YAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAEjD,IAAI,CAAc,CAAC;QAEnB,CAAC,GAAG,IAAI,2BAAY,EAAE,CAAC;QACvB,CAAC,CAAC,IAAI,GAAG,WAAW,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,6BAAa,CAAC,GAAG,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;QACZ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAC;IAdM,6BAAiB,GAAU,aAAa,CAAC;IACzC,2BAAe,GAAU,iCAAe,CAAC,IAAI,CAAC;IAC9C,yBAAa,GAAU,6BAAa,CAAC,KAAK,CAAC;IActD,kBAAC;AAAD,CAjCA,AAiCC,CAjCgC,+BAAc,GAiC9C;AAjCY,mBAAW,cAiCvB,CAAA","file":"webgl/shaders/BlurXShader.js","sourcesContent":["/**\r\n * Created by MIC on 2015/11/18.\r\n */\r\n\r\nimport {UniformCache} from \"../UniformCache\";\r\nimport {AttributeCache} from \"../AttributeCache\";\r\nimport {ShaderManager} from \"../ShaderManager\";\r\nimport {VertexShaders} from \"../VertexShaders\";\r\nimport {FragmentShaders} from \"../FragmentShaders\";\r\nimport {BufferedShader} from \"./BufferedShader\";\r\nimport {WebGLDataType} from \"../WebGLDataType\";\r\n\r\nexport class BlurXShader extends BufferedShader {\r\n\r\n    constructor(manager:ShaderManager) {\r\n        super(manager, BlurXShader.VERTEX_SOURCE, BlurXShader.FRAGMENT_SOURCE);\r\n    }\r\n\r\n    setStrength(strength:number):void {\r\n        if (strength < 0) {\r\n            strength = 1;\r\n        }\r\n        this._uniforms.get(\"uStrength\").value = strength;\r\n    }\r\n\r\n    getStrength():number {\r\n        return this._uniforms.get(\"uStrength\").value;\r\n    }\r\n\r\n    static SHADER_CLASS_NAME:string = \"BlurXShader\";\r\n    static FRAGMENT_SOURCE:string = FragmentShaders.blur;\r\n    static VERTEX_SOURCE:string = VertexShaders.blurX;\r\n\r\n    protected __localInit(manager:ShaderManager, uniforms:Map<string, UniformCache>, attributes:Map<string, AttributeCache>):void {\r\n        super.__localInit(manager, uniforms, attributes);\r\n\r\n        var u:UniformCache;\r\n\r\n        u = new UniformCache();\r\n        u.name = \"uStrength\";\r\n        u.type = WebGLDataType.U1F;\r\n        u.value = 5;\r\n        uniforms.set(u.name, u);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}